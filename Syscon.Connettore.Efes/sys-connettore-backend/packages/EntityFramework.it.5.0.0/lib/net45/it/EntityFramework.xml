<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>EntityFramework</name>
  </assembly>
  <members>
    <member name="T:System.Data.Entity.CreateDatabaseIfNotExists`1">
      <summary>Implementazione di <see cref="T:System.Data.Entity.IDatabaseInitializer`1" /> che ricrea il database e, se necessario, ne ripete il seeding solo se il database non esiste. Per eseguire il seeding del database, creare una classe derivata ed eseguire l'override del metodo Seed. </summary>
      <typeparam name="TContext">Tipo di contesto.</typeparam>
    </member>
    <member name="M:System.Data.Entity.CreateDatabaseIfNotExists`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.CreateDatabaseIfNotExists`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(`0)">
      <summary>Esegue la strategia per inizializzare il database per il contesto specificato. </summary>
      <param name="context">Contesto.</param>
    </member>
    <member name="M:System.Data.Entity.CreateDatabaseIfNotExists`1.Seed(`0)">
      <summary>Se sottoposto a override, aggiunge i dati al contesto per il seeding.  L'implementazione predefinita non esegue alcuna operazione. </summary>
      <param name="context">Contesto di cui eseguire il seeding.</param>
    </member>
    <member name="T:System.Data.Entity.Database">
      <summary>Un'istanza di questa classe viene ottenuta da un oggetto <see cref="T:System.Data.Entity.DbContext" /> e può essere utilizzata per gestire il database effettivo che supporta un oggetto <see cref="T:System.Data.Entity.DbContext" /> o una connessione. Include la creazione, l'eliminazione e il controllo dell'esistenza di un database. L'eliminazione e il controllo dell'esistenza di un database possono essere eseguiti utilizzando solo una connessione, senza un contesto completo, mediante i metodi statici di questa classe. </summary>
    </member>
    <member name="M:System.Data.Entity.Database.CompatibleWithModel(System.Boolean)">
      <summary>Tale metodo restituisce true se il contesto dispone di un hash del modello e il database contiene un hash del modello e tali hash corrispondono.  Ciò indica che il modello utilizzato per creare il database corrisponde al modello corrente e possono pertanto essere utilizzati insieme. </summary>
      <returns>True se l'hash del modello nel contesto e nel database corrispondono; in caso contrario, false. </returns>
      <param name="throwIfNoMetadata">Se impostato su true, verrà generata un'eccezione se non sono presenti metadati nel modello associato al contesto o nel database stesso.  Se impostato su false, questo metodo restituirà true se non sono presenti metadati.</param>
    </member>
    <member name="P:System.Data.Entity.Database.Connection">
      <summary>Restituisce la connessione utilizzata da questo contesto.  È possibile che venga inizializzato il contesto e creata la connessione se non esiste già. </summary>
      <returns>Connessione utilizzata da questo contesto.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.Create">
      <summary>Crea un nuovo database nel server database per il modello definito nel contesto di supporto. Se tale metodo viene chiamato prima dell'esecuzione della strategia di inizializzazione del database, l'esecuzione della strategia verrà disabilitata. </summary>
    </member>
    <member name="M:System.Data.Entity.Database.CreateIfNotExists">
      <summary>Crea un nuovo database nel server database per il modello definito nel contesto di supporto, ma solo se un database con lo stesso nome non esiste già nel server. </summary>
      <returns>True se il database non esisteva ed è stato creato; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Database.DefaultConnectionFactory">
      <summary>Factory di connessione da utilizzare quando viene creato un oggetto <see cref="T:System.Data.Common.DbConnection" /> da un nome del database o una stringa di connessione. </summary>
      <returns>Factory di connessione da utilizzare.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.Delete">
      <summary>Elimina il database nel server database se esiste; in caso contrario, non esegue alcuna operazione. </summary>
      <returns>True se il database esisteva ed è stato eliminato; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.Delete(System.Data.Common.DbConnection)">
      <summary>Elimina il database nel server database se esiste; in caso contrario, non esegue alcuna operazione. </summary>
      <returns>True se il database esisteva ed è stato eliminato; in caso contrario, false.</returns>
      <param name="existingConnection">Connessione esistente al database.</param>
    </member>
    <member name="M:System.Data.Entity.Database.Delete(System.String)">
      <summary>Elimina il database nel server database se esiste; in caso contrario, non esegue alcuna operazione. La connessione al database viene creata utilizzando il nome del database o la stringa di connessione specificata nella stessa modalità descritta nella documentazione per la classe <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <returns>True se il database esisteva ed è stato eliminato; in caso contrario, false.</returns>
      <param name="nameOrConnectionString">Nome del database o stringa di connessione al database.</param>
    </member>
    <member name="M:System.Data.Entity.Database.Equals(System.Object)">
      <summary>Restituisce un valore che indica se il database specificato è uguale al database corrente.</summary>
      <returns>True se il database specificato è uguale al database corrente; in caso contrario, false.</returns>
      <param name="obj">Database da confrontare con l'oggetto corrente. </param>
    </member>
    <member name="M:System.Data.Entity.Database.ExecuteSqlCommand(System.String,System.Object[])">
      <summary>Esegue il comando DDL/DML specificato sul database. </summary>
      <returns>Risultato restituito dal database dopo l'esecuzione del comando.</returns>
      <param name="sql">Stringa di comando.</param>
      <param name="parameters">Parametri da applicare alla stringa di comando.</param>
    </member>
    <member name="M:System.Data.Entity.Database.Exists">
      <summary>Controlla se il database esiste nel server. </summary>
      <returns>True se il database esiste; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.Exists(System.Data.Common.DbConnection)">
      <summary>Controlla se il database esiste nel server. </summary>
      <returns>True se il database esiste; in caso contrario, false.</returns>
      <param name="existingConnection">Connessione esistente al database.</param>
    </member>
    <member name="M:System.Data.Entity.Database.Exists(System.String)">
      <summary>Controlla se il database esiste nel server. La connessione al database viene creata utilizzando il nome del database o la stringa di connessione specificata nella stessa modalità descritta nella documentazione per la classe <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <returns>True se il database esiste; in caso contrario, false.</returns>
      <param name="nameOrConnectionString">Nome del database o stringa di connessione al database.</param>
    </member>
    <member name="M:System.Data.Entity.Database.GetHashCode">
      <summary>Restituisce la funzione hash per il database specificato.</summary>
      <returns>Funzione hash per il database specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.GetType">
      <summary>Ottiene il tipo per il database corrente.</summary>
      <returns>Tipo per il database corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Database.Initialize(System.Boolean)">
      <summary>Esegue l'oggetto <see cref="T:System.Data.Entity.IDatabaseInitializer`1" /> registrato in questo contesto.  Se il parametro <paramref name="force" /> viene impostato su true, l'inizializzatore verrà eseguito indipendentemente dal fatto che sia stato eseguito prima o meno.  Ciò può essere utile se un database viene eliminato mentre un'applicazione è in esecuzione e deve essere reinizializzato. </summary>
      <param name="force">Se impostato su true, l'inizializzatore viene eseguito anche se è già stato eseguito.</param>
    </member>
    <member name="M:System.Data.Entity.Database.SetInitializer``1(System.Data.Entity.IDatabaseInitializer{``0})">
      <summary>Ottiene o imposta la strategia di inizializzazione del database. La strategia di inizializzazione del database viene chiamata quando viene inizializzata l'istanza di <see cref="T:System.Data.Entity.DbContext" /> da un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbCompiledModel" />.  </summary>
      <param name="strategy">Strategia.</param>
      <typeparam name="TContext">Tipo di contesto.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Database.SqlQuery``1(System.String,System.Object[])">
      <summary>Crea una query SQL non elaborata che restituirà gli elementi del tipo generico specificato. Il tipo può essere un qualsiasi tipo che dispone di proprietà che corrispondono ai nomi delle colonne restituite dalla query o può essere un semplice tipo primitivo. </summary>
      <returns>Oggetto <see cref="T:System.Collections.Generic.IEnumerable`1" /> che eseguirà la query quando viene enumerato.</returns>
      <param name="sql">Stringa di query SQL.</param>
      <param name="parameters">Parametri da applicare alla stringa di query SQL.</param>
      <typeparam name="TElement">Tipo di oggetto restituito dalla query.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Database.SqlQuery(System.Type,System.String,System.Object[])">
      <summary>Crea una query SQL non elaborata che restituirà gli elementi del tipo specificato. Il tipo può essere un qualsiasi tipo che dispone di proprietà che corrispondono ai nomi delle colonne restituite dalla query o può essere un semplice tipo primitivo. </summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerable" /> che eseguirà la query quando viene enumerato.</returns>
      <param name="elementType">Tipo di oggetto restituito dalla query.</param>
      <param name="sql">Stringa di query SQL.</param>
      <param name="parameters">Parametri da applicare alla stringa di query SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Database.ToString">
      <summary>Restituisce una rappresentazione di stringa del database.</summary>
      <returns>Rappresentazione di stringa del database.</returns>
    </member>
    <member name="T:System.Data.Entity.DbContext">
      <summary>Fornisce funzionalità per l'esecuzione di query e l'utilizzo di dati delle entità come oggetti.</summary>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor">
      <summary>Costruisce una nuova istanza del contesto utilizzando le convenzioni per creare il nome del database al quale verrà effettuata una connessione.  Per convenzione, il nome è costituito dal nome completo (spazio dei nomi + nome della classe) della classe del contesto derivato. Per ulteriori informazioni sul modo in cui viene utilizzata per creare una connessione, vedere la sezione Note di <see cref="T:System.Data.Entity.DbContext" />. </summary>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Common.DbConnection,System.Boolean)">
      <summary>Costruisce una nuova istanza del contesto utilizzando la connessione esistente per connettersi a un database. La connessione non verrà eliminata quando viene eliminato il contesto. </summary>
      <param name="existingConnection">Connessione esistente da utilizzare per il nuovo contesto.</param>
      <param name="contextOwnsConnection">Se impostato su true, la connessione viene eliminata quando viene eliminato il contesto; in caso contrario, il chiamante deve eliminare la connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.DbCompiledModel,System.Boolean)">
      <summary>Costruisce una nuova istanza del contesto utilizzando la connessione esistente per connettersi a un database e la inizializza dal modello specificato. La connessione non verrà eliminata quando viene eliminato il contesto. </summary>
      <param name="existingConnection">Connessione esistente da utilizzare per il nuovo contesto.</param>
      <param name="model">Modello che supporta questo contesto.</param>
      <param name="contextOwnsConnection">Se impostato su true, la connessione viene eliminata quando viene eliminato il contesto; in caso contrario, il chiamante deve eliminare la connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Entity.Infrastructure.DbCompiledModel)">
      <summary>Costruisce una nuova istanza del contesto utilizzando le convenzioni per creare il nome del database al quale verrà effettuata una connessione e la inizializza dal modello specificato. Per convenzione, il nome è costituito dal nome completo (spazio dei nomi + nome della classe) della classe del contesto derivato. Per ulteriori informazioni sul modo in cui viene utilizzata per creare una connessione, vedere la sezione Note di <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <param name="model">Modello che supporta questo contesto.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Objects.ObjectContext,System.Boolean)">
      <summary>Costruisce una nuova istanza del contesto in base a un oggetto <see cref="P:System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext" /> esistente.  </summary>
      <param name="objectContext">Oggetto <see cref="P:System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext" /> esistente che consente di eseguire il wrapping del nuovo contesto.</param>
      <param name="dbContextOwnsObjectContext">Se impostato su true, <see cref="P:System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext" /> viene eliminato all'eliminazione di <see cref="T:System.Data.Entity.DbContext" />; in caso contrario, il chiamante deve eliminare la connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.String)">
      <summary>Costruisce una nuova istanza del contesto utilizzando la stringa specificata come nome o stringa di connessione per il database al quale verrà effettuata una connessione. Per ulteriori informazioni sul modo in cui viene utilizzata per creare una connessione, vedere la sezione Note di <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <param name="nameOrConnectionString">Nome del database o stringa di connessione.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.#ctor(System.String,System.Data.Entity.Infrastructure.DbCompiledModel)">
      <summary>Costruisce una nuova istanza del contesto utilizzando la stringa specificata come nome o stringa di connessione per il database al quale verrà effettuata una connessione e la inizializza dal modello specificato. Per ulteriori informazioni sul modo in cui viene utilizzata per creare una connessione, vedere la sezione Note di <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <param name="nameOrConnectionString">Nome del database o stringa di connessione.</param>
      <param name="model">Modello che supporta questo contesto.</param>
    </member>
    <member name="P:System.Data.Entity.DbContext.ChangeTracker">
      <summary>Fornisce l'accesso alle funzionalità del contesto che gestiscono il rilevamento delle modifiche delle entità. </summary>
      <returns>Oggetto utilizzato per accedere alle funzionalità che gestiscono il rilevamento delle modifiche.</returns>
    </member>
    <member name="P:System.Data.Entity.DbContext.Configuration">
      <summary>Fornisce l'accesso alle opzioni di configurazione del contesto. </summary>
      <returns>Oggetto utilizzato per accedere alle opzioni di configurazione.</returns>
    </member>
    <member name="P:System.Data.Entity.DbContext.Database">
      <summary>Crea un'istanza di database per questo contesto e consente di eseguire la creazione, l'eliminazione o il controllo dell'esistenza del database sottostante. </summary>
      <returns>Database creato.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.Dispose">
      <summary>Chiama il metodo Dispose protetto. </summary>
    </member>
    <member name="M:System.Data.Entity.DbContext.Dispose(System.Boolean)">
      <summary>Elimina il contesto. Viene eliminato anche l'oggetto <see cref="T:System.Data.Objects.ObjectContext" /> sottostante se è stato creato da tale contesto o se la proprietà è stata passata a questo contesto alla creazione del contesto. Viene eliminata anche la connessione al database, oggetto <see cref="T:System.Data.Common.DbConnection" />, se è stata creata da tale contesto o se la proprietà è stata passata a questo contesto durante la creazione del contesto. </summary>
      <param name="disposing">True per rilasciare sia le risorse gestite sia quelle non gestite, false per rilasciare solo quelle non gestite.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.Entry(System.Object)">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> per l'entità specificata che fornisce l'accesso alle informazioni sull'entità e la possibilità di eseguire azioni sull'entità. </summary>
      <returns>Voce per l'entità.</returns>
      <param name="entity">Entità.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.Entry``1(``0)">
      <summary>Ottiene un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> per l'entità specificata che fornisce l'accesso alle informazioni sull'entità e la possibilità di eseguire azioni sull'entità. </summary>
      <returns>Voce per l'entità.</returns>
      <param name="entity">Entità.</param>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbContext.Equals(System.Object)">
      <summary>Restituisce un valore che indica se il contesto specificato è uguale al contesto corrente.</summary>
      <returns>True se il contesto specificato è uguale al contesto corrente; in caso contrario, false.</returns>
      <param name="obj">Contesto da confrontare con l'oggetto corrente. </param>
    </member>
    <member name="M:System.Data.Entity.DbContext.GetHashCode">
      <summary>Restituisce la funzione hash per il contesto specificato.</summary>
      <returns>Funzione hash per il contesto specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.GetType">
      <summary>Ottiene il tipo per il contesto corrente.</summary>
      <returns>Tipo per il contesto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.GetValidationErrors">
      <summary>Convalida le entità rilevate e restituisce una raccolta di <see cref="T:System.Data.Entity.Validation.DbEntityValidationResult" /> che contiene i risultati della convalida. </summary>
      <returns>Raccolta dei risultati della convalida per le entità non valide. La raccolta non è mai null e non deve contenere valori null o risultati per le entità valide. </returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
      <summary>Tale metodo viene chiamato dopo l'inizializzazione del modello di un contesto derivato, ma prima che il modello sia stato bloccato e utilizzato per inizializzare il contesto.  L'implementazione predefinita di tale metodo non esegue alcuna operazione, ma è possibile eseguirne l'override in una classe derivata in modo tale da poter configurare ulteriormente il modello prima che venga bloccato. </summary>
      <param name="modelBuilder">Generatore che definisce il modello per il contesto creato.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.SaveChanges">
      <summary>Salva tutte le modifiche apportate in questo contesto nel database sottostante. </summary>
      <returns>Numero di oggetti scritti nel database sottostante.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.Set``1">
      <summary>Restituisce <see cref="T:System.Data.Entity.DbSet" /> per il tipo specificato, consentendo l'esecuzione di operazioni CRUD per l'entità specificata nel contesto. </summary>
      <returns>Istanza di <see cref="T:System.Data.Entity.DbSet" /> per il tipo di entità specificato.</returns>
      <typeparam name="TEntity">Tipo di entità per cui deve essere restituito un set.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbContext.Set(System.Type)">
      <summary>Restituisce <see cref="T:System.Data.Entity.DbSet" /> per il tipo specificato, consentendo l'esecuzione di operazioni CRUD per l'entità specificata nel contesto. </summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.DbSet" /> per il tipo di entità specificato.</returns>
      <param name="entityType">Tipo di entità per cui deve essere restituito un set.</param>
    </member>
    <member name="M:System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
      <summary>Punto di estensione che consente all'utente di eseguire l'override del comportamento predefinito della convalida solo delle entità Added e Modified. </summary>
      <returns>True per procedere con la convalida; in caso contrario, false.</returns>
      <param name="entityEntry">Istanza di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> da convalidare.</param>
    </member>
    <member name="P:System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Objects.ObjectContext" /> Entity Framework sottostante questo contesto.</summary>
      <returns>Restituisce <see cref="T:System.Data.Objects.ObjectContext" />.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.ToString">
      <summary>Restituisce una rappresentazione in forma di stringa del contesto.</summary>
      <returns>Rappresentazione di stringa del contesto.</returns>
    </member>
    <member name="M:System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
      <summary>Punto di estensione che consente all'utente di personalizzare la convalida di un'entità o di filtrare i risultati della convalida. Chiamato da <see cref="M:System.Data.Entity.DbContext.GetValidationErrors" />. </summary>
      <returns>Risultato della convalida dell'entità. Può essere null se viene sottoposto a override.</returns>
      <param name="entityEntry">Istanza di DbEntityEntry da convalidare.</param>
      <param name="items">Dizionario definito dall'utente che contiene informazioni aggiuntive per la convalida personalizzata. Verrà passato a <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /> e verrà esposto come <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.Items" />. Questo parametro è facoltativo e può essere null.</param>
    </member>
    <member name="T:System.Data.Entity.DbExtensions">
      <summary>Contiene un set di metodi di estensione per facilitare le attività comuni.</summary>
    </member>
    <member name="M:System.Data.Entity.DbExtensions.AsNoTracking(System.Linq.IQueryable)">
      <summary>Restituisce una nuova query in cui le entità restituite non verranno memorizzate nella cache di <see cref="T:System.Data.Entity.DbContext" /> o <see cref="T:System.Data.Objects.ObjectContext" />. </summary>
      <returns>Una nuova query a cui è stato applicato NoTracking o la query di origine se NoTracking non è supportato.</returns>
      <param name="source">Query di origine.</param>
    </member>
    <member name="M:System.Data.Entity.DbExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})">
      <summary>Restituisce una nuova query in cui le entità restituite non verranno memorizzate nella cache di <see cref="T:System.Data.Entity.DbContext" /> o <see cref="T:System.Data.Objects.ObjectContext" />. </summary>
      <returns>Una nuova query a cui è stato applicato NoTracking o la query di origine se NoTracking non è supportato.</returns>
      <param name="source">Query di origine.</param>
      <typeparam name="T">Tipo dell'elemento.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbExtensions.Include(System.Linq.IQueryable,System.String)">
      <summary>Specifica gli oggetti correlati da includere nei risultati della query.</summary>
      <returns>Nuovo oggetto IQueryable con il percorso della query definito.</returns>
      <param name="source">Oggetto IQueryable di origine sul quale chiamare Include.</param>
      <param name="path">Elenco di oggetti correlati separato da punti da restituire nei risultati della query.</param>
    </member>
    <member name="M:System.Data.Entity.DbExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Specifica gli oggetti correlati da includere nei risultati della query.</summary>
      <returns>Nuovo oggetto IQueryable di T con il percorso della query definito.</returns>
      <param name="source">Oggetto IQueryable di origine sul quale chiamare Include.</param>
      <param name="path">Espressione lambda che rappresenta il percorso da includere.</param>
      <typeparam name="T">Tipo di entità per la quale viene eseguita una query.</typeparam>
      <typeparam name="TProperty">Tipo di proprietà di navigazione da includere.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbExtensions.Include``1(System.Linq.IQueryable{``0},System.String)">
      <summary>Specifica gli oggetti correlati da includere nei risultati della query.</summary>
      <returns>Nuovo oggetto IQueryable di T con il percorso della query definito.</returns>
      <param name="source">Oggetto IQueryable di origine sul quale chiamare Include.</param>
      <param name="path">Elenco di oggetti correlati separato da punti da restituire nei risultati della query.</param>
      <typeparam name="T">Tipo di entità per la quale viene eseguita una query.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbExtensions.Load(System.Linq.IQueryable)">
      <summary>Metodo di estensione su IQueryable che enumera i risultati della query. Equivale a chiamare ToList senza creare effettivamente l'elenco. </summary>
      <param name="source">Query di origine.</param>
    </member>
    <member name="M:System.Data.Entity.DbExtensions.ToBindingList``1(System.Collections.ObjectModel.ObservableCollection{``0})">
      <summary> Restituisce un'implementazione di <see cref="T:System.ComponentModel.BindingList`1" /> che resta sincronizzato con l'oggetto <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> specificato. </summary>
      <returns>Elenco di associazioni.</returns>
      <param name="source">Raccolta con la quale resta sincronizzato l'elenco di associazioni.</param>
      <typeparam name="T">Tipo dell'elemento.</typeparam>
    </member>
    <member name="T:System.Data.Entity.DbModelBuilder">
      <summary>
        <see cref="T:System.Data.Entity.DbModelBuilder" /> viene utilizzato per eseguire il mapping delle classi CLR a uno schema del database. Tale approccio incentrato sul codice per la compilazione di un modello Entity Data Model (EDM) è noto come Code First. </summary>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DbModelBuilder" />. Il processo di individuazione del modello iniziale utilizzerà il set di convenzioni incluso nella versione più recente di Entity Framework installata nel computer.  </summary>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.#ctor(System.Data.Entity.DbModelBuilderVersion)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DbModelBuilder" /> che utilizzerà un set di convenzioni specifico per individuare il modello iniziale. </summary>
      <param name="modelBuilderVersion">Versione delle convenzioni da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Build(System.Data.Common.DbConnection)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbModel" /> basato sulla configurazione eseguita mediante questo generatore. La connessione viene utilizzata per determinare il provider del database utilizzato poiché influisce sul livello di database del modello generato. </summary>
      <returns>Modello compilato.</returns>
      <param name="providerConnection">Connessione da utilizzare per determinare le informazioni sul provider.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Build(System.Data.Entity.Infrastructure.DbProviderInfo)">
      <summary>Crea un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbModel" /> basato sulla configurazione eseguita mediante questo generatore. È necessario specificare le informazioni sul provider poiché quest'ultimo influisce sul livello di database del modello generato. Per SqlClient il nome invariante è 'System.Data.SqlClient' e il token del manifesto è l'anno della versione, ad esempio '2005' o '2008'. </summary>
      <returns>Modello compilato.</returns>
      <param name="providerInfo">Il provider del database con il quale verrà utilizzato il modello.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.ComplexType``1">
      <summary>Registra un tipo come tipo complesso nel modello e restituisce un oggetto che può essere utilizzato per configurare il tipo complesso. Tale metodo può essere chiamato più volte per lo stesso tipo per eseguire più righe della configurazione. </summary>
      <returns>Oggetto di configurazione per il tipo complesso specificato.</returns>
      <typeparam name="TComplexType">Tipo da registrare o configurare.</typeparam>
    </member>
    <member name="P:System.Data.Entity.DbModelBuilder.Configurations">
      <summary>Ottiene l'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar" /> per l'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />.  Il registrar consente di registrare le configurazioni del tipo complesso e del tipo di entità derivato con il generatore. </summary>
      <returns>Configurazione per l'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />.</returns>
    </member>
    <member name="P:System.Data.Entity.DbModelBuilder.Conventions">
      <summary>Fornisce l'accesso alle impostazioni dell'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" /> che gestisce le convenzioni. </summary>
      <returns>Accesso all'impostazione.</returns>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Entity``1">
      <summary>Registra un tipo di entità come parte del modello e restituisce un oggetto che può essere utilizzato per configurare l'entità. Tale metodo può essere chiamato più volte per la stessa entità per eseguire più righe della configurazione. </summary>
      <returns>Oggetto di configurazione per il tipo di entità specificato.</returns>
      <typeparam name="TEntityType">Tipo da registrare o configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Equals(System.Object)">
      <summary>Restituisce un valore che indica se il generatore di modelli specificato è uguale al generatore di modelli corrente.</summary>
      <returns>True se il generatore di modelli è uguale al generatore di modelli corrente; in caso contrario, false.</returns>
      <param name="obj">Generatore di modelli da confrontare con l'oggetto corrente. </param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.GetHashCode">
      <summary>Restituisce la funzione hash per il generatore di modelli specificato.</summary>
      <returns>Funzione hash per il generatore di modelli specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.GetType">
      <summary>Ottiene il tipo per il generatore di modelli corrente.</summary>
      <returns>Tipo per il generatore di modelli corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Ignore``1">
      <summary>Esclude un tipo dal modello. Viene utilizzato per rimuovere i tipi dal modello aggiunti dalla convenzione durante l'individuazione del modello iniziale. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" /> in modo che possano essere concatenate più chiamate.</returns>
      <typeparam name="T">Tipo da escludere.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.Ignore(System.Collections.Generic.IEnumerable{System.Type})">
      <summary>Esclude uno o più tipi dal modello. Viene utilizzato per rimuovere i tipi dal modello aggiunti dalla convenzione durante l'individuazione del modello iniziale. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="types">Tipi da escludere dal modello.</param>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilder.ToString">
      <summary>Restituisce una rappresentazione di stringa del generatore di modelli.</summary>
      <returns>Rappresentazione di stringa del generatore di modelli.</returns>
    </member>
    <member name="T:System.Data.Entity.DbModelBuilderVersion">
      <summary>Un valore restituito da tale enumerazione può essere fornito direttamente alla classe <see cref="T:System.Data.Entity.DbModelBuilder" /> o può essere utilizzato nell'oggetto <see cref="T:System.Data.Entity.DbModelBuilderVersionAttribute" /> applicato a una classe derivata da <see cref="T:System.Data.Entity.DbContext" />. Il valore utilizzato definisce la versione delle convenzioni <see cref="T:System.Data.Entity.DbContext" /> e <see cref="T:System.Data.Entity.DbModelBuilder" /> che deve essere utilizzata durante la compilazione di un modello dal codice. </summary>
    </member>
    <member name="F:System.Data.Entity.DbModelBuilderVersion.Latest">
      <summary>Indica che deve essere utilizzata la versione più recente delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> e <see cref="T:System.Data.Entity.DbContext" />. </summary>
    </member>
    <member name="F:System.Data.Entity.DbModelBuilderVersion.V4_1">
      <summary>Indica che deve essere utilizzata la versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> e <see cref="T:System.Data.Entity.DbContext" /> fornita con Entity Framework v4.1. </summary>
    </member>
    <member name="F:System.Data.Entity.DbModelBuilderVersion.V5_0_Net4">
      <summary>Indica che deve essere utilizzata la versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> e <see cref="T:System.Data.Entity.DbContext" /> fornita con Entity Framework v5.0 quando si fa riferimento a .Net Framework 4. </summary>
    </member>
    <member name="F:System.Data.Entity.DbModelBuilderVersion.V5_0">
      <summary>Indica che deve essere utilizzata la versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> e <see cref="T:System.Data.Entity.DbContext" /> fornita con Entity Framework v5.0. </summary>
    </member>
    <member name="T:System.Data.Entity.DbModelBuilderVersionAttribute">
      <summary>È possibile applicare tale attributo a una classe derivata da <see cref="T:System.Data.Entity.DbContext" /> per impostare la versione delle convenzioni <see cref="T:System.Data.Entity.DbContext" /> e <see cref="T:System.Data.Entity.DbModelBuilder" /> da utilizzare durante la compilazione di un modello dal codice. Vedere l'enumerazione <see cref="T:System.Data.Entity.DbModelBuilderVersion" /> per i dettagli sulle versioni di <see cref="T:System.Data.Entity.DbModelBuilder" />. </summary>
    </member>
    <member name="M:System.Data.Entity.DbModelBuilderVersionAttribute.#ctor(System.Data.Entity.DbModelBuilderVersion)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DbModelBuilderVersionAttribute" />. </summary>
      <param name="version">Versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> da utilizzare.</param>
    </member>
    <member name="P:System.Data.Entity.DbModelBuilderVersionAttribute.Version">
      <summary>Ottiene la versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" />. </summary>
      <returns>Versione delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" />.</returns>
    </member>
    <member name="T:System.Data.Entity.DbSet">
      <summary>Rappresenta un set di entità utilizzato per eseguire operazioni di creazione, lettura, aggiornamento ed eliminazione. Versione non generica di <see cref="T:System.Data.Entity.DbSet`1" /> che può essere utilizzata quando il tipo di entità non è noto in fase di compilazione. </summary>
    </member>
    <member name="M:System.Data.Entity.DbSet.Add(System.Object)">
      <summary>Aggiunge l'entità specificata al contesto nello stato <see cref="F:System.Data.EntityState.Added" />. Quando si salvano le modifiche, le entità nello stato Added vengono inserire nel database. Dopo aver salvato le modifiche, lo stato dell'oggetto cambia in <see cref="F:System.Data.EntityState.Unchanged" />.</summary>
      <returns>Entità.</returns>
      <param name="entity">Entità da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.Attach(System.Object)">
      <summary>Associa l'entità specificata al contesto in <see cref="F:System.Data.EntityState.Unchanged" /></summary>
      <returns>Entità.</returns>
      <param name="entity">Entità da associare.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.Cast``1">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.DbSet`1" /> generico equivalente. </summary>
      <returns>Oggetto del set generico.</returns>
      <typeparam name="TEntity">Tipo di base dell'oggetto di cui eseguire il cast sull'oggetto del set generico.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbSet.Create">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set. L'istanza non viene aggiunta né associata al set. L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy. </summary>
      <returns>Istanza dell'entità che può essere un proxy.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet.Create(System.Type)">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set o per un tipo derivato dal tipo di questo set. L'istanza non viene aggiunta né associata al set. L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy. </summary>
      <returns>Istanza dell'entità che può essere un proxy. </returns>
      <param name="derivedEntityType">Tipo di entità derivato.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.Equals(System.Object)">
      <summary>Restituisce un valore che indica se il set specificato è uguale al set corrente.</summary>
      <returns>True se l'oggetto specificato è uguale al set corrente; in caso contrario, false.</returns>
      <param name="obj">Set da confrontare con l'oggetto corrente. </param>
    </member>
    <member name="M:System.Data.Entity.DbSet.Find(System.Object[])">
      <summary>Utilizza il valore della chiave primaria per tentare di individuare un'entità rilevata dal contesto. Se l'entità non è presente nel contesto, la query verrà eseguita e valutata in base ai dati nell'origine dati. Se l'entità non viene trovata nel contesto o nell'origine dati, verrà restituito Null. Si noti che l'operazione di ricerca restituisce anche le entità aggiunte al contesto ma non ancora salvate nel database.</summary>
      <returns>Entità trovata o Null.</returns>
      <param name="keyValues">Valori della chiave primaria dell'entità da trovare.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.GetHashCode">
      <summary>Restituisce la funzione hash per il set specificato.</summary>
      <returns>Funzione hash per il set specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet.GetType">
      <summary>Ottiene il tipo per il set corrente.</summary>
      <returns>Tipo per il set corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.DbSet.Local">
      <summary>Restituisce <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> che rappresenta le entità del set attualmente rilevate dal contesto e non ancora contrassegnate come Deleted. L'accesso alla proprietà Local non comporta mai l'invio di una query al database. Questa proprietà viene solitamente utilizzata dopo che una query è stata eseguita.</summary>
      <returns>Visualizzazione locale.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet.Remove(System.Object)">
      <summary>Contrassegna l'entità specificata come <see cref="F:System.Data.EntityState.Deleted" />. Quando si salvano le modifiche, l'entità viene eliminata dal database. Affinché venga chiamato questo metodo l'entità deve esistere nel contesto in un altro stato. </summary>
      <returns>Entità.</returns>
      <param name="entity">Entità da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet.SqlQuery(System.String,System.Object[])">
      <summary>Crea una query SQL non elaborata che restituirà le entità in questo set. Per impostazione predefinita, le entità restituite vengono rilevate dal contesto. Tale impostazione può essere modificata chiamando AsNoTracking nell'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery`1" /> restituito da questo metodo. </summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery" /> che eseguirà la query quando viene enumerato.</returns>
      <param name="sql">Stringa di query SQL.</param>
      <param name="parameters">Parametri da applicare alla stringa di query SQL.</param>
    </member>
    <member name="T:System.Data.Entity.DbSet`1">
      <summary>Rappresenta un set di entità tipizzato utilizzato per eseguire operazioni di creazione, lettura, aggiornamento ed eliminazione. Non è possibile costruire DbSet pubblicamente e la relativa creazione può essere effettuata solo da un'istanza di <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <typeparam name="TEntity">Tipo che definisce il set. Può essere sia un tipo derivato che un tipo di base.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Add(`0)">
      <summary>Aggiunge l'entità specificata al contesto nello stato <see cref="F:System.Data.EntityState.Added" />. Quando si salvano le modifiche, le entità nello stato Added vengono inserire nel database. Dopo aver salvato le modifiche, lo stato dell'oggetto cambia in <see cref="F:System.Data.EntityState.Unchanged" />.</summary>
      <returns>Restituisce <see cref="{0}" />.</returns>
      <param name="entity">Entità da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Attach(`0)">
      <summary>Associa l'entità specificata al contesto in <see cref="F:System.Data.EntityState.Unchanged" /></summary>
      <returns>Restituisce <see cref="{0}" />.</returns>
      <param name="entity">Entità da associare.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Create``1">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set o per un tipo derivato dal tipo di questo set. L'istanza non viene aggiunta né associata al set. L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy. </summary>
      <returns>Restituisce <see cref="{0}" />.</returns>
      <typeparam name="TDerivedEntity">Tipo che definisce il set.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Create">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set. L'istanza non viene aggiunta né associata al set. L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy. </summary>
      <returns>Restituisce <see cref="{0}" />.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Equals(System.Object)">
      <summary>Restituisce un valore che indica se l'oggetto specificato è uguale al set corrente.</summary>
      <returns>True se il set specificato è uguale al set corrente ; in caso contrario, false.</returns>
      <param name="obj">Set da confrontare con l'oggetto corrente. </param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Find(System.Object[])">
      <summary>Utilizza il valore della chiave primaria per tentare di individuare un'entità rilevata dal contesto. Se l'entità non è presente nel contesto, la query verrà eseguita e valutata in base ai dati nell'origine dati. Se l'entità non viene trovata nel contesto o nell'origine dati, verrà restituito Null. Si noti che l'operazione di ricerca restituisce anche le entità aggiunte al contesto ma non ancora salvate nel database.</summary>
      <returns>Restituisce <see cref="T:System.Boolean" />.</returns>
      <param name="keyValues">Valori della chiave primaria dell'entità da trovare.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.GetHashCode">
      <summary>Restituisce la funzione hash per il set specificato.</summary>
      <returns>Funzione hash per il set specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.GetType">
      <summary>Ottiene il tipo per il set corrente.</summary>
      <returns>Tipo per il set corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.DbSet`1.Local">
      <summary>Restituisce <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> che rappresenta le entità del set attualmente rilevate dal contesto e non ancora contrassegnate come Deleted. L'accesso alla proprietà Local non comporta mai l'invio di una query al database. Questa proprietà viene solitamente utilizzata dopo che una query è stata eseguita.</summary>
      <returns>Visualizzazione locale.</returns>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.op_Implicit(System.Data.Entity.DbSet{`0})~System.Data.Entity.DbSet">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.DbSet" /> non generico equivalente.</summary>
      <returns>Restituisce l'oggetto del set non generico <see cref="T:System.Data.Entity.DbSet" />.</returns>
      <param name="entry">Voce per la quale è deve essere restituito l'oggetto <see cref="T:System.Data.Entity.DbSet" /> non generico equivalente.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.Remove(`0)">
      <summary>Contrassegna l'entità specificata come <see cref="F:System.Data.EntityState.Deleted" />. Quando si salvano le modifiche, l'entità viene eliminata dal database. Affinché venga chiamato questo metodo l'entità deve esistere nel contesto in un altro stato. </summary>
      <returns>Restituisce <see cref="T:System.Data.Entity.DbSet" />.</returns>
      <param name="entity">Entità da rimuovere.</param>
    </member>
    <member name="M:System.Data.Entity.DbSet`1.SqlQuery(System.String,System.Object[])">
      <summary>Crea una query SQL non elaborata che restituirà le entità in questo set. Per impostazione predefinita, le entità restituite vengono rilevate dal contesto. Tale impostazione può essere modificata chiamando AsNoTracking nell'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery`1" /> restituito da questo metodo. </summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery`1" /> che eseguirà la query quando viene enumerato.</returns>
      <param name="sql">Stringa di query SQL.</param>
      <param name="parameters">Le entità restituite sono sempre del tipo di questo set e mai di un tipo derivato. Se la tabella o le tabelle su cui è stata eseguita una query possono contenere dati per altri tipi di entità, è necessario che la query SQL venga scritta in modo appropriato per garantire che vengano restituite solo le entità del tipo corretto.Parametri da applicare alla stringa di query SQL.</param>
    </member>
    <member name="T:System.Data.Entity.DropCreateDatabaseAlways`1">
      <summary>Implementazione di <see cref="T:System.Data.Entity.IDatabaseInitializer`1" /> che ricrea sempre il database e, se necessario, ne ripete il seeding al primo utilizzo di un contesto nel dominio applicazione. Per eseguire il seeding del database, creare una classe derivata ed eseguire l'override del metodo Seed. </summary>
      <typeparam name="TContext">Tipo di contesto.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseAlways`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DropCreateDatabaseAlways`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseAlways`1.InitializeDatabase(`0)">
      <summary>Esegue la strategia per inizializzare il database per il contesto specificato. </summary>
      <param name="context">Contesto.</param>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseAlways`1.Seed(`0)">
      <summary>Se sottoposto a override, aggiunge i dati al contesto per il seeding.  L'implementazione predefinita non esegue alcuna operazione. </summary>
      <param name="context">Contesto di cui eseguire il seeding.</param>
    </member>
    <member name="T:System.Data.Entity.DropCreateDatabaseIfModelChanges`1">
      <summary>Implementazione di <see cref="T:System.Data.Entity.IDatabaseInitializer`1" /> che elimina e ricrea il database e, se necessario, ne ripete il seeding solo se il modello è stato modificato dall'ultima creazione del database.  A tale scopo, viene scritto un hash del modello di archivio nel database quando viene creato. Tale hash viene quindi confrontato con un hash generato dal modello corrente. Per eseguire il seeding del database, creare una classe derivata ed eseguire l'override del metodo Seed. </summary>
      <typeparam name="TContext">Tipo di contesto.</typeparam>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseIfModelChanges`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.DropCreateDatabaseIfModelChanges`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseIfModelChanges`1.InitializeDatabase(`0)">
      <summary>Esegue la strategia per inizializzare il database per il contesto specificato. </summary>
      <param name="context">Contesto.</param>
    </member>
    <member name="M:System.Data.Entity.DropCreateDatabaseIfModelChanges`1.Seed(`0)">
      <summary>Metodo che deve essere sottoposto override per poter aggiungere i dati al contesto per il seeding.  L'implementazione predefinita non esegue alcuna operazione. </summary>
      <param name="context">Contesto di cui eseguire il seeding.</param>
    </member>
    <member name="T:System.Data.Entity.IDatabaseInitializer`1">
      <summary>Definisce un metodo per l'inizializzatore di database.</summary>
      <typeparam name="TContext">Tipo di contesto.Questo parametro di tipo è controvariante, ovvero è possibile utilizzare il tipo specificato o qualsiasi tipo con meno derivazioni. Per ulteriori informazioni su covarianza e controvarianza, vedere .</typeparam>
    </member>
    <member name="M:System.Data.Entity.IDatabaseInitializer`1.InitializeDatabase(`0)">
      <summary>Esegue la strategia per inizializzare il database per il contesto specificato. </summary>
      <param name="context">Contesto.</param>
    </member>
    <member name="T:System.Data.Entity.IDbSet`1">
      <summary>Rappresenta la raccolta di tutte le entità nel contesto, o su cui è possibile eseguire una query dal database, di un tipo specificato. <see cref="T:System.Data.Entity.DbSet" /> è un'implementazione concreta di <see cref="T:System.Data.Entity.IDbSet`1" />. </summary>
      <typeparam name="TEntity">Tipo che definisce il set.</typeparam>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Add(`0)">
      <summary>Aggiunge l'entità specificata al contesto nello stato <see cref="F:System.Data.EntityState.Added" />. Quando si salvano le modifiche, le entità nello stato Added vengono inserire nel database. Dopo aver salvato le modifiche, lo stato dell'oggetto cambia in <see cref="F:System.Data.EntityState.Unchanged" />.</summary>
      <returns>Restituisce l'entità.</returns>
      <param name="entity">Entità da aggiungere.</param>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Attach(`0)">
      <summary>Associa l'entità specificata al contesto in <see cref="F:System.Data.EntityState.Unchanged" /></summary>
      <returns>Restituisce l'entità.</returns>
      <param name="entity">Entità da associare.</param>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Create">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set. L'istanza non viene aggiunta né associata al set. L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy. </summary>
      <returns>Restituisce l'istanza dell'entità che può essere un proxy. </returns>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Create``1">
      <summary>Crea una nuova istanza di un'entità per il tipo di questo set o per un tipo derivato dal tipo di questo set. L'istanza non viene aggiunta né associata al set. L'istanza restituita sarà un proxy se il contesto sottostante è configurato per creare proxy e il tipo di entità soddisfa i requisiti per la creazione di un proxy. </summary>
      <returns>Restituisce l'istanza dell'entità che può essere un proxy.</returns>
      <typeparam name="TDerivedEntity">Tipo di entità da creare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Find(System.Object[])">
      <summary>Utilizza il valore della chiave primaria per tentare di individuare un'entità rilevata dal contesto. Se l'entità non è presente nel contesto, la query verrà eseguita e valutata in base ai dati nell'origine dati. Se l'entità non viene trovata nel contesto o nell'origine dati, verrà restituito Null. Si noti che l'operazione di ricerca restituisce anche le entità aggiunte al contesto ma non ancora salvate nel database.</summary>
      <returns>Restituisce l'entità trovata o Null.</returns>
      <param name="keyValues">Valori della chiave primaria dell'entità da trovare.</param>
    </member>
    <member name="P:System.Data.Entity.IDbSet`1.Local">
      <summary>Restituisce <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> che rappresenta le entità del set attualmente rilevate dal contesto e non ancora contrassegnate come Deleted. L'accesso alla proprietà Local non comporta mai l'invio di una query al database. Questa proprietà viene solitamente utilizzata dopo che una query è stata eseguita.</summary>
      <returns>Visualizzazione locale.</returns>
    </member>
    <member name="M:System.Data.Entity.IDbSet`1.Remove(`0)">
      <summary>Contrassegna l'entità specificata come <see cref="F:System.Data.EntityState.Deleted" />. Quando si salvano le modifiche, l'entità viene eliminata dal database. Affinché venga chiamato questo metodo l'entità deve esistere nel contesto in un altro stato. </summary>
      <returns>Restituisce l'entità.</returns>
      <param name="entity">Entità da rimuovere.</param>
    </member>
    <member name="T:System.Data.Entity.MigrateDatabaseToLatestVersion`2">
      <summary>Implementazione di IDatabaseInitializer che utilizzerà Migrazioni Code First per aggiornare il database alla migrazione più recente.</summary>
      <typeparam name="TContext"></typeparam>
      <typeparam name="TMigrationsConfiguration"></typeparam>
    </member>
    <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.#ctor">
      <summary> Inizializza una nuova istanza della classe MigrateDatabaseToLatestVersion.  </summary>
    </member>
    <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.#ctor(System.String)">
      <summary> Inizializza una nuova istanza della classe MigrateDatabaseToLatestVersion che utilizzerà una stringa di connessione specificata dal file di configurazione per connettersi al database ed eseguire la migrazione. </summary>
      <param name="connectionStringName">Nome della stringa di connessione da utilizzare per la migrazione.</param>
    </member>
    <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.InitializeDatabase(`0)">
      <summary>Esegue la strategia per inizializzare il database per il contesto specificato.</summary>
      <param name="context">Contesto.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbChangeTracker">
      <summary>Restituito dal metodo ChangeTracker di <see cref="T:System.Data.Entity.DbContext" /> per fornire l'accesso a caratteristiche del contesto correlate al rilevamento delle modifiche delle entità. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.DetectChanges">
      <summary>Rileva le modifiche apportate alle proprietà e alle relazioni delle entità POCO.  Tenere presente che alcuni tipi di entità (quali i proxy di rilevamento modifiche e le entità derivanti da <see cref="T:System.Data.Objects.DataClasses.EntityObject" />) segnalano automaticamente le modifiche e che per questi tipi di entità non è generalmente necessaria una chiamata a tale metodo. Si noti inoltre che generalmente questo metodo viene chiamato automaticamente da molti dei metodi di <see cref="T:System.Data.Entity.DbContext" /> e dalle relative classi correlate; è pertanto raro che questo metodo debba essere chiamato in modo esplicito. Potrebbe tuttavia essere auspicabile, in genere per motivi di prestazioni, disabilitare la chiamata automatica di questo metodo utilizzando il flag AutoDetectChangesEnabled di <see cref="P:System.Data.Entity.DbContext.Configuration" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.Entries">
      <summary>Ottiene gli oggetti <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> per tutte le entità rilevate da questo contesto. </summary>
      <returns>Voci.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.Entries``1">
      <summary>Ottiene gli oggetti <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> per tutte le entità del tipo specificato rilevate da questo contesto. </summary>
      <returns>Voci.</returns>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.Equals(System.Object)">
      <summary>Restituisce un valore che indica se lo strumento di rilevamento specificato è uguale allo strumento di rilevamento corrente.</summary>
      <returns>True se lo strumento di rilevamento specificato è uguale allo strumento di rilevamento corrente; in caso contrario, false.</returns>
      <param name="obj">Strumento di rilevamento da confrontare con l'oggetto corrente. </param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.GetHashCode">
      <summary>Restituisce la funzione hash per lo strumento di rilevamento specificato.</summary>
      <returns>Funzione hash per lo strumento di rilevamento specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.GetType">
      <summary>Ottiene il tipo per lo strumento di rilevamento corrente.</summary>
      <returns>Tipo per lo strumento di rilevamento corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbChangeTracker.ToString">
      <summary>Restituisce una rappresentazione di stringa dello strumento di rilevamento.</summary>
      <returns>Rappresentazione di stringa dello strumento di rilevamento.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbCollectionEntry">
      <summary>Una versione non generica della classe <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry.Cast``2">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" /> generico equivalente. </summary>
      <returns>Oggetto generico equivalente.</returns>
      <typeparam name="TEntity">Tipo di entità in cui viene dichiarato il membro.</typeparam>
      <typeparam name="TElement">Tipo dell'elemento della raccolta.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry.CurrentValue">
      <summary>Ottiene o imposta il valore corrente della proprietà di navigazione.  Il valore corrente è costituito dall'entità a cui fa riferimento la proprietà di navigazione. </summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry.EntityEntry">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> a cui appartiene la proprietà di navigazione. </summary>
      <returns>Una voce per l'entità che possiede questa proprietà di navigazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry.IsLoaded">
      <summary>Ottiene un valore che indica se la raccolta di entità è stata caricata dal database. </summary>
      <returns>true se la raccolta è stata caricata; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry.Load">
      <summary>Carica la raccolta di entità dal database. Notare che le entità già esistenti nel contesto non vengono sovrascritte con i valori del database. </summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry.Name">
      <summary>Ottiene il nome della proprietà. </summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry.Query">
      <summary>Restituisce la query che verrà utilizzata per caricare questa raccolta dal database. È possibile modificare la query restituita utilizzando LINQ per applicare filtri o eseguire operazioni nel database, come il conteggio del numero di entità contenute nella raccolta del database senza che vengano effettivamente caricate. </summary>
      <returns>Query per la raccolta.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2">
      <summary>Le istanze di questa classe vengono restituite dal metodo <see cref="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Collection(System.String)" /> di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> e consentono l'esecuzione di operazioni come il caricamento sulle proprietà di navigazione della raccolta dell'entità. </summary>
      <typeparam name="TEntity">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
      <typeparam name="TElement">Tipo dell'elemento contenuto nella raccolta di entità.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry`2.CurrentValue">
      <summary>Ottiene o imposta il valore corrente della proprietà di navigazione.  Il valore corrente è costituito dall'entità a cui fa riferimento la proprietà di navigazione. </summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry`2.EntityEntry">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> a cui appartiene la proprietà di navigazione. </summary>
      <returns>Una voce per l'entità che possiede questa proprietà di navigazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry`2.IsLoaded">
      <summary>Ottiene un valore che indica se la raccolta di entità è stata caricata dal database. </summary>
      <returns>true se la raccolta è stata caricata; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry`2.Load">
      <summary>Carica la raccolta di entità dal database. Notare che le entità già esistenti nel contesto non vengono sovrascritte con i valori del database. </summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbCollectionEntry`2.Name">
      <summary>Ottiene il nome della proprietà. </summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbCollectionEntry{`0,`1})~System.Data.Entity.Infrastructure.DbCollectionEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry" /> non generica per la proprietà di navigazione rappresentata da questo oggetto. </summary>
      <returns>Restituisce <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry" />.</returns>
      <param name="entry">Voce.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCollectionEntry`2.Query">
      <summary>Restituisce la query che verrà utilizzata per caricare questa raccolta dal database. È possibile modificare la query restituita utilizzando LINQ per applicare filtri o eseguire operazioni nel database, come il conteggio del numero di entità contenute nella raccolta del database senza che vengano effettivamente caricate. </summary>
      <returns>Query per la raccolta.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbCompiledModel">
      <summary>Rappresentazione non modificabile di un modello Entity Data Model (EDM) che può essere utilizzato per creare un oggetto <see cref="T:System.Data.Objects.ObjectContext" /> o passato al costruttore di <see cref="T:System.Data.Entity.DbContext" />.  Per incrementare le prestazioni, le istanze di questo tipo devono essere memorizzate nella cache e riutilizzate per la costruzione di contesti.  </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbCompiledModel.CreateObjectContext``1(System.Data.Common.DbConnection)">
      <summary>Crea un'istanza di <see cref="T:System.Data.Objects.ObjectContext" /> o una classe derivata da ObjectContext. Si noti che è invece possibile creare un'istanza di DbContext tramite il costruttore DbContext adatto. Se viene utilizzato un ObjectContext derivato, questo deve disporre di un costruttore pubblico con un solo parametro EntityConnection. La connessione passata viene utilizzata dall'ObjectContext creato, ma appartiene al contesto.  Il chiamante deve eliminare la connessione dopo l'eliminazione del contesto. </summary>
      <returns>Restituisce il contesto.</returns>
      <param name="existingConnection">Connessione esistente al database per l'utilizzo da parte del contesto.</param>
      <typeparam name="TContext">Tipo di contesto da creare.</typeparam>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry">
      <summary>Una versione non generica della classe <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry.Cast``2">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2" /> generico equivalente. </summary>
      <returns>Oggetto generico equivalente.</returns>
      <typeparam name="TEntity">Tipo di entità in cui viene dichiarato il membro.</typeparam>
      <typeparam name="TComplexProperty">Tipo della proprietà complessa.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry.ComplexProperty(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata complessa della proprietà. </summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry.Property(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata della proprietà. Questo metodo può essere utilizzato sia per le proprietà scalari che per quelle complesse. </summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2">
      <summary>Le istanze di questa classe vengono restituite dal metodo ComplexProperty di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> e consentono l'accesso allo stato di una proprietà complessa. </summary>
      <typeparam name="TEntity">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
      <typeparam name="TComplexProperty">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata complessa della proprietà. </summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="property">Espressione che rappresenta la proprietà annidata.</param>
      <typeparam name="TNestedComplexProperty">Tipo della proprietà annidata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.ComplexProperty(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata complessa della proprietà. </summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.ComplexProperty``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata complessa della proprietà. </summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
      <typeparam name="TNestedComplexProperty">Tipo della proprietà annidata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbComplexPropertyEntry{`0,`1})~System.Data.Entity.Infrastructure.DbComplexPropertyEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry" /> non generica per la proprietà rappresentata da questo oggetto.</summary>
      <returns>Restituisce <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry" />.</returns>
      <param name="entry">Voce.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.Property``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata della proprietà. Questo metodo può essere utilizzato sia per le proprietà scalari che per quelle complesse. </summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="property">Espressione che rappresenta la proprietà annidata.</param>
      <typeparam name="TNestedProperty">Tipo della proprietà annidata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.Property``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata della proprietà. Questo metodo può essere utilizzato sia per le proprietà scalari che per quelle complesse. </summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
      <typeparam name="TNestedProperty">Tipo della proprietà annidata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2.Property(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà annidata della proprietà. Questo metodo può essere utilizzato sia per le proprietà scalari che per quelle complesse. </summary>
      <returns>Oggetto che rappresenta la proprietà annidata.</returns>
      <param name="propertyName">Nome della proprietà annidata.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbConnectionInfo">
      <summary>Rappresenta le informazioni su una connessione di database.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.#ctor(System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbConnectionInfo" /> che rappresenta una connessione specificata nel file di configurazione dell'applicazione.</summary>
      <param name="connectionName">Nome della stringa di connessione contenuta nella configurazione dell'applicazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.#ctor(System.String,System.String)">
      <summary>Crea una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbConnectionInfo" /> basata su una stringa di connessione.</summary>
      <param name="connectionString">Stringa di connessione da utilizzare per la connessione.</param>
      <param name="providerInvariantName">Nome del provider da utilizzare per la connessione. Utilizzare 'System.Data.SqlClient' per SQL Server.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.Equals(System.Object)">
      <summary>Indica se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.GetType">
      <summary>Ottiene il tipo dell'istanza corrente.</summary>
      <returns>Tipo dell’istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbConnectionStringOrigin">
      <summary>Descrive l'origine della stringa di connessione al database associata a un oggetto <see cref="T:System.Data.Entity.DbContext" />.</summary>
    </member>
    <member name="F:System.Data.Entity.Infrastructure.DbConnectionStringOrigin.Convention">
      <summary>La stringa di connessione è stata creata in base alla convenzione.</summary>
    </member>
    <member name="F:System.Data.Entity.Infrastructure.DbConnectionStringOrigin.Configuration">
      <summary>La stringa di connessione è stata letta dalla configurazione esterna.</summary>
    </member>
    <member name="F:System.Data.Entity.Infrastructure.DbConnectionStringOrigin.UserCode">
      <summary>La stringa di connessione è stata specificata in modo esplicito in fase di esecuzione.</summary>
    </member>
    <member name="F:System.Data.Entity.Infrastructure.DbConnectionStringOrigin.DbContextInfo">
      <summary>     La stringa di connessione è stata sottoposta a override dalle informazioni sulla connessione fornite a DbContextInfo.  </summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbContextConfiguration">
      <summary>Restituito dal metodo di configurazione di <see cref="T:System.Data.Entity.DbContext" /> per fornire l'accesso alle opzioni di configurazione per il contesto. </summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextConfiguration.AutoDetectChangesEnabled">
      <summary>Ottiene o imposta se nella configurazione è abilitato il rilevamento automatico di modifiche.</summary>
      <returns>Ture se nella configurazione è abilitato il rilevamento automatico di modifiche; in caso contrario, falso.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextConfiguration.Equals(System.Object)">
      <summary>Restituisce se la configurazione specificata è uguale alla configurazione corrente.</summary>
      <returns>True se la configurazione specificata è uguale alla configurazione corrente; in caso contrario, false.</returns>
      <param name="obj">Configurazione da confrontare con l'oggetto corrente. </param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextConfiguration.GetHashCode">
      <summary>Restituisce la funzione hash per la configurazione specificata.</summary>
      <returns>Funzione hash per la configurazione specificata.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextConfiguration.GetType">
      <summary>Ottiene il tipo per la configurazione corrente.</summary>
      <returns>Tipo per la configurazione corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextConfiguration.LazyLoadingEnabled">
      <summary>Ottiene o imposta un valore che indica se è abilitato il caricamento lazy di relazioni esposte come proprietà di navigazione.  Il caricamento lazy è abilitato per impostazione predefinita. </summary>
      <returns>true se il caricamento lazy è abilitato. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextConfiguration.ProxyCreationEnabled">
      <summary>Ottiene o imposta un valore che indica se il framework creerà istanze di classi proxy generate dinamicamente ogni volta che viene da esso creata un'istanza di un tipo di entità. Notare che anche se la creazione di proxy è abilitata con questo flag, le istanze del proxy verranno create solo per tipi di entità che soddisfano i requisiti per l'inserimento nel proxy. La creazione di proxy è abilitata per impostazione predefinita. </summary>
      <returns>true se la creazione di proxy è abilitata. In caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextConfiguration.ToString">
      <summary>Restituisce una rappresentazione di stringa della configurazione.</summary>
      <returns>Rappresentazione di stringa della configurazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextConfiguration.ValidateOnSaveEnabled">
      <summary>Ottiene o imposta un valore che indica se le entità rilevate devono essere convalidate automaticamente quando viene chiamato <see cref="M:System.Data.Entity.DbContext.SaveChanges" />. Il valore predefinito è true. </summary>
      <returns>True se le entità rilevate devono essere convalidate automaticamente; in caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbContextInfo">
      <summary>Vengono fornite informazioni di runtime su un tipo <see cref="T:System.Data.Entity.DbContext" /> specificato.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza che rappresenta un tipo <see cref="T:System.Data.Entity.DbContext" /> specificato.</summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Configuration.Configuration)">
      <summary>Inizializza una nuova istanza che rappresenta un tipo <see cref="T:System.Data.Entity.DbContext" /> specificato. È possibile fornire un oggetto di configurazione esterno (ad esempio app.config o web.config) che verrà utilizzato durante la risoluzione delle stringhe di connessione. Ciò include la ricerca delle stringhe di connessione e delle voci DefaultConnectionFactory. </summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="config">Oggetto che rappresenta il file di configurazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Configuration.Configuration,System.Data.Entity.Infrastructure.DbConnectionInfo)">
      <summary>Inizializza una nuova istanza che rappresenta un tipo <see cref="T:System.Data.Entity.DbContext" /> specificato che fa riferimento a un database specifico.     È possibile fornire un oggetto di configurazione esterno (ad esempio app.config o web.config) che verrà utilizzato durante la risoluzione delle stringhe di connessione. Ciò include la ricerca delle stringhe di connessione e delle voci DefaultConnectionFactory. </summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="config">Oggetto che rappresenta il file di configurazione.</param>
      <param name="connectionInfo">Informazioni sulla connessione per il database da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Configuration.ConnectionStringSettingsCollection)">
      <summary>Inizializza una nuova istanza che rappresenta un tipo <see cref="T:System.Data.Entity.DbContext" /> specificato. È possibile specificare un elenco esterno di stringhe di connessione che verrà utilizzato durante la risoluzione delle stringhe di connessione al posto di eventuali stringhe di connessione specificate nei file di configurazione esterni.</summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="connectionStringSettings">Raccolta di stringhe di connessione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Data.Entity.Infrastructure.DbConnectionInfo)">
      <summary>Inizializza una nuova istanza che rappresenta un tipo <see cref="T:System.Data.Entity.DbContext" /> specificato che fa riferimento a un database specifico. </summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="connectionInfo">Informazioni sulla connessione per il database da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.#ctor(System.Type,System.Data.Entity.Infrastructure.DbProviderInfo)">
      <summary>Inizializza una nuova istanza che rappresenta un tipo <see cref="T:System.Data.Entity.DbContext" /> specificato. È possibile fornire un oggetto <see cref="T:System.Data.Entity.Infrastructure.DbProviderInfo" /> per eseguire l'override del provider determinato predefinito utilizzato durante la creazione del modello EDM sottostante.</summary>
      <param name="contextType">Tipo derivante da <see cref="T:System.Data.Entity.DbContext" />.</param>
      <param name="modelProviderInfo">Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbProviderInfo" /> che specifica il provider ADO.NET sottostante di destinazione.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.ConnectionProviderName">
      <summary>Ottiene o imposta il nome del provider ADO.NET della connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</summary>
      <returns>Nome del provider ADO.NET della connessione utilizzata dal tipo sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.ConnectionString">
      <summary>Ottiene o imposta la stringa di connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</summary>
      <returns>Stringa di connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.ConnectionStringName">
      <summary>Ottiene o imposta il nome della stringa di connessione utilizzato dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</summary>
      <returns>Nome della stringa di connessione utilizzato dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.ConnectionStringOrigin">
      <summary>Ottiene o imposta l'origine della stringa di connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</summary>
      <returns>Origine della stringa di connessione utilizzata dal tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.ContextType">
      <summary>Ottiene o imposta il tipo <see cref="T:System.Data.Entity.DbContext" /> concreto.</summary>
      <returns>Tipo <see cref="T:System.Data.Entity.DbContext" /> concreto.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbContextInfo.CreateInstance">
      <summary>Crea una nuova istanza che rappresenta un tipo <see cref="T:System.Data.Entity.DbContext" /> specificato.</summary>
      <returns>Se è possibile creare istanze del tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante, restituisce una nuova istanza; in caso contrario, restituisce null.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.IsConstructible">
      <summary>Ottiene o imposta un valore che indica se è possibile creare il tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante.</summary>
      <returns>true se è possibile creare il tipo <see cref="T:System.Data.Entity.DbContext" /> sottostante. In caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbContextInfo.OnModelCreating">
      <summary>Ottiene o imposta il modello per un contesto derivato che è stato inizializzato.</summary>
      <returns>Modello per un contesto derivato che è stato inizializzato.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbEntityEntry">
      <summary>Una versione non generica della classe <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Cast``1">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> generica per il tipo generico specificato per l'entità rilevata rappresentata da questo oggetto. Il tipo dell'entità rilevata deve essere compatibile con il tipo generico. In caso contrario, verrà generata un'eccezione. </summary>
      <returns>Una versione generica.</returns>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Collection(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione della raccolta da questa entità a una raccolta di entità correlate. </summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.ComplexProperty(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà complessa dell'entità. </summary>
      <returns>Oggetto che rappresenta la proprietà complessa.</returns>
      <param name="propertyName">Nome della proprietà complessa.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry.CurrentValues">
      <summary>Ottiene i valori di proprietà correnti per l'entità rilevata rappresentata da questo oggetto. </summary>
      <returns>Valori correnti.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry.Entity">
      <summary>Ottiene l'entità. </summary>
      <returns>Entità.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Equals(System.Data.Entity.Infrastructure.DbEntityEntry)">
      <summary>Determina se l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> specificato è uguale all'istanza in questione. Due istanze <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> sono considerate uguali se sono entrambe voci della stessa entità nello stesso <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <returns>true se l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> specificato è uguale a questa istanza; in caso contrario, false. </returns>
      <param name="other">Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'istanza in questione. Due istanze <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> sono considerate uguali se sono entrambe voci della stessa entità nello stesso <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <returns>true se l'oggetto specificato è uguale a questa istanza; in caso contrario, false. </returns>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.GetDatabaseValues">
      <summary>Consente di eseguire una query sul database per individuare copie dei valori dell'entità rilevata uguali a quelli attualmente presenti nel database. La modifica dei valori nel dizionario restituito non determinerà l'aggiornamento dei valori nel database. Se l'entità non è presente nel database, viene restituito null. </summary>
      <returns>Valori archivio.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.GetHashCode">
      <summary>Restituisce un codice hash per questa istanza. </summary>
      <returns>Codice hash per questa istanza, adatto per l'utilizzo in algoritmi hash e in strutture di dati, ad esempio una tabella hash.  </returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.GetType">
      <summary>Ottiene il tipo per la voce dell'entità del database corrente.</summary>
      <returns>Tipo per la voce l'entità del database corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.GetValidationResult">
      <summary>Convalida questa istanza <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> e restituisce il risultato della convalida. </summary>
      <returns>Risultato della convalida dell'entità. Può essere null se il metodo <see cref="M:System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})" /> viene sottoposto a override. </returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Member(System.String)">
      <summary>Ottiene un oggetto che rappresenta un membro dell'entità.  Il tipo di runtime dell'oggetto restituito varierà a seconda del tipo di membro richiesto.  I tipi di membri attualmente supportati e i relativi tipi restituiti sono: Proprietà di navigazione di riferimento (<see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry" />), Proprietà di navigazione della raccolta (<see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry" />), Proprietà primitiva/scalare (<see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" />) e Proprietà complessa ( <see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry" />). </summary>
      <returns>Oggetto che rappresenta il membro.</returns>
      <param name="propertyName">Nome del membro.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry.OriginalValues">
      <summary>Ottiene i valori di proprietà originali per l'entità rilevata rappresentata da questo oggetto. I valori originali sono generalmente i valori di proprietà dell'entità al momento dell'esecuzione dell'ultima query dal database. </summary>
      <returns>Valori originali.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Property(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà scalare o complessa dell'entità. </summary>
      <returns>Oggetto che rappresenta la proprietà.</returns>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Reference(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione di riferimento (cioè non di raccolta) da questa entità a un'altra entità. </summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.Reload">
      <summary>Ricarica l'entità dal database sovrascrivendo i valori di proprietà con i valori del database. Dopo aver chiamato questo metodo, lo stato dell'entità sarà Unchanged. </summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry.State">
      <summary>Ottiene o imposta lo stato dell'entità. </summary>
      <returns>Stato.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry.ToString">
      <summary>Restituisce una rappresentazione di stringa della voce dell'entità del database.</summary>
      <returns>Rappresentazione di stringa della voce dell'entità del database.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbEntityEntry`1">
      <summary>Le istanze di questa classe forniscono accesso alle informazioni sulle entità che vengono rilevate da <see cref="T:System.Data.Entity.DbContext" /> e sul relativo controllo.  Utilizzare i metodi Entity o Entities del contesto per ottenere oggetti di questo tipo. </summary>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Collection``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}})">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione della raccolta da questa entità a una raccolta di entità correlate. </summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Espressione che rappresenta la proprietà di navigazione.</param>
      <typeparam name="TElement">Tipo di elementi contenuti nella raccolta.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Collection``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione della raccolta da questa entità a una raccolta di entità correlate. </summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
      <typeparam name="TElement">Tipo di elementi contenuti nella raccolta.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Collection(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione della raccolta da questa entità a una raccolta di entità correlate. </summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Ottiene un oggetto che rappresenta una proprietà complessa dell'entità. </summary>
      <returns>Oggetto che rappresenta la proprietà complessa.</returns>
      <param name="property">Proprietà.</param>
      <typeparam name="TComplexProperty">Tipo della proprietà complessa.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ComplexProperty``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà complessa dell'entità. </summary>
      <returns>Oggetto che rappresenta la proprietà complessa.</returns>
      <param name="propertyName">Nome della proprietà complessa.</param>
      <typeparam name="TComplexProperty">Tipo della proprietà complessa.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ComplexProperty(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà complessa dell'entità. </summary>
      <returns>Oggetto che rappresenta la proprietà complessa.</returns>
      <param name="propertyName">Nome della proprietà complessa.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.CurrentValues">
      <summary>Ottiene i valori di proprietà correnti per l'entità rilevata rappresentata da questo oggetto. </summary>
      <returns>Valori correnti.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.Entity">
      <summary>Ottiene l'entità. </summary>
      <returns>Restituisce <see cref="T:System.Data.Entity.Infrastructure.DbPropertyValues" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Equals(System.Data.Entity.Infrastructure.DbEntityEntry{`0})">
      <summary>Determina se l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> specificato è uguale all'istanza in questione. Due istanze <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> sono considerate uguali se sono entrambe voci della stessa entità nello stesso <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <returns>true se l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> specificato è uguale a questa istanza; in caso contrario false. </returns>
      <param name="other">Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Equals(System.Object)">
      <summary>Determina se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'istanza in questione. Due istanze <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> sono considerate uguali se sono entrambe voci della stessa entità nello stesso <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <returns>true se l'oggetto specificato è uguale a questa istanza; in caso contrario, false. </returns>
      <param name="obj">Oggetto <see cref="T:System.Object" /> da confrontare con questa istanza.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetDatabaseValues">
      <summary>Consente di eseguire una query sul database per individuare copie dei valori dell'entità rilevata uguali a quelli attualmente presenti nel database. La modifica dei valori nel dizionario restituito non determinerà l'aggiornamento dei valori nel database. Se l'entità non è presente nel database, viene restituito null. </summary>
      <returns>Valori archivio.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetHashCode">
      <summary>Restituisce un codice hash per questa istanza.</summary>
      <returns>Codice hash per questa istanza, adatto per l'utilizzo in algoritmi hash e in strutture di dati, ad esempio una tabella hash.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetType">
      <summary>Ottiene il tipo per l'entità del database corrente.</summary>
      <returns>Tipo per l'entità del database corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.GetValidationResult">
      <summary>Convalida questa istanza <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> e restituisce il risultato della convalida. </summary>
      <returns>Risultato della convalida dell'entità. Può essere null se il metodo <see cref="M:System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})" /> viene sottoposto a override. </returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Member(System.String)">
      <summary>Ottiene un oggetto che rappresenta un membro dell'entità.  Il tipo di runtime dell'oggetto restituito varierà a seconda del tipo di membro richiesto.  I tipi di membri attualmente supportati e i relativi tipi restituiti sono: Proprietà di navigazione di riferimento (<see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry" />). Proprietà di navigazione della raccolta (<see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry" />). Proprietà di tipo primitivo/scalare (<see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" />). Proprietà complessa (<see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry" />). </summary>
      <returns>Membro dell'entità. </returns>
      <param name="propertyName">Nome del membro.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Member``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta un membro dell'entità.  Il tipo di runtime dell'oggetto restituito varierà a seconda del tipo di membro richiesto.  I tipi di membri attualmente supportati e i relativi tipi restituiti sono: Proprietà di navigazione di riferimento (<see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2" />). Proprietà di navigazione della raccolta (<see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" />). Proprietà di tipo primitivo/scalare (<see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2" />). Proprietà complessa (<see cref="T:System.Data.Entity.Infrastructure.DbComplexPropertyEntry`2" />). </summary>
      <returns>Oggetto che rappresenta il membro.</returns>
      <param name="propertyName">Nome del membro.</param>
      <typeparam name="TMember">Tipo di membro.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.op_Implicit(System.Data.Entity.Infrastructure.DbEntityEntry{`0})~System.Data.Entity.Infrastructure.DbEntityEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> non generica per l'entità rilevata rappresentata da questo oggetto. </summary>
      <returns>Restituisce <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" />.</returns>
      <param name="entry">Voce.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.OriginalValues">
      <summary>Ottiene i valori di proprietà originali per l'entità rilevata rappresentata da questo oggetto. I valori originali sono generalmente i valori di proprietà dell'entità al momento dell'esecuzione dell'ultima query dal database. </summary>
      <returns>Valori originali.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Ottiene un oggetto che rappresenta una proprietà scalare o complessa dell'entità. </summary>
      <returns>Oggetto che rappresenta la proprietà.</returns>
      <param name="property">Proprietà.</param>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Property``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà scalare o complessa dell'entità. </summary>
      <returns>Oggetto che rappresenta la proprietà.</returns>
      <param name="propertyName">Nome della proprietà.</param>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Property(System.String)">
      <summary>Ottiene un oggetto che rappresenta una proprietà scalare o complessa dell'entità. </summary>
      <returns>Oggetto che rappresenta la proprietà.</returns>
      <param name="propertyName">Nome della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione di riferimento (cioè non di raccolta) da questa entità a un'altra entità. </summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Espressione che rappresenta la proprietà di navigazione.</param>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reference(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione di riferimento (non di raccolta) da questa entità a un'altra entità. </summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reference``1(System.String)">
      <summary>Ottiene un oggetto che rappresenta la proprietà di navigazione di riferimento (cioè non di raccolta) da questa entità a un'altra entità. </summary>
      <returns>Oggetto che rappresenta la proprietà di navigazione.</returns>
      <param name="navigationProperty">Nome della proprietà di navigazione.</param>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.Reload">
      <summary>Ricarica l'entità dal database sovrascrivendo i valori di proprietà con i valori del database. Dopo aver chiamato questo metodo, lo stato dell'entità sarà Unchanged. </summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbEntityEntry`1.State">
      <summary>Ottiene o imposta lo stato dell'entità. </summary>
      <returns>Stato.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbEntityEntry`1.ToString">
      <summary>Restituisce una rappresentazione di stringa dei valori delle entità del database.</summary>
      <returns>Rappresentazione di stringa dei valori delle entità del database.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbMemberEntry">
      <summary>Si tratta di un utilizzo della classe di base astratta per rappresentare una proprietà scalare o complessa o una proprietà di navigazione di un'entità.  Le proprietà scalari o complesse utilizzano la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" />, le proprietà di navigazione di riferimento utilizzano la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry" />e le proprietà di navigazione della raccolta utilizzano la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.Cast``2">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry`2" /> generico equivalente. </summary>
      <returns>Oggetto generico equivalente.</returns>
      <typeparam name="TEntity">Tipo di entità in cui viene dichiarato il membro.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry.CurrentValue">
      <summary>Ottiene o imposta il valore corrente di questa proprietà. </summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry.EntityEntry">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> a cui appartiene il membro. </summary>
      <returns>Una voce per l'entità che possiede questo membro.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.Equals(System.Object)">
      <summary>Restituisce un valore che indica se la voce specificata è uguale alla query corrente.</summary>
      <returns>True se la voce specificata è uguale alla voce corrente; in caso contrario, false.</returns>
      <param name="obj">Voce da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.GetHashCode">
      <summary>Restituisce la funzione hash per la voce specificata.</summary>
      <returns>Funzione hash per la voce specificata.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.GetType">
      <summary>Ottiene il tipo per la voce corrente.</summary>
      <returns>Tipo per la voce corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.GetValidationErrors">
      <summary>Convalida questa proprietà. </summary>
      <returns>Raccolta di oggetti <see cref="T:System.Data.Entity.Validation.DbValidationError" />. Mai null. Se l'entità è valida, la raccolta sarà vuota. </returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry.Name">
      <summary>Ottiene il nome della proprietà. </summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry.ToString">
      <summary>Restituisce una rappresentazione di stringa dei valori delle proprietà del database.</summary>
      <returns>Rappresentazione di stringa dei valori delle proprietà del database.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbMemberEntry`2">
      <summary>Classe di base astratta per rappresentare una proprietà scalare o complessa o una proprietà di navigazione di un'entità.  Le proprietà scalari o complesse utilizzano la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2" />, le proprietà di navigazione di riferimento utilizzano la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2" />e le proprietà di navigazione della raccolta utilizzano la classe derivata <see cref="T:System.Data.Entity.Infrastructure.DbCollectionEntry`2" />. </summary>
      <typeparam name="TEntity">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
      <typeparam name="TProperty">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry`2" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry`2.CurrentValue">
      <summary>Ottiene o imposta il valore corrente di questa proprietà. </summary>
      <returns>Restituisce <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry`2.EntityEntry">
      <summary>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> a cui appartiene il membro. </summary>
      <returns>Una voce per l'entità che possiede questo membro.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.Equals(System.Object)">
      <summary>Restituisce un valore che indica se la query specificata è uguale alla query corrente.</summary>
      <returns>True se la query specificata è uguale alla query corrente; in caso contrario, false.</returns>
      <param name="obj">Query da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.GetHashCode">
      <summary>Restituisce la funzione hash per la query specificata.</summary>
      <returns>Funzione hash per la query specificata.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.GetType">
      <summary>Ottiene il tipo per la query corrente.</summary>
      <returns>Tipo per la query corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.GetValidationErrors">
      <summary>Convalida questa proprietà. </summary>
      <returns>Raccolta di oggetti <see cref="T:System.Data.Entity.Validation.DbValidationError" />. Mai null. Se l'entità è valida, la raccolta sarà vuota. </returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbMemberEntry`2.Name">
      <summary>Ottiene il nome della voce del membro del database.</summary>
      <returns>Nome della voce del membro del database.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbMemberEntry{`0,`1})~System.Data.Entity.Infrastructure.DbMemberEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry" /> non generica per la proprietà rappresentata da questo oggetto. </summary>
      <returns>Restituisce <see cref="T:System.Data.Entity.Infrastructure.DbMemberEntry" />.</returns>
      <param name="entry">Voce.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbMemberEntry`2.ToString">
      <summary>Restituisce una rappresentazione di stringa dei valori delle proprietà del database.</summary>
      <returns>Rappresentazione di stringa dei valori delle proprietà del database.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbModel">
      <summary>Rappresenta un Entity Data Model (EDM) creato da <see cref="T:System.Data.Entity.DbModelBuilder" />. Il metodo <see cref="M:System.Data.Entity.Infrastructure.DbModel.Compile" /> può essere utilizzato per eseguire la conversione da una rappresentazione EDM a <see cref="T:System.Data.Entity.Infrastructure.DbCompiledModel" /> che è uno snapshot compilato del modello adatto per la memorizzare nella cache e la creazione di <see cref="T:System.Data.Entity.DbContext" /> o delle istanze <see cref="T:System.Data.Objects.ObjectContext" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbModel.Compile">
      <summary>Crea un <see cref="T:System.Data.Entity.Infrastructure.DbCompiledModel" /> per questa modalità che è un snapshot compilato adatto per la memorizzare nella cache e la creazione delle istanze <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <returns>Modello compilato.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbPropertyEntry">
      <summary>Una versione non generica della classe <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyEntry.Cast``2">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2" /> generico equivalente. </summary>
      <returns>Oggetto generico equivalente.</returns>
      <typeparam name="TEntity">Tipo di entità in cui viene dichiarato il membro.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.CurrentValue">
      <summary>Ottiene o imposta il valore corrente di questa proprietà. </summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.EntityEntry">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> a cui appartiene questa proprietà. </summary>
      <returns>Una voce per l'entità che possiede questa proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.IsModified">
      <summary>Ottiene o imposta un valore che indica se è stato modificato il valore di questa proprietà da quando è stato caricato dal database. </summary>
      <returns>true se questa istanza è stata modificata; in caso contrario, false. </returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.Name">
      <summary>Ottiene il nome della proprietà. </summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.OriginalValue">
      <summary>Ottiene o imposta il valore originale di questa proprietà. </summary>
      <returns>Valore originale.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry.ParentProperty">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" /> della proprietà di cui questa è una proprietà annidata. Questo metodo restituirà solo una voce non Null per le proprietà di oggetti complessi, negli altri casi restituirà null per le proprietà dell'entità stessa. </summary>
      <returns>Una voce per la proprietà complessa padre o null se si tratta di una proprietà dell'entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbPropertyEntry`2">
      <summary>Le istanze di questa classe vengono restituite dal metodo Property di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> e consentono l'accesso allo stato della proprietà scalare o complessa. </summary>
      <typeparam name="TEntity">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.CurrentValue">
      <summary>Ottiene o imposta il valore corrente di questa proprietà. </summary>
      <returns>Restituisce <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.EntityEntry">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> a cui appartiene questa proprietà. </summary>
      <returns>Una voce per l'entità che possiede questa proprietà.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.IsModified">
      <summary>Ottiene o imposta un valore che indica se è stato modificato il valore di questa proprietà da quando è stato caricato dal database. </summary>
      <returns>true se questa istanza è stata modificata; in caso contrario, false. </returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.Name">
      <summary>Ottiene il nome della proprietà. </summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbPropertyEntry{`0,`1})~System.Data.Entity.Infrastructure.DbPropertyEntry">
      <summary>Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" /> non generica per la proprietà rappresentata da questo oggetto. </summary>
      <returns>Restituisce <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" />.</returns>
      <param name="entry">Voce.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.OriginalValue">
      <summary>Ottiene o imposta il valore originale di questa proprietà. </summary>
      <returns>Restituisce il valore <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyEntry`2.ParentProperty">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.DbPropertyEntry" /> della proprietà di cui questa è una proprietà annidata. Questo metodo restituirà solo una voce non Null per le proprietà di oggetti complessi, mentre restituirà null per le proprietà dell'entità stessa. </summary>
      <returns>Una voce per la proprietà complessa padre o null se si tratta di una proprietà dell'entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbPropertyValues">
      <summary>Raccolta di tutte le proprietà per un'entità sottostante o un oggetto complesso. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.Clone">
      <summary>Crea un nuovo dizionario contenente le copie di tutte le proprietà contenute in questo dizionario. Le modifiche apportate al nuovo dizionario non verranno riflesse in questo dizionario e viceversa. </summary>
      <returns>Clone del dizionario.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.Equals(System.Object)">
      <summary>Restituisce un valore che indica se il valore specificato è uguale al valore corrente.</summary>
      <returns>True se il valore specificato è uguale al valore corrente ; in caso contrario, false.</returns>
      <param name="obj">Valore da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.GetHashCode">
      <summary>Restituisce la funzione hash per il valore specificato.</summary>
      <returns>Funzione hash per il valore specificato.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.GetType">
      <summary>Ottiene il tipo per il valore corrente.</summary>
      <returns>Tipo per il valore corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.GetValue``1(System.String)">
      <summary>Ottiene il valore della proprietà come quando si utilizza il metodo Get della proprietà indicizzata, ma tipizzato in base al tipo del parametro generico.  Ciò si rivela particolarmente utile con i dizionari annidati per evitare di scrivere espressioni con molti cast. </summary>
      <returns>Restituisce <see cref="T:System.Type" />Il valore della proprietà specificata da <paramref name="propertyName" />.</returns>
      <param name="propertyName">Nome della proprietà.</param>
      <typeparam name="TValue">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyValues.Item(System.String)">
      <summary>Ottiene o imposta il valore della proprietà con il nome della proprietà specificato. Il valore può essere un'istanza annidata di questa classe. </summary>
      <returns>Valore della proprietà.</returns>
      <param name="propertyName">Nome della proprietà da recuperare.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbPropertyValues.PropertyNames">
      <summary>Ottiene il set di nomi di tutte le proprietà contenute in questo dizionario come set di sola lettura. </summary>
      <returns>Nomi delle proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.SetValues(System.Data.Entity.Infrastructure.DbPropertyValues)">
      <summary>Imposta i valori di questo dizionario leggendo i valori da un altro dizionario. L'altro dizionario deve essere basato sullo stesso tipo di questo dizionario o su un tipo derivato dal tipo di quest'ultimo. </summary>
      <param name="propertyValues">Dizionario da cui leggere i dati.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.SetValues(System.Object)">
      <summary>Imposta i valori di questo dizionario leggendo i valori fuori dall'oggetto specificato. L'oggetto specificato può essere di qualsiasi tipo.  Qualsiasi proprietà dell'oggetto con un nome che corrisponde a un nome di proprietà del dizionario e che può essere letta, verrà letta.  Le altre proprietà verranno ignorate.  Questo consente la copia di proprietà da oggetti DTO (Data Transfer Object) semplici. </summary>
      <param name="obj">Oggetto da cui leggere i dati.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.ToObject">
      <summary>Crea un oggetto del tipo sottostante per questo dizionario e lo popola con i valori delle proprietà presenti in questo dizionario. </summary>
      <returns>Proprietà di questo dizionario copiate in un nuovo oggetto.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbPropertyValues.ToString">
      <summary>Restituisce una rappresentazione di stringa dei valori delle proprietà del database.</summary>
      <returns>Rappresentazione di stringa dei valori delle proprietà del database.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbProviderInfo">
      <summary>Archivia informazioni su un provider di database.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbProviderInfo.#ctor(System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbProviderInfo" />.</summary>
      <param name="providerInvariantName">Nome invariante del provider che specifica la versione di SQL Server Compact Edition da utilizzare.</param>
      <param name="providerManifestToken">Le informazioni sul token del manifesto per il provider, nell'elemento Schema.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbProviderInfo.ProviderInvariantName">
      <summary>Ottiene il nome invariante del provider che specifica la versione di SQL Server Compact Edition da utilizzare.</summary>
      <returns>Provider di dati del provider del database.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbProviderInfo.ProviderManifestToken">
      <summary>Ottiene le informazioni sul token del manifesto per il provider nell'elemento Schema.</summary>
      <returns>Token del manifesto.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbQuery">
      <summary>Rappresenta una query LINQ to Entities non generica su <see cref="T:System.Data.Entity.DbContext" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.AsNoTracking">
      <summary>Restituisce una nuova query in cui le entità restituite non verranno memorizzate nella cache di <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <returns>Una nuova query a cui è stato applicato il valore NoTracking.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.Cast``1">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbQuery`1" /> generico equivalente. </summary>
      <returns>Oggetto del set generico.</returns>
      <typeparam name="TElement">Tipo di elemento per cui è stata creata la query.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery.ElementType">
      <summary>Tipo di elemento IQueryable. </summary>
      <returns>Tipo dell'elemento.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.Equals(System.Object)">
      <summary>Restituisce un valore che indica se la query specificata è uguale alla query corrente.</summary>
      <returns>True se la query specificata è uguale alla query corrente; in caso contrario, false.</returns>
      <param name="obj">Query da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.GetHashCode">
      <summary>Restituisce la funzione hash per la query specificata.</summary>
      <returns>Funzione hash per la query specificata.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.GetType">
      <summary>Ottiene il tipo per la query corrente.</summary>
      <returns>Tipo per la query corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.Include(System.String)">
      <summary>Restituisce la query LINQ to Entities non generica inclusa su <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>Query LINQ inclusa.</returns>
      <param name="path">Percorso della query LINQ inclusa.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ottiene l'enumerazione di questa query facendo in modo che venga eseguita sull'archivio.</summary>
      <returns>
        <see cref="T:System.Collections.IEnumerator" /> per la query.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Restituisce false.</summary>
      <returns>false</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.System#ComponentModel#IListSource#GetList">
      <summary>Genera un'eccezione che indica che l'associazione diretta a una query dell'archivio non è supportata. </summary>
      <returns>Non restituisce mai; genera sempre.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery.System#Linq#IQueryable#Expression">
      <summary>Espressione LINQ IQueryable.</summary>
      <returns>Restituisce il valore <see cref="T:System.Linq.Expressions.Expression" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery.System#Linq#IQueryable#Provider">
      <summary>Provider IQueryable.</summary>
      <returns>Restituisce <see cref="T:System.Linq.IQueryProvider" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery.ToString">
      <summary>Restituisce una rappresentazione <see cref="T:System.String" /> della query sottostante. </summary>
      <returns>Stringa di query. </returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbQuery`1">
      <summary>Rappresenta una query LINQ to Entities su <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <typeparam name="TResult">Tipo di entità per cui eseguire una query.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.AsNoTracking">
      <summary>Restituisce una nuova query in cui le entità restituite non verranno memorizzate nella cache di <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <returns>Una nuova query a cui è stato applicato il valore NoTracking.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.Equals(System.Object)">
      <summary>Restituisce un valore che indica se la query specificata è uguale alla query corrente.</summary>
      <returns>True se la query specificata è uguale alla query corrente; in caso contrario, false.</returns>
      <param name="obj">Query da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.GetHashCode">
      <summary>Restituisce la funzione hash per la query specificata.</summary>
      <returns>Funzione hash per la query specificata.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.GetType">
      <summary>Ottiene il tipo per la query corrente.</summary>
      <returns>Tipo per la query corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.Include(System.String)">
      <summary>Restituisce la query LINQ to Entities inclusa su <see cref="T:System.Data.Entity.DbContext" />.</summary>
      <returns>Query LINQ inclusa.</returns>
      <param name="path">Percorso della query LINQ inclusa.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.op_Implicit(System.Data.Entity.Infrastructure.DbQuery{`0})~System.Data.Entity.Infrastructure.DbQuery">
      <summary>Restituisce una nuova istanza della classe non generica <see cref="T:System.Data.Entity.Infrastructure.DbQuery" /> per la query. </summary>
      <returns>Restituisce <see cref="T:System.Data.Entity.Infrastructure.DbQuery" />.</returns>
      <param name="entry">Voce.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Ottiene l'enumerazione di questa query facendo in modo che venga eseguita sull'archivio.</summary>
      <returns>Restituisce <see cref="T:System.Collections.Generic.IEnumerator`1" /> per la query.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Ottiene l'enumerazione di questa query facendo in modo che venga eseguita sull'archivio.</summary>
      <returns>Restituisce <see cref="T:System.Collections.IEnumerator" /> per la query.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery`1.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Restituisce false.</summary>
      <returns>false</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.System#ComponentModel#IListSource#GetList">
      <summary>Genera un'eccezione che indica che l'associazione diretta a una query dell'archivio non è supportata. </summary>
      <returns>Non restituisce mai; genera sempre.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery`1.System#Linq#IQueryable#ElementType">
      <summary>Tipo di elemento IQueryable.</summary>
      <returns>Restituisce il valore <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery`1.System#Linq#IQueryable#Expression">
      <summary>Espressione LINQ IQueryable.</summary>
      <returns>Restituisce il valore <see cref="T:System.Linq.Expressions.Expression" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbQuery`1.System#Linq#IQueryable#Provider">
      <summary>Provider IQueryable.</summary>
      <returns>Restituisce <see cref="T:System.Linq.IQueryProvider" />.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbQuery`1.ToString">
      <summary>Restituisce una rappresentazione <see cref="T:System.String" /> della query sottostante. </summary>
      <returns>Stringa di query. </returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbReferenceEntry">
      <summary>Una versione non generica della classe <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry.Cast``2">
      <summary>Restituisce l'oggetto <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2" /> generico equivalente. </summary>
      <returns>Oggetto generico equivalente.</returns>
      <typeparam name="TEntity">Tipo di entità in cui viene dichiarato il membro.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry.CurrentValue">
      <summary>Ottiene o imposta il valore corrente della proprietà di navigazione.  Il valore corrente è costituito dall'entità a cui fa riferimento la proprietà di navigazione. </summary>
      <returns>Valore corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry.EntityEntry">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> a cui appartiene la proprietà di navigazione. </summary>
      <returns>Una voce per l'entità che possiede questa proprietà di navigazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry.IsLoaded">
      <summary>Ottiene un valore che indica se l'entità è stata caricata dal database. </summary>
      <returns>true se l'entità è stata caricata; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry.Load">
      <summary>Carica l'entità dal database. Notare che se l'entità esiste già nel contesto, non verrà sovrascritta con i valori del database. </summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry.Name">
      <summary>Ottiene il nome della proprietà. </summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry.Query">
      <summary>Restituisce la query che verrà utilizzata per caricare questa entità dal database. È possibile modificare la query restituita utilizzando LINQ per applicare filtri o eseguire operazioni nel database. </summary>
      <returns>Query per l'entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbReferenceEntry`2">
      <summary>Le istanze di questa classe vengono restituite dal metodo Reference di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> e consentono l'esecuzione di operazioni come il caricamento sulle proprietà di navigazione di riferimento dell'entità. </summary>
      <typeparam name="TEntity">Tipo dell'entità a cui appartiene questa proprietà.</typeparam>
      <typeparam name="TProperty">Tipo della proprietà.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry`2.CurrentValue">
      <summary>Ottiene o imposta il valore corrente della proprietà di navigazione.  Il valore corrente è costituito dall'entità a cui fa riferimento la proprietà di navigazione. </summary>
      <returns>Restituisce <see cref="T:System.Linq.IQueryable`1" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry`2.EntityEntry">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1" /> a cui appartiene la proprietà di navigazione. </summary>
      <returns>Una voce per l'entità che possiede questa proprietà di navigazione.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry`2.IsLoaded">
      <summary>Ottiene un valore che indica se l'entità è stata caricata dal database. </summary>
      <returns>true se l'entità è stata caricata; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry`2.Load">
      <summary>Carica l'entità dal database. Se l'entità esiste già nel contesto, non verrà sovrascritta con i valori del database. </summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbReferenceEntry`2.Name">
      <summary>Ottiene il nome della proprietà. </summary>
      <returns>Nome della proprietà.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry`2.op_Implicit(System.Data.Entity.Infrastructure.DbReferenceEntry{`0,`1})~System.Data.Entity.Infrastructure.DbReferenceEntry">
      <summary> Restituisce una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry" /> non generica per la proprietà di navigazione rappresentata da questo oggetto. </summary>
      <returns>Restituisce <see cref="T:System.Data.Entity.Infrastructure.DbReferenceEntry" />.</returns>
      <param name="entry">Voce.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbReferenceEntry`2.Query">
      <summary>Restituisce la query che verrà utilizzata per caricare questa entità dal database. È possibile modificare la query restituita utilizzando LINQ per applicare filtri o eseguire operazioni nel database. </summary>
      <returns>Query per l'entità.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbSqlQuery">
      <summary>Rappresenta una query SQL per entità create da un <see cref="T:System.Data.Entity.DbContext" /> e viene eseguita utilizzando la connessione da tale contesto. Le istanze di questa classe vengono ottenute dall'istanza di <see cref="T:System.Data.Entity.DbSet" /> per il tipo di entità. La query non viene eseguita quando viene creato questo oggetto; viene eseguita ogni volta che viene enumerata, ad esempio tramite foreach. Le query SQL per le non entità vengono create utilizzando <see cref="P:System.Data.Entity.DbContext.Database" />. Per una versione generica di questa classe, vedere <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery`1" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.AsNoTracking">
      <summary>Restituisce una nuova query in cui i risultati della query non verranno rilevati dall'oggetto <see cref="T:System.Data.Entity.DbContext" /> associato. </summary>
      <returns>Nuova query a cui è stato applicato il valore No-tracking.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.Equals(System.Object)">
      <summary>Restituisce un valore che indica se la query specificata è uguale alla query corrente.</summary>
      <returns>True se la query specificata è uguale alla query corrente; in caso contrario, false.</returns>
      <param name="obj">Query da confrontare con l'oggetto corrente. </param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.GetEnumerator">
      <summary>Esegue la query e restituisce un enumeratore per gli elementi. </summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere gli elementi. </returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.GetHashCode">
      <summary>Restituisce la funzione hash per la query specificata.</summary>
      <returns>Funzione hash per la query specificata.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.GetType">
      <summary>Ottiene il tipo per la query corrente.</summary>
      <returns>Tipo per la query corrente.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbSqlQuery.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Restituisce false.</summary>
      <returns>false</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.System#ComponentModel#IListSource#GetList">
      <summary>Genera un'eccezione che indica che l'associazione diretta a una query dell'archivio non è supportata.</summary>
      <returns>Non restituisce mai; genera sempre.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery.ToString">
      <summary>Restituisce un oggetto <see cref="T:System.String" /> contenente la stringa SQL impostata quando è stata creata la query.  I parametri non sono inclusi. </summary>
      <returns>
        <see cref="T:System.String" /> che rappresenta l'istanza. </returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbSqlQuery`1">
      <summary>Rappresenta una query SQL per le entità create da <see cref="T:System.Data.Entity.DbContext" /> e viene eseguita utilizzando la connessione da tale contesto. Le istanze di questa classe vengono ottenute dall'istanza di <see cref="T:System.Data.Entity.DbSet`1" /> per il tipo di entità. La query non viene eseguita quando viene creato questo oggetto; viene eseguita ogni volta che viene enumerata, ad esempio tramite foreach. Le query SQL per le non entità vengono create utilizzando <see cref="P:System.Data.Entity.DbContext.Database" />. Per una versione non generica di questa classe, vedere <see cref="T:System.Data.Entity.Infrastructure.DbSqlQuery" />. </summary>
      <typeparam name="TEntity">Entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.AsNoTracking">
      <summary>Restituisce una nuova query in cui i risultati della query non verranno rilevati dall'oggetto <see cref="T:System.Data.Entity.DbContext" /> associato. </summary>
      <returns>Nuova query a cui è stato applicato il valore No-tracking.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.Equals(System.Object)">
      <summary>Restituisce un valore che indica se la query specificata è uguale alla query corrente.</summary>
      <returns>True se la query specificata è uguale alla query corrente; in caso contrario, false.</returns>
      <param name="obj">Query da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.GetEnumerator">
      <summary>Esegue la query e restituisce un enumeratore per gli elementi. </summary>
      <returns>Enumeratore per gli elementi.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.GetHashCode">
      <summary>Restituisce la funzione hash per la query specificata.</summary>
      <returns>Funzione hash per la query specificata.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.GetType">
      <summary>Ottiene il tipo per la query corrente.</summary>
      <returns>Tipo per la query corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Esegue la query e restituisce un enumeratore per gli elementi.</summary>
      <returns>Oggetto <see cref="T:System.Collections.IEnumerator" /> che può essere utilizzato per scorrere gli elementi.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbSqlQuery`1.System#ComponentModel#IListSource#ContainsListCollection">
      <summary>Restituisce false.</summary>
      <returns>false</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.System#ComponentModel#IListSource#GetList">
      <summary>Genera un'eccezione che indica che l'associazione diretta a una query dell'archivio non è supportata.</summary>
      <returns>Non restituisce mai; genera sempre.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbSqlQuery`1.ToString">
      <summary>Restituisce un oggetto <see cref="T:System.String" /> contenente la stringa SQL impostata quando è stata creata la query.  I parametri non sono inclusi. </summary>
      <returns>
        <see cref="T:System.String" /> che rappresenta l'istanza. </returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException">
      <summary>Eccezione generata da <see cref="T:System.Data.Entity.DbContext" /> quando il comportamento previsto è quello in cui SaveChanges per un'entità comporterebbe un aggiornamento del database, ma in realtà nessuna riga del database è stata interessata dall'operazione.  Questo di solito indica che il database è stato aggiornato simultaneamente e che non è stata trovata una corrispondenza per un token di concorrenza di cui si prevedeva di trovarne una. Le voci di stato a cui fa riferimento questa eccezione non sono serializzate a causa della sicurezza e dell'accesso a tali voci di stato dopo la restituzione di null da parte della serializzazione. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />. </summary>
      <param name="message">Messaggio.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateConcurrencyException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />. </summary>
      <param name="message">Messaggio.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.DbUpdateException">
      <summary>Rappresenta le eccezioni rilevate durante l'aggiornamento di un database.</summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />. </summary>
      <param name="message">Messaggio.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.DbUpdateException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.DbUpdateException" />. </summary>
      <param name="message">Messaggio.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.DbUpdateException.Entries">
      <summary>Ottiene oggetti <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> che rappresentano le entità che non sono state salvate nel database. </summary>
      <returns>Entità che non sono state salvate nel database. </returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.EdmMetadata">
      <summary>Rappresenta un'entità utilizzata per archiviare i metadati relativi a un EDM nel database. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.EdmMetadata.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.EdmMetadata" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.EdmMetadata.Id">
      <summary>Ottiene o imposta l'identificatore dell'entità di metadati che attualmente è sempre 1. </summary>
      <returns>Identificatore.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.EdmMetadata.ModelHash">
      <summary>Ottiene o imposta l'hash del modello utilizzato per controllare se il modello è stato modificato dalla creazione del database dal medesimo. </summary>
      <returns>Hash del modello.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.EdmMetadata.TryGetModelHash(System.Data.Entity.DbContext)">
      <summary>Tenta di ottenere l'hash del modello calcolato da Code First per il contesto specificato. Questo metodo restituirà null se il contesto non viene utilizzato in modalità Code First. </summary>
      <returns>Stringa di hash.</returns>
      <param name="context">Contesto.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.EdmxWriter">
      <summary>Contiene i metodi utilizzati per accedere a Entity Data Model creato da Code First nel modulo EDMX. Questi metodi vengono in genere utilizzati per il debug quando esiste la necessità di analizzare il modello creato da Code First internamente. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.EdmxWriter.WriteEdmx(System.Data.Entity.DbContext,System.Xml.XmlWriter)">
      <summary>Utilizza Code First insieme al contesto specificato e scrive l' Entity Data Model risultante nel writer specificato del modulo EDMX.  Questo metodo può essere utilizzato solo con istanze del contesto che utilizzano Code First e che creano il modello internamente.  Il metodo non può essere utilizzato per contesti creati utilizzando Database First o Model First, per contesti creati utilizzando un <see cref="T:System.Data.Objects.ObjectContext" /> preesistente o per contesti creati utilizzando un <see cref="T:System.Data.Entity.Infrastructure.DbCompiledModel" /> preesistente. </summary>
      <param name="context">Contesto.</param>
      <param name="writer">Writer.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.EdmxWriter.WriteEdmx(System.Data.Entity.Infrastructure.DbModel,System.Xml.XmlWriter)">
      <summary>Scrive l'Entity Data Model rappresentato dal <see cref="T:System.Data.Entity.Infrastructure.DbModel" /> specificato nel writer specificato del modulo EDMX. </summary>
      <param name="model">Oggetto che rappresenta il modello EDM.</param>
      <param name="writer">Writer.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbConnectionFactory">
      <summary>Le implementazioni di questa interfaccia vengono utilizzate per creare oggetti DbConnection per un tipo di server di database basato su un nome di database specificato.   Viene impostata un'istanza sulla classe <see cref="T:System.Data.Entity.Database" /> per fare in modo che tutti gli oggetti <see cref="T:System.Data.Entity.DbContext" /> vengano creati senza informazioni di connessione o solo con un nome di database o una stringa di connessione in modo che venga utilizzato per impostazione predefinita un determinato tipo di server di database. Vengono fornite due implementazioni di questa interfaccia <see cref="T:System.Data.Entity.Infrastructure.SqlConnectionFactory" /> utilizzata per creare connessioni a Microsoft SQL Server, incluse le edizioni EXPRESS e <see cref="T:System.Data.Entity.Infrastructure.SqlCeConnectionFactory" /> utilizzata per creare connessioni a Microsoft SQL Server Compact Edition. È possibile aggiungere altre implementazioni per altri server di database in base alle necessità. Le implementazioni devono essere thread-safe o non modificabili in quanto sono accessibili da più thread contemporaneamente. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbConnectionFactory.CreateConnection(System.String)">
      <summary>Crea una connessione basata sul nome di database o sulla stringa di connessione specificati. </summary>
      <returns>Un oggetto DbConnection inizializzato.</returns>
      <param name="nameOrConnectionString">Nome di database o stringa di connessione.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IDbContextFactory`1">
      <summary>Factory per la creazione di istanze <see cref="T:System.Data.Entity.DbContext" /> derivate. Implementare questa interfaccia per abilitare servizi per la fase di progettazione e creazione di istanze per i tipi di contesto che non dispongono di un costruttore predefinito pubblico. È possibile creare istanze <see cref="T:System.Data.Entity.DbContext" /> derivate in fase di progettazione per abilitare fasi di progettazione specifiche, ad esempio rendering del modello e generazione DDL. I servizi per la fase di progettazione possono individuare automaticamente implementazioni di questa interfaccia che si trovano nello stesso assembly del tipo <see cref="T:System.Data.Entity.DbContext" /> derivato.</summary>
      <typeparam name="TContext">Questo parametro di tipo è covariante, ovvero è possibile utilizzare il tipo specificato o qualsiasi tipo con più derivazioni. Per ulteriori informazioni su covarianza e controvarianza, vedere .</typeparam>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IDbContextFactory`1.Create">
      <summary>Crea una nuova istanza di un tipo <see cref="T:System.Data.Entity.DbContext" /> derivato.</summary>
      <returns>Istanza di <see cref="TContext" /></returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IncludeMetadataConvention">
      <summary>Questa convenzione <see cref="T:System.Data.Entity.DbModelBuilder" /> fa in modo che <see cref="T:System.Data.Entity.DbModelBuilder" /> includa i metadati sul modello durante la sua compilazione. Quando <see cref="T:System.Data.Entity.DbContext" /> crea un modello in base alla convenzione, aggiungerà questa convenzione all'elenco di quelle utilizzate da <see cref="T:System.Data.Entity.DbModelBuilder" />.  Questo determinerà la scrittura dei metadati nel database se viene utilizzato <see cref="T:System.Data.Entity.DbContext" /> per creare il database. Questo può essere quindi utilizzato per verificare se il modello è stato modificato dall'ultima volta che è stato utilizzato sul database.  Questa convenzione può essere rimossa dall'elenco delle convenzioni <see cref="T:System.Data.Entity.DbModelBuilder" /> eseguendo l'override del metodo <see cref="M:System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.IncludeMetadataConvention.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.IncludeMetadataConvention" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.IObjectContextAdapter">
      <summary>Interfaccia implementata da oggetti che possono fornire un'istanza <see cref="P:System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext" />. La classe <see cref="T:System.Data.Entity.DbContext" /> implementa questa interfaccia per fornire l'accesso a ObjectContext sottostante. </summary>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext">
      <summary>Ottiene il contesto dell’oggetto. </summary>
      <returns>Contesto dell'oggetto.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.LocalDbConnectionFactory">
      <summary>     Le istanze di questa classe vengono utilizzate per creare oggetti DbConnection per SQL Server LocalDb basati su un nome di database o su una stringa di connessione specificato. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.#ctor(System.String)">
      <summary>     Crea una nuova istanza della factory di connessione per la versione specificata di LocalDb.     Per SQL Server 2012 LocalDb utilizzare "v11.0". </summary>
      <param name="localDbVersion">Versione di LocalDb da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.#ctor(System.String,System.String)">
      <summary>     Crea una nuova istanza della factory di connessione per la versione specificata di LocalDb.     Per SQL Server 2012 LocalDb utilizzare "v11.0".      </summary>
      <param name="localDbVersion">Versione di LocalDb da utilizzare.</param>
      <param name="baseConnectionString">     Stringa di connessione da utilizzare per le opzioni del database diverse da 'Initial Catalog', 'Data Source' e 'AttachDbFilename'.     'Initial Catalog' e 'AttachDbFilename verranno anteposti a questa stringa in base al nome del database quando viene chiamato CreateConnection.     'Data Source' verrà impostato in base all'argomento LocalDbVersion. </param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.BaseConnectionString">
      <summary>     Stringa di connessione da utilizzare per le opzioni del database diverse da 'Initial Catalog', 'Data Source' e 'AttachDbFilename'.     'Initial Catalog' e 'AttachDbFilename verranno anteposti a questa stringa in base al nome del database quando viene chiamato CreateConnection.     'Data Source' verrà impostato in base all'argomento LocalDbVersion.     L'impostazione predefinita è 'Integrated Security=True; MultipleActiveResultSets=True;'. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.CreateConnection(System.String)">
      <summary>     Crea una connessione per SQL Server LocalDb basata sul nome di database o sulla stringa di connessione specificato.     Se la stringa specificata contiene un carattere '=', viene considerata come stringa di connessione completa; in caso contrario, viene considerata solo come nome di database. </summary>
      <returns>Un oggetto DbConnection inizializzato.</returns>
      <param name="nameOrConnectionString">Nome di database o stringa di connessione.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.ModelContainerConvention">
      <summary>Questa convenzione <see cref="T:System.Data.Entity.DbModelBuilder" /> utilizza il nome della classe <see cref="T:System.Data.Entity.DbContext" /> derivata come contenitore per il modello concettuale compilato da Code First. </summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.ModelNamespaceConvention">
      <summary>Questa convenzione <see cref="T:System.Data.Entity.DbModelBuilder" /> utilizza lo spazio dei nomi della classe <see cref="T:System.Data.Entity.DbContext" /> derivata come spazio dei nomi del modello concettuale compilato da Code First. </summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.ReplacementDbQueryWrapper`1">
      <summary>Le istanze di questa classe vengono utilizzate internamente per creare espressioni costanti che vengono inserite nell'albero delle espressioni per sostituire i riferimenti a <see cref="T:System.Data.Entity.Infrastructure.DbQuery`1" /> e <see cref="T:System.Data.Entity.Infrastructure.DbQuery" />. </summary>
      <typeparam name="TElement">Tipo dell'elemento.</typeparam>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.ReplacementDbQueryWrapper`1.Query">
      <summary>Proprietà pubblica prevista nell'albero delle espressioni LINQ.</summary>
      <returns>Restituisce <see cref="T:System.Data.Objects.ObjectQuery`1" />. Query.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.SqlCeConnectionFactory">
      <summary>Le istanze di questa classe vengono utilizzate per creare oggetti DbConnection per SQL Server Compact Edition basati su un nome di database o su una stringa di connessione specificati. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.#ctor(System.String)">
      <summary> Crea una nuova factory di connessione con le proprietà <see cref="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.DatabaseDirectory" /> e <see cref="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.BaseConnectionString" /> vuote (impostazione predefinita). </summary>
      <param name="providerInvariantName">Nome invariante del provider che specifica la versione di SQL Server Compact Edition da utilizzare.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.#ctor(System.String,System.String,System.String)">
      <summary>Crea una nuova factory di connessione con le proprietà <see cref="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.DatabaseDirectory" /> e <see cref="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.BaseConnectionString" /> specificate (impostazione predefinita). </summary>
      <param name="providerInvariantName">Nome invariante del provider che specifica la versione di SQL Server Compact Edition da utilizzare. </param>
      <param name="databaseDirectory">Percorso da anteporre al nome del database che formerà il nome file utilizzato da SQL Server Compact Edition durante la creazione o la lettura del file di database. Una stringa vuota determinerà l'utilizzo da parte di SQL Server Compact Edition del percorso predefinito come percorso del file di database. </param>
      <param name="baseConnectionString">Stringa di connessione da utilizzare per le opzioni nel database diverse da 'Origine dati'. L'origine dati verrà anteposta a questa stringa basata sul nome del database quando viene chiamato CreateConnection. </param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.BaseConnectionString">
      <summary>Stringa di connessione da utilizzare per le opzioni nel database diverse da 'Origine dati'. L'origine dati verrà anteposta a questa stringa basata sul nome del database quando viene chiamato CreateConnection. L'impostazione predefinita è una stringa vuota, che indica non verranno utilizzate altre opzioni. </summary>
      <returns>Stringa di connessione utilizzata.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.CreateConnection(System.String)">
      <summary>Crea una connessione per SQL Server Compact Edition basata sul nome di database o sulla stringa di connessione specificati. Se la stringa specificata contiene un carattere '=', viene trattata come una stringa di connessione completa; in caso contrario, viene trattata solo come un nome di database. </summary>
      <returns>Un oggetto DbConnection inizializzato.</returns>
      <param name="nameOrConnectionString">Nome di database o stringa di connessione.</param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.DatabaseDirectory">
      <summary>Percorso da anteporre al nome del database che formerà il nome file utilizzato da SQL Server Compact Edition durante la creazione o la lettura del file di database. Il valore predefinito è" | DataDirectory |", che indica che il file verrà inserito nella directory dei dati designata. </summary>
      <returns>Percorso del database.</returns>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.SqlCeConnectionFactory.ProviderInvariantName">
      <summary>Nome invariante del provider che specifica la versione di SQL Server Compact Edition da utilizzare. </summary>
      <returns>Nome invariante del provider.</returns>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.SqlConnectionFactory">
      <summary> Le istanze di questa classe vengono utilizzate per creare oggetti DbConnection per SQL Server basati su un nome di database o su una stringa di connessione specificati. Per impostazione predefinita, la connessione viene effettuata a '.\SQLEXPRESS'.  Ciò può essere modificato modificando la stringa di connessione quando si costruisce un'istanza della factory. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlConnectionFactory.#ctor">
      <summary>Crea una nuova factory di connessione con una proprietà BaseConnectionString predefinita di 'Data Source=.\SQLEXPRESS; Integrated Security=True; MultipleActiveResultSets=True'. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlConnectionFactory.#ctor(System.String)">
      <summary>Crea una nuova factory di connessione con la proprietà BaseConnectionString specificata. </summary>
      <param name="baseConnectionString">Stringa di connessione da utilizzare per le opzioni del database diverse da 'Catalogo iniziale'. Il 'Catalogo iniziale' verrà anteposto a questa stringa basata sul nome del database quando viene chiamato CreateConnection. </param>
    </member>
    <member name="P:System.Data.Entity.Infrastructure.SqlConnectionFactory.BaseConnectionString">
      <summary>Stringa di connessione da utilizzare per le opzioni del database diverse da 'Catalogo iniziale'. Il 'Catalogo iniziale' verrà anteposto a questa stringa basata sul nome del database quando viene chiamato CreateConnection. L'impostazione predefinita è 'Data Source=.\SQLEXPRESS; Integrated Security=True; MultipleActiveResultSets=True'. </summary>
      <returns>Stringa di connessione.</returns>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SqlConnectionFactory.CreateConnection(System.String)">
      <summary>Crea una connessione per SQL Server basata sul nome di database o sulla stringa di connessione specificati. Se la stringa specificata contiene un carattere '=', viene trattata come una stringa di connessione completa; in caso contrario, viene trattata solo come un nome di database. </summary>
      <returns>Un oggetto DbConnection inizializzato.</returns>
      <param name="nameOrConnectionString">Nome di database o stringa di connessione.</param>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.SuppressDbSetInitializationAttribute">
      <summary>Questo attributo può essere applicato a un'intera classe <see cref="T:System.Data.Entity.DbContext" /> derivata, a singole proprietà <see cref="T:System.Data.Entity.DbSet`1" /> o alle proprietà <see cref="T:System.Data.Entity.IDbSet`1" /> di tale classe.  Quando vengono applicate eventuali proprietà <see cref="T:System.Data.Entity.DbSet`1" /> individuate o <see cref="T:System.Data.Entity.IDbSet`1" />, verrà comunque incluso nel modello, ma non verrà inizializzato automaticamente. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.SuppressDbSetInitializationAttribute.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.SuppressDbSetInitializationAttribute" />.</summary>
    </member>
    <member name="T:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException">
      <summary>L'eccezione generata quando un contesto viene generato dai modelli <see cref="T:System.Data.Entity.DbContext" /> in Database First o Model First e viene quindi utilizzato in modalità Code First. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException" />. </summary>
      <param name="info">Oggetto contenente i dati serializzati dell'oggetto.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException" />. </summary>
      <param name="message">Messaggio.</param>
    </member>
    <member name="M:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Infrastructure.UnintentionalCodeFirstException" />. </summary>
      <param name="message">Messaggio.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.DbMigration">
      <summary>Rappresenta la classe di base per le migrazioni basate sul codice.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.DbMigration" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AddColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)">
      <summary>     Aggiunge un'operazione per l'aggiunta di una colonna a una tabella esistente. </summary>
      <param name="table">     Nome della tabella a cui aggiungere la colonna.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="name">     Nome della colonna da aggiungere. </param>
      <param name="columnAction">     Azione che specifica la colonna da aggiungere. Ad esempio c =&amp;gt; c.Int(nullable: false, defaultValue: 3).</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per creare un nuovo vincolo di chiave esterna. </summary>
      <param name="dependentTable">     Tabella che contiene la colonna di chiave esterna.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="dependentColumn">Colonna di chiave esterna.</param>
      <param name="principalTable">     Tabella che contiene la colonna a cui fa riferimento la chiave esterna.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="principalColumn">     Colonna a cui fa riferimento la chiave esterna.      Se non si fornisce un valore, verrà fatto riferimento alla chiave primaria della tabella principale. </param>
      <param name="cascadeDelete">     Valore che indica se è necessario configurare l'eliminazione a catena per la relazione di chiave esterna.     Se non si specifica un valore, l'eliminazione a catena sarà disattivata. </param>
      <param name="name">     Nome del vincolo di chiave esterna del database.     Se non si specifica un valore, verrà generato un nome univoco. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String[],System.String,System.String[],System.Boolean,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per creare un nuovo vincolo di chiave esterna. </summary>
      <param name="dependentTable">     Tabella che contiene le colonne di chiavi esterne.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="dependentColumns">Colonne di chiavi esterne.</param>
      <param name="principalTable">     Tabella che contiene le colonne a cui fa riferimento la chiave esterna.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="principalColumns">     Colonne a cui fa riferimento la chiave esterna.      Se non si fornisce un valore, verrà fatto riferimento alla chiave primaria della tabella principale. </param>
      <param name="cascadeDelete">     Valore che indica se è necessario configurare l'eliminazione a catena per la relazione di chiave esterna.     Se non si specifica un valore, l'eliminazione a catena sarà disattivata. </param>
      <param name="name">     Nome del vincolo di chiave esterna del database.     Se non si specifica un valore, verrà generato un nome univoco. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per creare una nuova chiave primaria. </summary>
      <param name="table">     Tabella che contiene la colonna di chiave primaria.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="column">Colonna di chiave primaria.</param>
      <param name="name">     Nome della chiave primaria del database.     Se non si specifica un valore, verrà generato un nome univoco. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String[],System.String,System.Object)">
      <summary>     Aggiunge un'operazione per creare una nuova chiave primaria basata su più colonne. </summary>
      <param name="table">     Tabella che contiene le colonne di chiavi primarie.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="columns">Colonne di chiavi primarie.</param>
      <param name="name">     Nome della chiave primaria del database.     Se non si specifica un valore, verrà generato un nome univoco. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.AlterColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)">
      <summary>     Aggiunge un'operazione per modificare la definizione di una colonna esistente. </summary>
      <param name="table">     Nome della tabella in cui è presente la colonna. Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="name">Nome della colonna da modificare.</param>
      <param name="columnAction">     Azione che specifica la nuova definizione della colonna. Ad esempio c =&amp;gt; c.String(nullable: false, defaultValue: "none").</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String,System.Boolean,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per creare un indice in una singola colonna. </summary>
      <param name="table">     Nome della tabella in cui creare l'indice.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="column">Nome della colonna in cui creare l'indice.</param>
      <param name="unique">     Valore che indica se si tratta di un indice univoco.     Se non si specifica un valore, verrà creato un indice non univoco. </param>
      <param name="name">     Nome da utilizzare per l'indice nel database.     Se non si specifica un valore, verrà generato un nome univoco. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String[],System.Boolean,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per creare un indice in più colonne. </summary>
      <param name="table">     Nome della tabella in cui creare l'indice.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="columns">Nome delle colonne in cui creare l'indice.</param>
      <param name="unique">     Valore che indica se si tratta di un indice univoco.     Se non si specifica un valore, verrà creato un indice non univoco. </param>
      <param name="name">     Nome da utilizzare per l'indice nel database.     Se non si specifica un valore, verrà generato un nome univoco. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)">
      <summary>     Aggiunge un'operazione per creare una nuova tabella. </summary>
      <returns>Oggetto che consente l'ulteriore configurazione dell'operazione di creazione della tabella.</returns>
      <param name="name">Nome della tabella. Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo.</param>
      <param name="columnsAction">     Azione che specifica le colonne da includere nella tabella. Ad esempio t =&amp;gt; new { Id = t.Int(identity: true), Name = t.String() }.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
      <typeparam name="TColumns">     Colonne in questa operazione di creazione della tabella.      Non è necessario specificare il tipo. Verrà dedotto dal parametro columnsAction specificato. </typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.Down">
      <summary>     Operazioni da eseguire durante il processo di downgrade. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per l'eliminazione di una colonna esistente. </summary>
      <param name="table">     Nome della tabella da cui eliminare la colonna.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="name">Nome della colonna da eliminare.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per eliminare un vincolo di chiave esterna in base al nome. </summary>
      <param name="dependentTable">     Tabella che contiene la colonna di chiave esterna.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="name">Nome del vincolo di chiave esterna del database.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per eliminare un vincolo di chiave esterna in base alla colonna di destinazione. </summary>
      <param name="dependentTable">     Tabella che contiene la colonna di chiave esterna.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="dependentColumn">Colonna di chiave esterna.</param>
      <param name="principalTable">     Tabella che contiene la colonna a cui fa riferimento la chiave esterna.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="principalColumn">Colonne a cui fa riferimento la chiave esterna.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String[],System.String,System.Object)">
      <summary>     Aggiunge un'operazione per eliminare un vincolo di chiave esterna in base alle colonne di destinazione. </summary>
      <param name="dependentTable">     Tabella che contiene le colonne di chiavi esterne.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="dependentColumns">Colonne di chiavi esterne.</param>
      <param name="principalTable">     Tabella che contiene le colonne a cui fa riferimento la chiave esterna.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per eliminare un indice in base al nome. </summary>
      <param name="table">     Nome della tabella da cui eliminare l'indice.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="name">Nome dell'indice da eliminare.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String[],System.Object)">
      <summary>     Aggiunge un'operazione per eliminare un indice in base alle colonne di destinazione. </summary>
      <param name="table">     Nome della tabella da cui eliminare l'indice.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="columns">Nome della colonna o delle colonne di destinazione dell'indice.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.Object)">
      <summary>     Aggiunge un'operazione per eliminare una chiave primaria esistente creata con il nome predefinito. </summary>
      <param name="table">     Tabella che contiene la colonna di chiave primaria.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per eliminare una chiave primaria esistente a cui non è assegnato il nome predefinito. </summary>
      <param name="table">     Tabella che contiene la colonna di chiave primaria.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="name">Nome della chiave primaria da eliminare.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Object)">
      <summary>     Aggiunge un'operazione per eliminare la tabella. </summary>
      <param name="name">     Nome della tabella da eliminare.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.Equals(System.Object)">
      <summary>Determina se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>True se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.GetHashCode">
      <summary>Ottiene i dati, per un parametro o una colonna, come il tipo specificato.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.GetType">
      <summary>Restituisce il tipo in fase di esecuzione dell'istanza corrente.</summary>
      <returns>Istanza di Type che rappresenta il tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto corrente.</summary>
      <returns>Copia superficiale dell'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.MoveTable(System.String,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per spostare una tabella in un nuovo schema. </summary>
      <param name="name">     Nome della tabella da spostare.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="newSchema">Schema in cui deve essere spostata la tabella.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.RenameColumn(System.String,System.String,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per rinominare una colonna. </summary>
      <param name="table">     Nome della tabella che contiene la colonna da rinominare.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="name">Nome della colonna da rinominare.</param>
      <param name="newName">Nuovo nome della colonna.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.RenameTable(System.String,System.String,System.Object)">
      <summary>     Aggiunge un'operazione per rinominare una tabella. Per modificare lo schema di una tabella, utilizzare MoveTable.</summary>
      <param name="name">     Nome della tabella da rinominare.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="newName">     Nuovo nome della tabella.     Il nome dello schema è facoltativo. Se non si specifica uno schema, viene utilizzato dbo. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.Sql(System.String,System.Boolean,System.Object)">
      <summary>     Aggiunge un'operazione per eseguire un comando SQL. </summary>
      <param name="sql">Comando SQL da eseguire.</param>
      <param name="suppressTransaction">     Valore che indica se il comando SQL deve essere eseguito all'esterno della transazione utilizzata per il processo di migrazione.     Se non si specifica un valore, il comando SQL verrà eseguito all'interno della transazione. </param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigration.Up">
      <summary>     Operazioni da eseguire durante il processo di aggiornamento. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.DbMigrationsConfiguration">
      <summary>Configurazione relativa all'utilizzo di migrazioni per un modello specificato. Anziché utilizzare questa classe, viene solitamente creata una classe di configurazione che deriva da <see cref="T:System.Data.Entity.Migrations.DbMigrationsConfiguration`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.#ctor">
      <summary>     Inizializza una nuova istanza della classe DbMigrationsConfiguration. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.AutomaticMigrationDataLossAllowed">
      <summary>     Ottiene o imposta un valore che indica se durante la migrazione automatica è accettabile una perdita di dati.     Se impostato su false, verrà generata un'eccezione in caso di perdita di dati come parte di una migrazione automatica. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.AutomaticMigrationsEnabled">
      <summary>     Ottiene o imposta un valore che indica se è ammesso l'utilizzo di migrazioni automatiche quando si esegue la migrazione del database. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.CodeGenerator">
      <summary>     Ottiene o imposta il generatore di codice da utilizzare durante lo scaffolding delle migrazioni. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.ContextType">
      <summary>     Ottiene o imposta l'oggetto DbContext derivato che rappresenta il modello di cui deve essere eseguita la migrazione. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.GetSqlGenerator(System.String)">
      <summary>     Ottiene il generatore SQL impostato per l'utilizzo con un provider di database specificato. </summary>
      <returns>Generatore SQL impostato per il provider di database.</returns>
      <param name="providerInvariantName">Nome del provider di database per cui ottenere il generatore SQL.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.MigrationsAssembly">
      <summary>     Ottiene o imposta l'assembly contenente le migrazioni basate sul codice. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.MigrationsDirectory">
      <summary>     Ottiene o imposta la sottodirectory in cui sono archiviate le migrazioni basate sul codice. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.MigrationsNamespace">
      <summary>     Ottiene o imposta lo spazio dei nomi utilizzato per le migrazioni basate sul codice. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.SetSqlGenerator(System.String,System.Data.Entity.Migrations.Sql.MigrationSqlGenerator)">
      <summary>     Aggiunge un nuovo generatore SQL da utilizzare per un provider di database specificato. </summary>
      <param name="providerInvariantName">Nome del provider di database per cui impostare il generatore SQL.</param>
      <param name="migrationSqlGenerator">Generatore SQL da utilizzare.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.TargetDatabase">
      <summary>     Ottiene o imposta un valore per eseguire l'override della connessione del database di cui eseguire la migrazione. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.DbMigrationsConfiguration`1">
      <summary>Rappresenta la configurazione relativa all'utilizzo di migrazioni per un modello specificato.</summary>
      <typeparam name="TContext">Contesto.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.#ctor">
      <summary>     Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.DbMigrationsConfiguration`1" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.Equals(System.Object)">
      <summary>Restituisce un valore che indica se questa istanza è uguale a un oggetto specificato.</summary>
      <returns>True se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.GetHashCode">
      <summary>Ottiene i dati, per un parametro o una colonna, come il tipo specificato.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.GetType">
      <summary>Restituisce il tipo in fase di esecuzione dell'istanza corrente.</summary>
      <returns>Istanza di Type che rappresenta il tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto corrente.</summary>
      <returns>Copia superficiale dell'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.Seed(`0)">
      <summary>     Eseguito dopo l'aggiornamento della migrazione più recente per consentire l'aggiornamento dei dati di inizializzazione. </summary>
      <param name="context">Contesto da utilizzare per l'aggiornamento dei dati di inizializzazione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.DbMigrator">
      <summary>Utilizzata per applicare migrazioni esistenti a un database. Questa classe può essere utilizzata per l'aggiornamento e il downgrade di una qualsiasi migrazione specificata. Per eseguire lo scaffolding di migrazioni in base alle modifiche apportate al modello, utilizzare <see cref="T:System.Data.Entity.Migrations.Design.MigrationScaffolder" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrator.#ctor(System.Data.Entity.Migrations.DbMigrationsConfiguration)">
      <summary>     Inizializza una nuova istanza della classe DbMigrator. </summary>
      <param name="configuration">Configurazione da utilizzare per il processo di migrazione.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.DbMigrator.Configuration">
      <summary>     Ottiene la configurazione utilizzata per il processo di migrazione. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrator.GetDatabaseMigrations">
      <summary>     Ottiene tutte le migrazioni applicate al database di destinazione. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrator.GetLocalMigrations">
      <summary>     Ottiene tutte le migrazioni definite nell'assembly delle migrazioni configurate. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrator.GetPendingMigrations">
      <summary>     Ottiene tutte le migrazioni definite nell'assembly ma non applicate al database di destinazione. </summary>
    </member>
    <member name="F:System.Data.Entity.Migrations.DbMigrator.InitialDatabase">
      <summary>     ID migrazione che rappresenta lo stato del database prima che venga applicata qualsiasi migrazione. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.DbMigrator.Update(System.String)">
      <summary>     Aggiorna il database di destinazione a una determinata migrazione. </summary>
      <param name="targetMigration">Migrazione a cui effettuare l'aggiornamento/il downgrade.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.IDbSetExtensions">
      <summary>Set di metodi di estensione per <see cref="T:System.Data.Entity.IDbSet`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.IDbSetExtensions.AddOrUpdate``1(System.Data.Entity.IDbSet{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},``0[])">
      <summary>Aggiunge o aggiorna entità in base alla chiave quando si chiama SaveChanges. Equivalente a un'operazione "upsert" dalla terminologia del database. Questo metodo può essere utile durante il seeding dei dati tramite migrazioni.</summary>
      <param name="set">Oggetto <see cref="T:System.Data.Entity.IDbSet`1" /> utilizzato per eseguire operazioni di creazione, lettura, aggiornamento ed eliminazione.</param>
      <param name="identifierExpression">Espressione che specifica le proprietà da utilizzare quando si determina se dovrà essere eseguita un'operazione Add o Update. </param>
      <param name="entities">Entità da aggiungere o aggiornare.</param>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.IDbSetExtensions.AddOrUpdate``1(System.Data.Entity.IDbSet{``0},``0[])">
      <summary>Aggiunge o aggiorna entità in base alla chiave quando si chiama SaveChanges. Equivalente a un'operazione "upsert" dalla terminologia del database. Questo metodo può essere utile durante il seeding dei dati tramite migrazioni.</summary>
      <param name="set">Oggetto <see cref="T:System.Data.Entity.IDbSet`1" /> utilizzato per eseguire operazioni di creazione, lettura, aggiornamento ed eliminazione.</param>
      <param name="entities">Entità da aggiungere o aggiornare.</param>
      <typeparam name="TEntity">Tipo dell'entità.</typeparam>
    </member>
    <member name="T:System.Data.Entity.Migrations.Builders.ColumnBuilder">
      <summary>Rappresenta una classe helper utilizzata per configurare una colonna.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Builders.ColumnBuilder" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Binary(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Byte[],System.String,System.Boolean,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Binary.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="maxLength">Lunghezza massima consentita dei dati di tipo matrice.</param>
      <param name="fixedLength">Valore che indica se è necessario aggiungere tutti i dati fino alla lunghezza massima.</param>
      <param name="isMaxLength">Valore che indica se è necessario utilizzare la lunghezza massima supportata dal provider del database.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="timestamp">Valore che indica se questa colonna deve essere configurata come timestamp.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Boolean(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Boolean.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Byte(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Byte},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Byte.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="identity">Valore che indica se nel database verranno generati valori per questa colonna durante l'inserimento.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.DateTime(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.DateTime},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati DateTime.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="precision">Precisione della colonna.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.DateTimeOffset(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.DateTimeOffset},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati DateTimeOffset.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="precision">Precisione della colonna.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Decimal(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.Byte},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Boolean)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Decimal.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="precision">Precisione numerica della colonna.</param>
      <param name="scale">Scala numerica della colonna.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
      <param name="identity">Valore che indica se nel database verranno generati valori per questa colonna durante l'inserimento.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Double(System.Nullable{System.Boolean},System.Nullable{System.Double},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Double.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Equals(System.Object)">
      <summary>Indica se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Geography(System.Nullable{System.Boolean},System.Data.Spatial.DbGeography,System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati geografici.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Geometry(System.Nullable{System.Boolean},System.Data.Spatial.DbGeometry,System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati geometrici.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per l'istanza.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.GetType">
      <summary>Ottiene il tipo dell'istanza corrente.</summary>
      <returns>Tipo dell’istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Guid(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Guid},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati GUID.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="identity">Valore che indica se nel database verranno generati valori per questa colonna durante l'inserimento.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Int(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Int32},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Integer.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="identity">Valore che indica se nel database verranno generati valori per questa colonna durante l'inserimento.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Long(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Int64},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Long.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="identity">Valore che indica se nel database verranno generati valori per questa colonna durante l'inserimento.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto corrente.</summary>
      <returns>Copia superficiale dell'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Short(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Int16},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Short.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="identity">Valore che indica se nel database verranno generati valori per questa colonna durante l'inserimento.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Single(System.Nullable{System.Boolean},System.Nullable{System.Single},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Single.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.String(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati String.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="maxLength">Lunghezza massima consentita dei dati di tipo stringa.</param>
      <param name="fixedLength">Valore che indica se è necessario aggiungere tutti i dati fino alla lunghezza massima.</param>
      <param name="isMaxLength">Valore che indica se è necessario utilizzare la lunghezza massima supportata dal provider del database.</param>
      <param name="unicode">Valore che indica se la colonna supporta o meno il contenuto Unicode.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Time(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.TimeSpan},System.String,System.String,System.String)">
      <summary>Crea una nuova definizione di colonna per archiviare i dati Time.</summary>
      <returns>Definizione di colonna appena creata.</returns>
      <param name="nullable">Valore che indica se la colonna ammette valori null.</param>
      <param name="precision">Precisione della colonna.</param>
      <param name="defaultValue">Valore costante da utilizzare come valore predefinito per questa colonna.</param>
      <param name="defaultValueSql">Espressione SQL utilizzata come valore predefinito per questa colonna.</param>
      <param name="name">Nome della colonna.</param>
      <param name="storeType">Tipo di dati specifici del provider da utilizzare per questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Builders.TableBuilder`1">
      <summary>Classe helper utilizzata per configurare ulteriormente una tabella creata da una chiamata CreateTable in <see cref="T:System.Data.Entity.Migrations.DbMigration" />.</summary>
      <typeparam name="TColumns">Tipo per le colonne nella tabella.</typeparam>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.#ctor(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.DbMigration)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Builders.TableBuilder`1" />.</summary>
      <param name="createTableOperation">Operazione di creazione di una tabella da configurare ulteriormente.</param>
      <param name="migration">Migrazione in cui viene creata la tabella.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente.</summary>
      <returns>true se l'oggetto specificato è uguale all'oggetto corrente; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.ForeignKey(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,System.String,System.Object)">
      <summary>Specifica un vincolo di chiave esterna da creare nella tabella. </summary>
      <returns>Stessa istanza in modo che possano essere concatenate più chiamate.</returns>
      <param name="principalTable">Nome della tabella a cui il vincolo di chiave esterna fa riferimento.</param>
      <param name="dependentKeyExpression">Espressione lambda che rappresenta le proprietà della chiave esterna.      Se la chiave esterna è costituita da più proprietà, specificare un tipo anonimo che includa le proprietà.</param>
      <param name="cascadeDelete">Valore che indica se è necessario configurare l'eliminazione a catena nel vincolo di chiave esterna. </param>
      <param name="name">Nome del vincolo di chiave esterna. Se non viene specificato alcun nome, verrà calcolato un nome predefinito.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider. Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.GetHashCode">
      <summary>Ottiene il codice hash per l'oggetto corrente.</summary>
      <returns>Codice hash per l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.GetType">
      <summary>Ottiene il tipo dell'oggetto corrente.</summary>
      <returns>Tipo dell'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.Index(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,System.Object)">
      <summary>Specifica un indice da creare nella tabella.</summary>
      <returns>Stessa istanza in modo che possano essere concatenate più chiamate.</returns>
      <param name="indexExpression">Espressione lambda che rappresenta la proprietà da indicizzare.Se più proprietà devono essere indicizzate, specificare un tipo anonimo che includa le proprietà.</param>
      <param name="unique">Valore che indica se si tratta di un indice univoco.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider. Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.MemberwiseClone">
      <summary>Crea una copia superficiale dell'oggetto corrente.</summary>
      <returns>Copia superficiale dell'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.PrimaryKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Object)">
      <summary>Specifica una chiave primaria per la tabella. </summary>
      <returns>Stessa istanza in modo che possano essere concatenate più chiamate.</returns>
      <param name="keyExpression">Espressione lambda che rappresenta la proprietà da utilizzare come chiave primaria. Se la chiave primaria è costituita da più proprietà, specificare un tipo anonimo che include le proprietà.</param>
      <param name="name">Nome della chiave primaria. Se si specifica null, verrà generato un nome predefinito.</param>
      <param name="anonymousArguments">Argomenti aggiuntivi che possono essere elaborati dai provider. Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.ToString">
      <summary>Restituisce una rappresentazione di stringa dell'oggetto corrente.</summary>
      <returns>Rappresentazione di stringa dell'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator">
      <summary>Genera il codice C# per una migrazione basata sul codice.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Byte)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Byte" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Byte[])">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Byte[]" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String)">
      <summary>Genera il file del codice primario che l'utente può visualizzare e modificare. </summary>
      <returns>Codice generato.</returns>
      <param name="operations">Operazioni da eseguire mediante la migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.String},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per specificare un set di nomi di colonna utilizzando un'espressione lambda.</summary>
      <param name="columns">Colonne per le quali generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation" />.</summary>
      <param name="addColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" />.</summary>
      <param name="addForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" />.</summary>
      <param name="addPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation" />.</summary>
      <param name="alterColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
      <summary>Genera il codice per specificare la definizione per un oggetto <see cref="T:System.Data.Entity.Migrations.Model.ColumnModel" />.</summary>
      <param name="column">Definizione di colonna per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="emitName">Valore che indica se includere il nome della colonna nella definizione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" />.</summary>
      <param name="createIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="createTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation" />.</summary>
      <param name="dropColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" />.</summary>
      <param name="dropForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation" />.</summary>
      <param name="dropIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation" />.</summary>
      <param name="dropPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation" />.</summary>
      <param name="dropTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation" />.</summary>
      <param name="moveTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation" />.</summary>
      <param name="renameColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation" />.</summary>
      <param name="renameTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation" />.</summary>
      <param name="sqlOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Spatial.DbGeography)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Data.Spatial.DbGeography" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Spatial.DbGeometry)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Data.Spatial.DbGeometry" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.DateTime)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.DateTime" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.DateTimeOffset)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Decimal)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Decimal" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Guid)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Guid" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Int64)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Int64" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Object)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna del tipo di dati sconosciuto.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Single)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Single" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.String)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.String" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
      <summary>Genera il file code-behind con i metadati della migrazione.</summary>
      <returns>Codice generato.</returns>
      <param name="migrationId">Identificatore univoco della migrazione.</param>
      <param name="operations">Operazioni da eseguire mediante la migrazione.</param>
      <param name="sourceModel">Modello di origine da archiviare nei metadati della migrazione.</param>
      <param name="targetModel">Modello di destinazione da archiviare nei metadati della migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.String,System.String,System.String,System.String,System.String)">
      <summary>Genera il file code-behind con i metadati della migrazione.</summary>
      <returns>Codice generato.</returns>
      <param name="migrationId">Identificatore univoco della migrazione.</param>
      <param name="sourceModel">Modello di origine da archiviare nei metadati della migrazione.</param>
      <param name="targetModel">Modello di destinazione da archiviare nei metadati della migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.TimeSpan)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.TimeSpan" />.</summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="addForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="addPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="createIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Quote(System.String)">
      <summary>Racchiude tra virgolette un identificatore utilizzando l'escape appropriato per consentirne l'archiviazione in una stringa.</summary>
      <returns>Identificatore delimitato.</returns>
      <param name="identifier">Identificatore da delimitare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.ScrubName(System.String)">
      <summary>Rimuove eventuali caratteri non validi dal nome di un elemento del database.</summary>
      <returns>Nome selezionato.</returns>
      <param name="name">Nome da selezionare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.TranslateColumnType(System.Data.Metadata.Edm.PrimitiveTypeKind)">
      <summary>Ottiene il nome del tipo da utilizzare per una colonna del tipo di dati specificato.</summary>
      <returns>Nome del tipo da utilizzare nella migrazione generata.</returns>
      <param name="primitiveTypeKind">Tipo di dati da convertire.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.WriteClassEnd(System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice di chiusura per una classe avviata con WriteClassStart.</summary>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.WriteClassStart(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Genera uno spazio dei nomi utilizzando istruzioni e definizione di classe.</summary>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="base">Classe base per la classe generata.</param>
      <param name="designer">Valore che indica se la classe viene generata per un file code-behind.</param>
      <param name="namespaces">Spazi dei nomi per i quali verranno aggiunte direttive using. Se null, verranno utilizzati gli spazi dei nomi restituiti da GetDefaultNamespaces.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.WriteProperty(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera una proprietà per restituire il modello di origine o di destinazione nel file code-behind.</summary>
      <param name="name">Nome della proprietà.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.MigrationCodeGenerator">
      <summary>Classe base per provider che generano il codice per le migrazioni basate sul codice.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.MigrationCodeGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
      <summary>     Genera il codice da aggiungere al progetto degli utenti. </summary>
      <returns>Codice generato.</returns>
      <param name="migrationId">Identificatore univoco della migrazione.</param>
      <param name="operations">Operazioni da eseguire mediante la migrazione.</param>
      <param name="sourceModel">Modello di origine da archiviare nei metadati della migrazione.</param>
      <param name="targetModel">Modello di destinazione da archiviare nei metadati della migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.GetDefaultNamespaces(System.Boolean)">
      <summary> Ottiene gli spazi dei nomi predefiniti che devono essere restituiti come direttive "using" o "Import" per qualsiasi codice generato. </summary>
      <returns>Elenco ordinato di nomi degli spazi dei nomi.</returns>
      <param name="designer">Valore che indica se la classe viene generata per un file code-behind.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.GetNamespaces(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation})">
      <summary> Ottiene gli spazi dei nomi che devono essere restituiti come direttive "using" o "Import" per gestire il codice generato mediante le operazioni specificate. </summary>
      <returns>Elenco ordinato di nomi degli spazi dei nomi.</returns>
      <param name="operations">Operazioni per le quali verrà generato il codice.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.MigrationScaffolder">
      <summary>Esegue lo scaffolding di migrazioni basate sul codice per applicare al database modifiche del modello in sospeso.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.#ctor(System.Data.Entity.Migrations.DbMigrationsConfiguration)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.MigrationScaffolder" />. </summary>
      <param name="migrationsConfiguration">Configurazione da utilizzare per lo scaffolding.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.MigrationScaffolder.Namespace">
      <summary> Ottiene o imposta lo spazio dei nomi utilizzato nel codice generato della migrazione.  Per impostazione predefinita, corrisponde a MigrationsNamespace nell'oggetto di configurazione delle migrazioni passato al costruttore. Per progetti VB.NET, sarà necessario aggiornarlo per prendere in considerazione lo spazio dei nomi radice del progetto. </summary>
      <returns>Spazio dei nomi utilizzato nel codice generato della migrazione.  </returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.Scaffold(System.String)">
      <summary>     Esegue lo scaffolding di una migrazione basata sul codice per applicare al database eventuali modifiche del modello in sospeso. </summary>
      <returns>Migrazione con scaffolding.</returns>
      <param name="migrationName">Nome da utilizzare per la migrazione con scaffolding.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.Scaffold(System.String,System.Boolean)">
      <summary>Esegue lo scaffolding di una migrazione basata sul codice per applicare al database eventuali modifiche del modello in sospeso.</summary>
      <returns>Migrazione con scaffolding.</returns>
      <param name="migrationName">Nome da utilizzare per la migrazione con scaffolding.</param>
      <param name="ignoreChanges">true per escludere le modifiche del modello. In caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.ScaffoldInitialCreate">
      <summary> Esegue lo scaffolding della migrazione basata sul codice iniziale corrispondente a un inizializzatore di database eseguito in precedenza.</summary>
      <returns>Migrazione con scaffolding.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.ScaffoldedMigration">
      <summary>   Rappresenta una migrazione basata sul codice con scaffolding e pronta per essere scritta in un file.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ScaffoldedMigration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.ScaffoldedMigration" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.DesignerCode">
      <summary>     Ottiene o imposta il codice di migrazione con scaffolding che deve essere archiviato in un file code-behind. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.Directory">
      <summary>     Ottiene o imposta la sottodirectory nel progetto dell'utente in cui deve essere salvata questa migrazione. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.Language">
      <summary>     Ottiene o imposta il linguaggio di programmazione utilizzato per questa migrazione.     In genere utilizzato per l'estensione di file del codice generato. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.MigrationId">
      <summary>     Ottiene o imposta l'identificatore univoco per questa migrazione.     In genere utilizzato per il nome file del codice generato. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.UserCode">
      <summary>     Ottiene o imposta il codice di migrazione con scaffolding che l'utente può modificare. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.ToolingException">
      <summary>Rappresenta un'eccezione che si è verificata durante l'esecuzione di un'operazione in un altro AppDomain in <see cref="T:System.Data.Entity.Migrations.Design.ToolingFacade" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.ToolingException" /> con dati serializzati.</summary>
      <param name="info">Dati dell'oggetto serializzato relativi all'eccezione generata.</param>
      <param name="context">Informazioni contestuali sull'origine o sulla destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingException.#ctor(System.String,System.String,System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.ToolingException" /> con un errore, un tipo di eccezione interna e una traccia dello stack specificati.</summary>
      <param name="message">Messaggio di errore in cui viene indicato il motivo dell'eccezione.</param>
      <param name="innerType">Tipo di eccezione generata.</param>
      <param name="innerStackTrace">Traccia dello stack dell'eccezione generata.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inserisce nell'oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> i dati necessari per serializzare l'oggetto di destinazione.</summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> da compilare con i dati.</param>
      <param name="context">Destinazione della serializzazione.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ToolingException.InnerStackTrace">
      <summary>Ottiene la traccia dello stack dell'eccezione generata. </summary>
      <returns>Traccia dello stack dell'eccezione generata.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ToolingException.InnerType">
      <summary>Ottiene il tipo di eccezione generata. </summary>
      <returns>Tipo di eccezione generata.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.ToolingFacade">
      <summary>Rappresenta una classe helper utilizzata dagli strumenti della fase di progettazione per eseguire comandi correlati alle migrazioni che devono interagire con un'applicazione modificata in Visual Studio.Dal momento che l'applicazione viene modificata, gli assembly devono essere caricati in un AppDomain distinto per garantire che venga sempre caricata la versione più recente. Il file App/Web.config viene inoltre copiato dal progetto di avvio per garantire l'applicazione di una configurazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.#ctor(System.String,System.String,System.String,System.String,System.String,System.Data.Entity.Infrastructure.DbConnectionInfo)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.ToolingFacade" />. </summary>
      <param name="assemblyName">Nome dell'assembly che contiene la configurazione delle migrazioni da utilizzare. </param>
      <param name="configurationTypeName">Nome completo dello spazio dei nomi della configurazione delle migrazioni da utilizzare. </param>
      <param name="workingDirectory">Directory di lavoro contenente gli assembly compilati. </param>
      <param name="configurationFilePath">Percorso del file di configurazione dal progetto di avvio. </param>
      <param name="dataDirectory">Percorso della directory dei dati dell'applicazione dal progetto di avvio. In genere, la directory App_Data per le applicazioni Web o la directory di lavoro per i file eseguibili. </param>
      <param name="connectionStringInfo">Connessione al database di cui eseguire la migrazione. Se si specifica null, verrà utilizzata la connessione predefinita per il contesto. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Dispose">
      <summary>Rilascia tutte le risorse utilizzate da <see cref="T:System.Data.Entity.Migrations.Design.ToolingFacade" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Dispose(System.Boolean)">
      <summary>Rilascia tutte le risorse utilizzate da <see cref="T:System.Data.Entity.Migrations.Design.ToolingFacade" />.</summary>
      <param name="disposing">true per rilasciare sia le risorse gestite sia quelle non gestite; false per rilasciare solo quelle non gestite. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Finalize">
      <summary>Rilascia tutte le risorse non gestite utilizzate dalla facciata. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetContextTypes">
      <summary>Ottiene il nome completo di tutti i tipi derivanti da <see cref="T:System.Data.Entity.DbContext" />. </summary>
      <returns>Tutti i tipi di contesto rilevati.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetDatabaseMigrations">
      <summary>Ottiene un elenco di tutte le migrazioni applicate al database. </summary>
      <returns>ID delle migrazioni applicate.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetPendingMigrations">
      <summary>Ottiene un elenco di tutte le migrazioni non applicate al database. </summary>
      <returns>ID delle migrazioni in sospeso.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogInfoDelegate">
      <summary>Ottiene o imposta un'azione da eseguire per registrare informazioni. </summary>
      <returns>Azione da eseguire per registrare informazioni.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogVerboseDelegate">
      <summary>Ottiene o imposta un'azione da eseguire per registrare informazioni dettagliate. </summary>
      <returns>Azione da eseguire per registrare informazioni dettagliate.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogWarningDelegate">
      <summary>Ottiene o imposta un'azione da eseguire per registrare avvisi. </summary>
      <returns>Azione da eseguire per registrare avvisi.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Scaffold(System.String,System.String,System.String,System.Boolean)">
      <summary>Esegue lo scaffolding di una migrazione basata sul codice per applicare eventuali modifiche del modello in sospeso.</summary>
      <returns>Migrazione con scaffolding.</returns>
      <param name="migrationName">Nome per la migrazione generata.</param>
      <param name="language">Linguaggio di programmazione della migrazione generata.</param>
      <param name="rootNamespace">Spazio dei nomi radice del progetto a cui verrà aggiunta la migrazione.</param>
      <param name="ignoreChanges">true per escludere le modifiche del modello. In caso contrario, false.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.ScaffoldInitialCreate(System.String,System.String)">
      <summary>Esegue lo scaffolding della migrazione basata sul codice iniziale corrispondente a un inizializzatore di database eseguito in precedenza. </summary>
      <returns>Migrazione con scaffolding.</returns>
      <param name="language">Linguaggio di programmazione della migrazione generata.</param>
      <param name="rootNamespace">Spazio dei nomi radice del progetto a cui verrà aggiunta la migrazione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.ScriptUpdate(System.String,System.String,System.Boolean)">
      <summary>Genera uno script SQL per la migrazione tra due migrazioni. </summary>
      <returns>Script SQL generato.</returns>
      <param name="sourceMigration">Migrazione da cui eseguire l'aggiornamento. Se si specifica null, verrà generato uno script per aggiornare il database corrente. </param>
      <param name="targetMigration">Migrazione a cui eseguire l'aggiornamento. Se si specifica null, verrà generato uno script da aggiornare alla migrazione più recente. </param>
      <param name="force">Valore che indica se è ammessa la perdita di dati durante la migrazione automatica.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Update(System.String,System.Boolean)">
      <summary>Aggiorna il database alla migrazione specificata. </summary>
      <param name="targetMigration">ID della migrazione a cui migrare. Se si specifica null, il database verrà aggiornato alla migrazione più recente. </param>
      <param name="force">Valore che indica se è ammessa la perdita di dati durante la migrazione automatica.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator">
      <summary>Genera il codice Visual Basic .Net per una migrazione basata sul codice.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Byte)">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Byte" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Byte[])">
      <summary>Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Byte[]" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String)">
      <summary>Genera il file del codice primario che l'utente può visualizzare e modificare.</summary>
      <returns>Codice generato.</returns>
      <param name="operations">Operazioni da eseguire mediante la migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.String},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per specificare un set di nomi di colonna utilizzando un'espressione lambda.</summary>
      <param name="columns">Colonne per le quali generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation" />.</summary>
      <param name="addColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" />.</summary>
      <param name="addForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" />. </summary>
      <param name="addPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation" />.</summary>
      <param name="alterColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
      <summary>Genera il codice per specificare la definizione per un oggetto <see cref="T:System.Data.Entity.Migrations.Model.ColumnModel" />. </summary>
      <param name="column">Definizione di colonna per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="emitName">Valore che indica se includere il nome della colonna nella definizione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" />.</summary>
      <param name="createIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.</summary>
      <param name="createTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation" />.</summary>
      <param name="dropColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" />. </summary>
      <param name="dropForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation" />. </summary>
      <param name="dropIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation" />. </summary>
      <param name="dropPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation" />. </summary>
      <param name="dropTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation" />. </summary>
      <param name="moveTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation" />. </summary>
      <param name="renameColumnOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation" />. </summary>
      <param name="renameTableOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation" />. </summary>
      <param name="sqlOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Spatial.DbGeography)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Data.Spatial.DbGeography" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Spatial.DbGeometry)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Data.Spatial.DbGeometry" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.DateTime)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.DateTime" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.DateTimeOffset)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.DateTimeOffset" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Decimal)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Decimal" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Guid)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Guid" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Int64)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Int64" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Object)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna del tipo di dati sconosciuto. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Single)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.Single" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.String)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.String" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
      <summary>Genera il file code-behind con i metadati della migrazione. </summary>
      <returns>Codice generato.</returns>
      <param name="migrationId">Identificatore univoco della migrazione.</param>
      <param name="operations">Operazioni da eseguire mediante la migrazione.</param>
      <param name="sourceModel">Modello di origine da archiviare nei metadati della migrazione.</param>
      <param name="targetModel">Modello di destinazione da archiviare nei metadati della migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.String,System.String,System.String,System.String,System.String)">
      <summary>Genera il file code-behind con i metadati della migrazione. </summary>
      <returns>Codice generato.</returns>
      <param name="migrationId">Identificatore univoco della migrazione.</param>
      <param name="sourceModel">Modello di origine da archiviare nei metadati della migrazione.</param>
      <param name="targetModel">Modello di destinazione da archiviare nei metadati della migrazione.</param>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.TimeSpan)">
      <summary>     Genera il codice per specificare il valore predefinito per una colonna <see cref="T:System.TimeSpan" />. </summary>
      <returns>Codice che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da utilizzare come predefinito.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />. </summary>
      <param name="addForeignKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />. </summary>
      <param name="addPrimaryKeyOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera il codice per eseguire un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" /> come parte di un'operazione <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />. </summary>
      <param name="createIndexOperation">Operazione per la quale generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Quote(System.String)">
      <summary>     Racchiude tra virgolette un identificatore utilizzando l'escape appropriato per consentirne l'archiviazione in una stringa. </summary>
      <returns>Identificatore delimitato.</returns>
      <param name="identifier">Identificatore da delimitare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.ScrubName(System.String)">
      <summary>     Rimuove eventuali caratteri non validi dal nome di un elemento del database. </summary>
      <returns>Nome selezionato.</returns>
      <param name="name">Nome da selezionare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.TranslateColumnType(System.Data.Metadata.Edm.PrimitiveTypeKind)">
      <summary>     Ottiene il nome del tipo da utilizzare per una colonna del tipo di dati specificato. </summary>
      <returns>Nome del tipo da utilizzare nella migrazione generata.</returns>
      <param name="primitiveTypeKind">Tipo di dati da convertire.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.WriteClassEnd(System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary> Genera il codice di chiusura per una classe avviata con WriteClassStart. </summary>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.WriteClassStart(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>     Genera uno spazio dei nomi utilizzando istruzioni e definizione di classe. </summary>
      <param name="namespace">Spazio dei nomi in cui generare il codice.</param>
      <param name="className">Nome della classe da generare.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
      <param name="base">Classe base per la classe generata.</param>
      <param name="designer">Valore che indica se la classe viene generata per un file code-behind.</param>
      <param name="namespaces">Spazi dei nomi per i quali verranno aggiunte direttive Import. Se null, verranno utilizzati gli spazi dei nomi restituiti da GetDefaultNamespaces.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.WriteProperty(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>     Genera una proprietà per restituire il modello di origine o di destinazione nel file code-behind. </summary>
      <param name="name">Nome della proprietà.</param>
      <param name="writer">Writer di testo a cui aggiungere il codice generato.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.History.HistoryRow">
      <summary>   Questa classe viene utilizzata da Migrazioni Code First per leggere e scrivere la cronologia delle migrazioni dal database. Non deve essere utilizzata da un altro codice ed è solo pubblica in modo da potervi accedere tramite Entity Framework durante l'esecuzione con attendibilità parziale. Può essere modificata o rimossa in futuro.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.History.HistoryRow.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.History.HistoryRow" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryRow.CreatedOn">
      <summary>     Ottiene o imposta la data e l'ora in cui questa voce della cronologia delle migrazioni è stata creata. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryRow.MigrationId">
      <summary>     Ottiene o imposta l'ID della migrazione che questa riga rappresenta. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryRow.Model">
      <summary>     Ottiene o imposta lo stato del modello dopo l'applicazione della migrazione. </summary>
      <returns>Restituisce il valore <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.History.HistoryRow.ProductVersion">
      <summary>     Ottiene o imposta la versione di Entity Framework in cui è stata creata questa voce. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.AutomaticDataLossException">
      <summary>Rappresenta un errore che si verifica quando una migrazione automatica determina una perdita di dati.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.AutomaticDataLossException.#ctor(System.String)">
      <summary>     Inizializza una nuova istanza della classe AutomaticDataLossException. </summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.AutomaticMigrationsDisabledException">
      <summary>Rappresenta un errore che si verifica quando sono presenti modifiche del modello in sospeso dopo l'applicazione dell'ultima migrazione e la disabilitazione della migrazione automatica.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.AutomaticMigrationsDisabledException.#ctor(System.String)">
      <summary>     Inizializza una nuova istanza della classe AutomaticMigrationsDisabledException. </summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata">
      <summary>Fornisce metadati aggiuntivi su una migrazione basata sul codice.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id">
      <summary>     Ottiene l'identificatore univoco per la migrazione. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source">
      <summary>     Ottiene lo stato del modello prima dell'esecuzione della migrazione. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target">
      <summary>     Ottiene lo stato del modello dopo l'esecuzione della migrazione. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigrationsException">
      <summary>Rappresenta gli errori che si verificano all'interno della pipeline Migrazioni Code First.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary> Inizializza una nuova istanza della classe MigrationsException con dati serializzati. </summary>
      <param name="info">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati dell'oggetto serializzati relativi all'eccezione generata.</param>
      <param name="context">Oggetto <see cref="T:System.Runtime.Serialization.StreamingContext" /> che contiene le informazioni contestuali relative all'origine o alla destinazione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsException.#ctor(System.String)">
      <summary> Inizializza una nuova istanza della classe MigrationsException. </summary>
      <param name="message">Messaggio in cui viene descritto l'errore.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger">
      <summary>Classe base per logger che possono essere utilizzati per il processo di migrazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.Info(System.String)">
      <summary>     Registra un messaggio informativo. </summary>
      <param name="message">Messaggio da registrare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.Verbose(System.String)">
      <summary>     Registra informazioni aggiuntive che devono essere visualizzate all'utente solo nel caso in cui richieda un output dettagliato. </summary>
      <param name="message">Messaggio da registrare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.Warning(System.String)">
      <summary>     Registra un avviso da comunicare all'utente. </summary>
      <param name="message">Messaggio da registrare.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigratorBase">
      <summary>Classe base per elementi Decorator che eseguono il wrapping dell'oggetto <see cref="T:System.Data.Entity.Migrations.DbMigrator" /> principale.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase)">
      <summary>     Inizializza una nuova istanza della classe MigratorBase. </summary>
      <param name="innerMigrator">Utilità di migrazione di cui l'elemento Decorator sta eseguendo il wrapping.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Infrastructure.MigratorBase.Configuration">
      <summary>     Ottiene la configurazione utilizzata per il processo di migrazione. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.GetDatabaseMigrations">
      <summary>     Ottiene un elenco delle migrazioni applicate al database. </summary>
      <returns>Elenco di ID delle migrazioni</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.GetLocalMigrations">
      <summary>     Ottiene un elenco delle migrazioni definite nell'assembly. </summary>
      <returns>Elenco di ID delle migrazioni</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.GetPendingMigrations">
      <summary>     Ottiene un elenco delle migrazioni in sospeso non applicate al database. </summary>
      <returns>Elenco di ID delle migrazioni</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.Update">
      <summary>     Aggiorna il database di destinazione alla migrazione più recente. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.Update(System.String)">
      <summary>     Aggiorna il database di destinazione a una determinata migrazione. </summary>
      <param name="targetMigration">Migrazione a cui effettuare l'aggiornamento/il downgrade.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigratorLoggingDecorator">
      <summary>Elemento Decorator che consente la registrazione durante le operazioni di migrazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorLoggingDecorator.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase,System.Data.Entity.Migrations.Infrastructure.MigrationsLogger)">
      <summary>     Inizializza una nuova istanza della classe MigratorLoggingDecorator. </summary>
      <param name="innerMigrator">Utilità di migrazione di cui l'elemento Decorator sta eseguendo il wrapping.</param>
      <param name="logger">Logger in cui scrivere messaggi.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator">
      <summary>Rappresenta un elemento Decorator per generare uno script SQL anziché applicare modifiche al database. Se si utilizza questo elemento Decorator per eseguire il wrapping di <see cref="T:System.Data.Entity.Migrations.DbMigrator" />, <see cref="T:System.Data.Entity.Migrations.DbMigrator" /> non applicherà eventuali modifiche al database di destinazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator" />. </summary>
      <param name="innerMigrator">Utilità di migrazione di cui l'elemento Decorator sta eseguendo il wrapping.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator.ScriptUpdate(System.String,System.String)">
      <summary>Aggiorna il database alla migrazione di destinazione.</summary>
      <returns>Script SQL generato.</returns>
      <param name="sourceMigration">Migrazione di origine.</param>
      <param name="targetMigration">Migrazione a cui effettuare l'aggiornamento/il downgrade.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.AddColumnOperation">
      <summary>Rappresenta una colonna aggiunta a una tabella.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AddColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Object)">
      <summary>     Inizializza una nuova istanza della classe AddColumnOperation. </summary>
      <param name="table">Nome della tabella a cui aggiungere la colonna.</param>
      <param name="column">Dettagli della colonna aggiunta.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.Column">
      <summary>     Ottiene i dettagli della colonna aggiunta. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.Inverse">
      <summary>     Ottiene un'operazione che rappresenta l'eliminazione della colonna aggiunta. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.IsDestructiveChange">
      <summary>Ottiene {inserire il testo qui}.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.Table">
      <summary>     Ottiene il nome della tabella a cui aggiungere la colonna. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation">
      <summary>Rappresenta un vincolo di chiave esterna aggiunto a una tabella.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.#ctor(System.Object)">
      <summary>     Inizializza una nuova istanza della classe AddForeignKeyOperation.     È necessario inoltre popolare le proprietà PrincipalTable, PrincipalColumns, DependentTable e DependentColumns. </summary>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.CascadeDelete">
      <summary>     Ottiene o imposta un valore che indica se è necessario configurare l'eliminazione a catena nel vincolo di chiave esterna. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.CreateCreateIndexOperation">
      <summary>     Ottiene un'operazione che consente di creare un indice nelle colonne di chiavi esterne. </summary>
      <returns>Operazione che consente di aggiungere l'indice.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.Inverse">
      <summary>     Ottiene un'operazione che consente di eliminare il vincolo di chiave esterna. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se una modifica è distruttiva.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.PrincipalColumns">
      <summary>     Nomi delle colonne a cui il vincolo di chiave esterna deve fare riferimento. </summary>
      <returns>Nomi delle colonne.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation">
      <summary>Rappresenta l'aggiunta di una chiave primaria a una tabella.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation.#ctor(System.Object)">
      <summary>     Inizializza una nuova istanza della classe AddPrimaryKeyOperation.     È necessario inoltre popolare le proprietà Tabella e Colonne. </summary>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation.Inverse">
      <summary>     Ottiene un'operazione che consente di eliminare la chiave primaria. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.AlterColumnOperation">
      <summary>Rappresenta la modifica di una colonna esistente.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AlterColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Boolean,System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Object)">
      <summary>     Inizializza una nuova istanza della classe AlterColumnOperation. </summary>
      <param name="table">Nome della tabella a cui appartiene la colonna.</param>
      <param name="column">Dettagli del risultato della modifica della colonna.</param>
      <param name="isDestructiveChange">Valore che indica se la modifica determina una perdita di dati.</param>
      <param name="inverse">Operazione che consente di ripristinare la modifica della colonna.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.AlterColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Boolean,System.Object)">
      <summary>     Inizializza una nuova istanza della classe AlterColumnOperation. </summary>
      <param name="table">Nome della tabella a cui appartiene la colonna.</param>
      <param name="column">Dettagli del risultato della modifica della colonna.</param>
      <param name="isDestructiveChange">Valore che indica se la modifica determina una perdita di dati.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.Column">
      <summary>     Ottiene la nuova definizione della colonna. </summary>
      <returns>Definizione di colonna.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.Inverse">
      <summary>     Ottiene un'operazione che rappresenta il ripristino della modifica.     L'operazione inversa non può essere automaticamente calcolata. Se non è stata fornita al costruttore, questa proprietà restituirà il valore null. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.Table">
      <summary>     Ottiene il nome della tabella a cui appartiene la colonna. </summary>
      <returns>Nome della tabella.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.ColumnModel">
      <summary>Rappresenta le informazioni su una colonna.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ColumnModel.#ctor(System.Data.Metadata.Edm.PrimitiveTypeKind)">
      <summary>     Inizializza una nuova istanza della classe. </summary>
      <param name="type">Tipo di dati di questa colonna.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ColumnModel.#ctor(System.Data.Metadata.Edm.PrimitiveTypeKind,System.Data.Metadata.Edm.TypeUsage)">
      <summary>     Inizializza una nuova istanza della classe. </summary>
      <param name="type">Tipo di dati di questa colonna.</param>
      <param name="typeUsage">     Dettagli aggiuntivi sul tipo di dati,     inclusi i dettagli, ad esempio lunghezza massima, valori null e così via. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.ClrDefaultValue">
      <summary>     Ottiene il valore predefinito per il tipo CLR corrispondente al tipo di database di questa colonna. </summary>
      <returns>Valore predefinito.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.ClrType">
      <summary>     Ottiene il tipo CLR corrispondente al tipo di database di questa colonna. </summary>
      <returns>Tipo CLR.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.DefaultValue">
      <summary>     Ottiene o imposta un valore costante da utilizzare come valore predefinito per questa colonna. </summary>
      <returns>Valore predefinito della colonna.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.DefaultValueSql">
      <summary>     Ottiene o imposta un'espressione SQL utilizzata come valore predefinito per questa colonna. </summary>
      <returns>Valore predefinito della colonna.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsFixedLength">
      <summary>     Ottiene o imposta un valore che indica se la colonna presenta una lunghezza fissa.     Valido solo per tipi di dati della matrice. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsIdentity">
      <summary>     Ottiene o imposta un valore che indica se nel database verranno generati valori per questa colonna utilizzando il modello di identità. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ColumnModel.IsNarrowerThan(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Common.DbProviderManifest)">
      <summary>     Determina se questa colonna rappresenta un tipo di dati più ristretto rispetto a un'altra colonna.     Utilizzato per determinare se la modifica della definizione di colonna fornita per questa definizione comporta una perdita di dati. </summary>
      <returns>True se questa colonna rappresenta un tipo di dati più ristretto.</returns>
      <param name="column">Colonna da confrontare.</param>
      <param name="providerManifest">Dettagli del provider del database utilizzato.</param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsNullable">
      <summary>     Ottiene o imposta un valore che indica se la colonna può archiviare valori null. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsTimestamp">
      <summary>     Ottiene o imposta un valore che indica se la colonna deve essere configurata come timestamp. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsUnicode">
      <summary>     Ottiene o imposta un valore che indica se la colonna supporta caratteri Unicode.     Valido solo per tipi di dati testuali. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.MaxLength">
      <summary>     Ottiene o imposta la lunghezza massima di questa colonna.     Valido solo per tipi di dati della matrice. </summary>
      <returns>Lunghezza massima.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.Name">
      <summary>     Ottiene o imposta il nome della colonna. </summary>
      <returns>Nome.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.Precision">
      <summary>     Ottiene o imposta la precisione di questa colonna.     Valido solo per tipi di dati decimali. </summary>
      <returns>Precisione.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.Scale">
      <summary>     Ottiene o imposta la scala di questa colonna.     Valido solo per tipi di dati decimali. </summary>
      <returns>Scala.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.StoreType">
      <summary>     Ottiene o imposta un tipo di dati specifici del provider da utilizzare per questa colonna. </summary>
      <returns>Tipo di dati.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.Type">
      <summary>     Ottiene il tipo di dati di questa colonna. </summary>
      <returns>Tipo di dati.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.TypeUsage">
      <summary>     Ottiene dettagli aggiuntivi sul tipo di dati di questa colonna,     inclusi i dettagli, ad esempio lunghezza massima, valori null e così via. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.CreateIndexOperation">
      <summary>Rappresenta la creazione di un indice del database.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.CreateIndexOperation.#ctor(System.Object)">
      <summary>     Inizializza una nuova istanza della classe CreateIndexOperation.     È necessario inoltre popolare le proprietà Tabella e Colonne. </summary>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.Inverse">
      <summary>     Ottiene un'operazione che consente di eliminare l'indice. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.IsUnique">
      <summary>     Ottiene o imposta un valore che indica se si tratta di un indice univoco. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.CreateTableOperation">
      <summary>Rappresenta la creazione di una tabella.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.CreateTableOperation.#ctor(System.String,System.Object)">
      <summary>     Inizializza una nuova istanza della classe CreateTableOperation. </summary>
      <param name="name">Nome della tabella da creare.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.Columns">
      <summary>     Ottiene le colonne da includere nella nuova tabella. </summary>
      <returns>Colonne da includere.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.Inverse">
      <summary>     Ottiene un'operazione che consente di eliminare la tabella. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.Name">
      <summary>     Ottiene il nome della tabella da creare. </summary>
      <returns>Nome.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.PrimaryKey">
      <summary>     Ottiene o imposta la chiave primaria per la nuova tabella. </summary>
      <returns>Chiave primaria.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DeleteHistoryOperation">
      <summary>Rappresenta l'eliminazione di un nuovo record dalla tabella relativa alla cronologia delle migrazioni. La tabella relativa alla cronologia delle migrazioni viene utilizzata per archiviare un log delle migrazioni applicate al database.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DeleteHistoryOperation.#ctor(System.String,System.String,System.Object)">
      <summary>     Inizializza una nuova istanza della classe DeleteHistoryOperation. </summary>
      <param name="table">Nome della tabella relativa alla cronologia delle migrazioni.</param>
      <param name="migrationId">ID del record della migrazione da eliminare.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropColumnOperation">
      <summary>Rappresenta una colonna eliminata da una tabella.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropColumnOperation.#ctor(System.String,System.String,System.Data.Entity.Migrations.Model.AddColumnOperation,System.Object)">
      <summary>     Inizializza una nuova istanza della classe DropColumnOperation. </summary>
      <param name="table">Nome della tabella da cui eliminare la colonna.</param>
      <param name="name">Nome della colonna da eliminare.</param>
      <param name="inverse">Operazione che rappresenta il ripristino dell'operazione di eliminazione.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropColumnOperation.#ctor(System.String,System.String,System.Object)">
      <summary>     Inizializza una nuova istanza della classe DropColumnOperation. </summary>
      <param name="table">Nome della tabella da cui eliminare la colonna.</param>
      <param name="name">Nome della colonna da eliminare.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.Inverse">
      <summary>     Ottiene un'operazione che rappresenta il ripristino dell'eliminazione della colonna.     L'operazione inversa non può essere automaticamente calcolata. Se non è stata fornita al costruttore, questa proprietà restituirà il valore null. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.Name">
      <summary>     Ottiene il nome della colonna da eliminare. </summary>
      <returns>Nome della colonna.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.Table">
      <summary>     Ottiene il nome della tabella da cui eliminare la colonna. </summary>
      <returns>Nome della tabella.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation">
      <summary>Rappresenta un vincolo di chiave esterna eliminato da una tabella.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.#ctor(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Object)">
      <summary>     Inizializza una nuova istanza della classe DropForeignKeyOperation. </summary>
      <param name="inverse">Operazione che rappresenta il ripristino dell'eliminazione del vincolo di chiave esterna.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.#ctor(System.Object)">
      <summary>     Inizializza una nuova istanza della classe DropForeignKeyOperation.     È necessario inoltre popolare le proprietà PrincipalTable, DependentTable e DependentColumns. </summary>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.CreateDropIndexOperation">
      <summary>     Ottiene un'operazione che consente di eliminare l'indice associato nelle colonne di chiavi esterne. </summary>
      <returns>Operazione che consente di eliminare l'indice.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.Inverse">
      <summary>     Ottiene un'operazione che rappresenta il ripristino dell'eliminazione del vincolo di chiave esterna.     L'operazione inversa non può essere automaticamente calcolata. Se non è stata fornita al costruttore, questa proprietà restituirà il valore null. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropIndexOperation">
      <summary>Rappresenta l'eliminazione di un indice esistente.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropIndexOperation.#ctor(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Object)">
      <summary>     Inizializza una nuova istanza della classe DropIndexOperation. </summary>
      <param name="inverse">Operazione che rappresenta il ripristino dell'eliminazione dell'indice.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropIndexOperation.#ctor(System.Object)">
      <summary>     Inizializza una nuova istanza della classe DropIndexOperation. </summary>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropIndexOperation.Inverse">
      <summary>     Ottiene un'operazione che rappresenta il ripristino dell'eliminazione dell'indice.     L'operazione inversa non può essere automaticamente calcolata. Se non è stata fornita al costruttore, questa proprietà restituirà il valore null. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropIndexOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se una modifica è distruttiva.</summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation">
      <summary>Rappresenta l'eliminazione di una chiave primaria da una tabella.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation.#ctor(System.Object)">
      <summary>     Inizializza una nuova istanza della classe DropPrimaryKeyOperation.     È necessario inoltre popolare le proprietà Tabella e Colonne. </summary>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation.Inverse">
      <summary>     Ottiene un'operazione che consente di aggiungere la chiave primaria. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.DropTableOperation">
      <summary>Rappresenta l'eliminazione di una tabella esistente.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropTableOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.CreateTableOperation,System.Object)">
      <summary>     Inizializza una nuova istanza della classe DropTableOperation. </summary>
      <param name="name">Nome della tabella da eliminare.</param>
      <param name="inverse">Operazione che rappresenta il ripristino dell'eliminazione della tabella.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.DropTableOperation.#ctor(System.String,System.Object)">
      <summary>     Inizializza una nuova istanza della classe DropTableOperation. </summary>
      <param name="name">Nome della tabella da eliminare.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.Inverse">
      <summary>     Ottiene un'operazione che rappresenta il ripristino dell'eliminazione della tabella.     L'operazione inversa non può essere automaticamente calcolata. Se non è stata fornita al costruttore, questa proprietà restituirà il valore null. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.Name">
      <summary>     Ottiene il nome della tabella da eliminare. </summary>
      <returns>Nome della tabella.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.ForeignKeyOperation">
      <summary>Classe base per modifiche che influiscono sui vincoli di chiave esterna.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.ForeignKeyOperation.#ctor(System.Object)">
      <summary>     Inizializza una nuova istanza della classe ForeignKeyOperation. </summary>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.DependentColumns">
      <summary>     Nomi delle colonne di chiavi esterne. </summary>
      <returns>Nomi delle colonne.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.DependentTable">
      <summary>     Ottiene o imposta il nome della tabella in cui sono presenti le colonne di chiavi esterne. </summary>
      <returns>Nome della tabella.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.HasDefaultName">
      <summary>     Ottiene un valore che indica se è stato fornito un nome specifico per il vincolo di chiave esterna. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.Name">
      <summary>     Ottiene o imposta il nome del vincolo di chiave esterna.     Se non viene specificato alcun nome, verrà calcolato un nome predefinito. </summary>
      <returns>Nome del vincolo.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.PrincipalTable">
      <summary>     Ottiene o imposta il nome della tabella a cui il vincolo di chiave esterna fa riferimento. </summary>
      <returns>Nome della tabella.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.HistoryOperation">
      <summary>Classe base comune per operazioni che interessano la tabella relativa alla cronologia delle migrazioni.  La tabella relativa alla cronologia delle migrazioni viene utilizzata per archiviare un log delle migrazioni applicate al database.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.HistoryOperation.#ctor(System.String,System.String,System.Object)">
      <summary>     Inizializza una nuova istanza della classe HistoryOperation. </summary>
      <param name="table">Nome della tabella relativa alla cronologia delle migrazioni.</param>
      <param name="migrationId">Nome della migrazione interessata.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.HistoryOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.HistoryOperation.MigrationId">
      <summary>     Ottiene il nome della migrazione interessata. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.HistoryOperation.Table">
      <summary>     Ottiene il nome della tabella relativa alla cronologia delle migrazioni. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.IndexOperation">
      <summary>Classe base comune per operazioni che interessano gli indici.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.IndexOperation.#ctor(System.Object)">
      <summary>     Inizializza una nuova istanza della classe IndexOperation. </summary>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.Columns">
      <summary>     Ottiene o imposta le colonne indicizzate. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.HasDefaultName">
      <summary>     Ottiene un valore che indica se è stato fornito un nome specifico per questo indice. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.Name">
      <summary>     Ottiene o imposta il nome dell'indice.     Se non viene specificato alcun nome, verrà calcolato un nome predefinito. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.Table">
      <summary>     Ottiene o imposta la tabella alla quale appartiene l'indice. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.InsertHistoryOperation">
      <summary>Rappresenta l'inserimento di un nuovo record nella tabella relativa alla cronologia delle migrazioni. La tabella relativa alla cronologia delle migrazioni viene utilizzata per archiviare un log delle migrazioni applicate al database.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.InsertHistoryOperation.#ctor(System.String,System.String,System.Byte[],System.Object)">
      <summary>     Inizializza una nuova istanza della classe InsertHistoryOperation. </summary>
      <param name="table">Nome della tabella relativa alla cronologia delle migrazioni.</param>
      <param name="migrationId">ID del record della migrazione da inserire.</param>
      <param name="model">Valore da archiviare nella colonna del modello.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.InsertHistoryOperation.IsDestructiveChange">
      <summary>Ottiene {inserire il testo qui}.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.InsertHistoryOperation.Model">
      <summary>     Ottiene il valore da archiviare nella tabella relativa alla cronologia che rappresenta il modello di destinazione della migrazione. </summary>
      <returns>Restituisce il valore <see cref="T:System.Byte" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.InsertHistoryOperation.ProductVersion">
      <summary>     Ottiene il valore da archiviare nella tabella relativa alla cronologia che indica la versione di Entity Framework utilizzata per generare la migrazione. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.MigrationOperation">
      <summary>Rappresenta un'operazione che consente di modificare uno schema del database.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.MigrationOperation.#ctor(System.Object)">
      <summary>     Inizializza una nuova istanza della classe MigrationOperation. </summary>
      <param name="anonymousArguments">       Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MigrationOperation.AnonymousArguments">
      <summary>     Ottiene argomenti aggiuntivi che possono essere elaborati dai provider. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MigrationOperation.Inverse">
      <summary>     Ottiene un'operazione che ripristina quella corrente. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MigrationOperation.IsDestructiveChange">
      <summary>     Ottiene un valore che indica se l'operazione può determinare una perdita di dati. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.MoveTableOperation">
      <summary>Rappresenta lo spostamento di una tabella da uno schema a un altro.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.MoveTableOperation.#ctor(System.String,System.String,System.Object)">
      <summary>     Inizializza una nuova istanza della classe MoveTableOperation. </summary>
      <param name="name">Nome della tabella da spostare.</param>
      <param name="newSchema">Nome dello schema in cui spostare la tabella.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.Inverse">
      <summary>     Ottiene un'operazione che riporta la tabella nello schema originale. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.Name">
      <summary>     Ottiene il nome della tabella da spostare. </summary>
      <returns>Nome.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.NewSchema">
      <summary>     Ottiene il nome dello schema in cui spostare la tabella. </summary>
      <returns>Nome dello schema.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.PrimaryKeyOperation">
      <summary>Classe base comune che consente di rappresentare operazioni che interessano le chiavi primarie.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.#ctor(System.Object)">
      <summary>     Inizializza una nuova istanza della classe PrimaryKeyOperation. </summary>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.Columns">
      <summary>     Ottiene le colonne che costituiscono la chiave primaria. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.HasDefaultName">
      <summary>     Ottiene un valore che indica se è stato fornito un nome specifico per la chiave primaria. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se l'operazione può determinare una perdita di dati.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.Name">
      <summary>     Ottiene o imposta il nome della chiave primaria.     Se non viene specificato alcun nome, verrà calcolato un nome predefinito. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.Table">
      <summary>     Ottiene o imposta il nome della tabella contenente la chiave primaria. </summary>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.RenameColumnOperation">
      <summary>Rappresenta la ridenominazione di una colonna esistente.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.RenameColumnOperation.#ctor(System.String,System.String,System.String,System.Object)">
      <summary>     Inizializza una nuova istanza della classe RenameColumnOperation. </summary>
      <param name="table">Nome della tabella a cui appartiene la colonna.</param>
      <param name="name">Nome della colonna da rinominare.</param>
      <param name="newName">Nuovo nome della colonna.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.Inverse">
      <summary>     Ottiene un'operazione che ripristina la ridenominazione. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.Name">
      <summary>     Ottiene il nome della colonna da rinominare. </summary>
      <returns>Nome.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.NewName">
      <summary>     Ottiene il nuovo nome della colonna. </summary>
      <returns>Nuovo nome.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.Table">
      <summary>     Ottiene il nome della tabella a cui appartiene la colonna. </summary>
      <returns>Nome della tabella.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.RenameTableOperation">
      <summary>  Rappresenta la ridenominazione di una tabella esistente.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.RenameTableOperation.#ctor(System.String,System.String,System.Object)">
      <summary>     Inizializza una nuova istanza della classe RenameTableOperation. </summary>
      <param name="name">Nome della tabella da rinominare.</param>
      <param name="newName">Nuovo nome della tabella.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.Inverse">
      <summary>     Ottiene un'operazione che ripristina la ridenominazione. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se la modifica è distruttiva.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.Name">
      <summary>     Ottiene il nome della tabella da rinominare. </summary>
      <returns>Nome.</returns>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.NewName">
      <summary>     Ottiene il nuovo nome della tabella. </summary>
      <returns>Nuovo nome.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Model.SqlOperation">
      <summary>Rappresenta un'istruzione SQL specifica del provider da eseguire direttamente in relazione al database di destinazione.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Model.SqlOperation.#ctor(System.String,System.Object)">
      <summary>     Inizializza una nuova istanza della classe SqlOperation. </summary>
      <param name="sql">Comando SQL da eseguire.</param>
      <param name="anonymousArguments">     Argomenti aggiuntivi che possono essere elaborati dai provider.      Utilizzare la sintassi del tipo anonimo per specificare argomenti, ad esempio 'new { SampleArgument = "MyValue" }'. </param>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.SqlOperation.IsDestructiveChange">
      <summary>Ottiene un valore che indica se l'operazione può determinare una perdita di dati.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.SqlOperation.Sql">
      <summary>     Ottiene il comando SQL da eseguire. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Model.SqlOperation.SuppressTransaction">
      <summary>     Ottiene o imposta un valore che indica se l'istruzione deve essere eseguita all'esterno dell'ambito della transazione utilizzata per rendere transazionale il processo di migrazione.     Se impostata su true, non verrà eseguito il rollback dell'operazione in caso di esito negativo del processo di migrazione. </summary>
      <returns>true se non verrà eseguito il rollback dell'operazione in caso di esito negativo della migrazione.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator">
      <summary>   Classe di base comune per i provider che convertono le operazioni di migrazione indipendenti dal provider in comandi SQL specifici per il provider di database.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
      <summary>     Converte un set di operazioni di migrazione in codice SQL specifico per il provider di database. </summary>
      <returns>Elenco di istruzioni SQL da utilizzare per eseguire le operazioni di migrazione.</returns>
      <param name="migrationOperations">Operazioni da convertire.</param>
      <param name="providerManifestToken">Token che rappresenta la versione del database di destinazione.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Sql.MigrationStatement">
      <summary>Rappresenta un'operazione di migrazione convertita in un'istruzione SQL.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.MigrationStatement.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Sql.MigrationStatement" />.</summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Sql.MigrationStatement.Sql">
      <summary>     Ottiene o imposta il codice SQL da utilizzare per eseguire l'operazione di migrazione. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Sql.MigrationStatement.SuppressTransaction">
      <summary>     Ottiene o imposta un valore che indica se l'istruzione deve essere eseguita all'esterno dell'ambito della transazione utilizzata per rendere transazionale il processo di migrazione.     Se impostata su true, non verrà eseguito il rollback dell'operazione in caso di esito negativo del processo di migrazione. </summary>
      <returns>true se non verrà eseguito il rollback dell'operazione in caso di esito negativo del processo di migrazione; in caso contrario, false.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator">
      <summary>Rappresenta un provider per la conversione delle operazioni di migrazione indipendenti dal provider in comandi SQL eseguibili in Microsoft SQL Server Compact Edition.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.CreateConnection">
      <summary>Crea una connessione vuota per il provider corrente. Consente ai provider derivati di utilizzare una connessione diversa da <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
      <returns>Connessione vuota per il provider corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement.</summary>
      <param name="alterColumnOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement.</summary>
      <param name="dropColumnOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement.</summary>
      <param name="dropIndexOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement.</summary>
      <param name="moveTableOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement.</summary>
      <param name="renameColumnOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement.</summary>
      <param name="renameTableOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.DateTime)">
      <summary>Genera il codice SQL per specificare un valore costante DateTime predefinito impostato su una colonna.     Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito.</summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.GenerateCreateSchema(System.String)">
      <summary>Genera il codice SQL per creare uno schema di database. Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement.</summary>
      <param name="schema">Schema di database da creare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation)">
      <summary>Genera il codice SQL per contrassegnare una tabella come tabella di sistema. Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement.</summary>
      <param name="createTableOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Name(System.String)">
      <summary>Genera un nome delimitato. Il nome fornito può contenere o meno lo schema.</summary>
      <returns>Nome delimitato.</returns>
      <param name="name">Nome da delimitare.</param>
    </member>
    <member name="T:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator">
      <summary>Rappresenta un provider per la conversione delle operazioni di migrazione indipendenti dal provider in comandi SQL eseguibili in Microsoft SQL Server.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.BuildColumnType(System.Data.Entity.Migrations.Model.ColumnModel)">
      <summary>Genera il codice SQL per specificare il tipo di dati di una colonna. Questo metodo genera semplicemente il tipo effettivo, non il codice SQL per creare la colonna. </summary>
      <returns>Codice SQL che rappresenta il tipo di dati.</returns>
      <param name="column">Colonna in cui viene generato il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.CreateConnection">
      <summary>Crea una connessione vuota per il provider corrente. Consente ai provider derivati di utilizzare una connessione diversa da <see cref="T:System.Data.SqlClient.SqlConnection" />.</summary>
      <returns>Connessione vuota per il provider corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Boolean)">
      <summary>Genera il codice SQL per specificare un valore costante bool predefinito impostato su una colonna. Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito.</summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Byte[])">
      <summary>Genera il codice SQL per specificare un valore costante byte[] predefinito impostato su una colonna. Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito. </summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
      <summary>Converte un set di operazioni di migrazione in codice SQL specifico per Microsoft SQL Server. </summary>
      <returns>Elenco di istruzioni SQL da utilizzare per eseguire le operazioni di migrazione.</returns>
      <param name="migrationOperations">Operazioni da convertire.</param>
      <param name="providerManifestToken">Token che rappresenta la versione di SQL Server di destinazione (ad esempio "2005", "2008").</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="addColumnOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="addForeignKeyOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="addPrimaryKeyOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="alterColumnOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="createIndexOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="createTableOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DeleteHistoryOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.DeleteHistoryOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="deleteHistoryOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="dropColumnOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="dropForeignKeyOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="dropIndexOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="dropPrimaryKeyOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="dropTableOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.InsertHistoryOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.InsertHistoryOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="insertHistoryOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="moveTableOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="renameColumnOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="renameTableOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation)">
      <summary>Genera il codice SQL per <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation" />.     Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="sqlOperation">Operazione per cui produrre il codice SQL.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Spatial.DbGeography)">
      <summary>Genera il codice SQL per specificare un valore costante geogrpahy predefinito impostato su una colonna. Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito. </summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Spatial.DbGeometry)">
      <summary>Genera il codice SQL per specificare un valore costante geometry predefinito impostato su una colonna. Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito. </summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.DateTime)">
      <summary>Genera il codice SQL per specificare un valore costante DateTime predefinito impostato su una colonna. Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito. </summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.DateTimeOffset)">
      <summary>Genera il codice SQL per specificare un valore costante DateTimeOffset predefinito impostato su una colonna. Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito. </summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Guid)">
      <summary>Genera il codice SQL per specificare un valore costante Guid predefinito impostato su una colonna. Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito. </summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Object)">
      <summary>Genera il codice SQL per specificare un valore costante predefinito impostato su una colonna.     Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito. </summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.String)">
      <summary>Genera il codice SQL per specificare un valore costante string predefinito impostato su una colonna. Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito. </summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.TimeSpan)">
      <summary>Genera il codice SQL per specificare un valore costante TimeSpan predefinito impostato su una colonna. Questo metodo genera semplicemente il valore effettivo, non il codice SQL per impostare il valore predefinito. </summary>
      <returns>Codice SQL che rappresenta il valore predefinito.</returns>
      <param name="defaultValue">Valore da impostare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.GenerateCreateSchema(System.String)">
      <summary>Genera il codice SQL per creare uno schema di database. Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="schema">Schema di database da creare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation)">
      <summary>Genera il codice SQL per contrassegnare una tabella come tabella di sistema. Il codice SQL generato dovrà essere aggiunto utilizzando il metodo Statement. </summary>
      <param name="createTableOperation">Tabella da contrassegnare come tabella di sistema.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Name(System.String)">
      <summary>Genera un nome delimitato. Il nome fornito può contenere o meno lo schema. </summary>
      <returns>Nome delimitato generato.</returns>
      <param name="name">Nome da delimitare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Quote(System.String)">
      <summary>Delimita un identificatore per SQL Server. </summary>
      <returns>Identificatore delimitato per SQL Server.</returns>
      <param name="identifier">Identificatore da delimitare.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Statement(System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>Aggiunge una nuova istruzione da eseguire sul database. </summary>
      <param name="writer">Writer contenente il codice SQL da eseguire.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Statement(System.String,System.Boolean)">
      <summary>Aggiunge una nuova istruzione da eseguire sul database. </summary>
      <param name="sql">Istruzione da eseguire.</param>
      <param name="suppressTransaction">Valore che indica se l'istruzione deve essere eseguita all'esterno dell'ambito della transazione utilizzata per rendere transazionale il processo di migrazione. Se impostata su true, non verrà eseguito il rollback dell'operazione in caso di esito negativo del processo di migrazione.</param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Writer">
      <summary>Ottiene un nuovo oggetto <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter" /> che può essere utilizzato per compilare il codice SQL. Si tratta di un semplice metodo helper per la creazione di un writer. La scrittura nel writer non comporta la registrazione del codice SQL per l'esecuzione. Il codice SQL generato dovrà essere passato al metodo Statement. </summary>
      <returns>Writer di testo vuoto da utilizzare per la generazione del codice SQL.</returns>
    </member>
    <member name="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter">
      <summary>  È uguale a T:System.CodeDom.Compiler.IndentedTextWriter ma funziona in attendibilità parziale.</summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.#ctor(System.IO.TextWriter)">
      <summary>     Inizializza una nuova istanza della classe IndentedTextWriter utilizzando il writer di testo specificato e la stringa di tabulazioni predefinita. </summary>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare per l'output. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
      <summary>     Inizializza una nuova istanza della classe IndentedTextWriter utilizzando il writer di testo specificato e la stringa di tabulazioni. </summary>
      <param name="writer">Oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare per l'output. </param>
      <param name="tabString">Stringa di tabulazioni da utilizzare per il rientro. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Close">
      <summary>     Chiude il documento in cui viene effettuata la scrittura. </summary>
    </member>
    <member name="F:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.DefaultTabString">
      <summary>     Specifica la stringa di tabulazioni predefinita. Questo campo è costante. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Encoding">
      <summary>     Ottiene la codifica che deve essere utilizzata dal writer di testo. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Flush">
      <summary>     Scarica il flusso. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Indent">
      <summary>     Ottiene o imposta il numero di spazi da utilizzare per il rientro. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.InnerWriter">
      <summary>     Ottiene l'oggetto <see cref="T:System.IO.TextWriter" /> da utilizzare. </summary>
    </member>
    <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.NewLine">
      <summary>     Ottiene o imposta il carattere di nuova riga da utilizzare. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.OutputTabs">
      <summary>     Restituisce la stringa di tabulazioni una volta per ciascun livello di rientro in base alla proprietà <see cref="P:System.CodeDom.Compiler.IndentedTextWriter.Indent" />. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Boolean)">
      <summary>     Scrive la rappresentazione testuale di un valore booleano nel flusso di testo. </summary>
      <param name="value">Valore booleano da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Char)">
      <summary>     Scrive un carattere nel flusso di testo. </summary>
      <param name="value">Carattere da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Char[])">
      <summary>     Scrive una matrice di caratteri nel flusso di testo. </summary>
      <param name="buffer">Matrice di caratteri da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
      <summary>     Scrive una sottomatrice di caratteri nel flusso di testo. </summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati. </param>
      <param name="index">Indice iniziale nel buffer. </param>
      <param name="count">Numero di caratteri da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Double)">
      <summary>     Scrive la rappresentazione testuale di un valore Double nel flusso di testo. </summary>
      <param name="value">Valore Double da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Int32)">
      <summary>     Scrive la rappresentazione testuale di un Integer nel flusso di testo. </summary>
      <param name="value">Integer da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Int64)">
      <summary>     Scrive la rappresentazione testuale di un Integer a 8 byte nel flusso di testo. </summary>
      <param name="value">Integer a 8 byte da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Object)">
      <summary>     Scrive la rappresentazione testuale di un oggetto nel flusso di testo. </summary>
      <param name="value">Oggetto da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Single)">
      <summary>     Scrive la rappresentazione testuale di un valore Single nel flusso di testo. </summary>
      <param name="value">Valore Single da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String)">
      <summary>     Scrive la stringa specificata nel flusso di testo. </summary>
      <param name="s">Stringa da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String,System.Object)">
      <summary>     Scrive una stringa formattata utilizzando la semantica specificata. </summary>
      <param name="format">Stringa di formattazione. </param>
      <param name="arg0">Oggetto da scrivere nella stringa formattata. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
      <summary>     Scrive una stringa formattata utilizzando la semantica specificata. </summary>
      <param name="format">Stringa di formattazione da utilizzare. </param>
      <param name="arg0">Primo oggetto da scrivere nella stringa formattata. </param>
      <param name="arg1">Secondo oggetto da scrivere nella stringa formattata. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String,System.Object[])">
      <summary>     Scrive una stringa formattata utilizzando la semantica specificata. </summary>
      <param name="format">Stringa di formattazione da utilizzare. </param>
      <param name="arg">Matrice di argomenti per l'output. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine">
      <summary>     Scrive un terminatore di riga. </summary>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Boolean)">
      <summary>     Scrive nel flusso di testo la rappresentazione testuale di un valore booleano seguita da un terminatore di riga. </summary>
      <param name="value">Valore booleano da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Char)">
      <summary>     Scrive nel flusso di testo un carattere seguito da un terminatore di riga. </summary>
      <param name="value">Carattere da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Char[])">
      <summary>     Scrive nel flusso di testo una matrice di caratteri seguita da un terminatore di riga. </summary>
      <param name="buffer">Matrice di caratteri da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
      <summary>     Scrive nel flusso di testo una sottomatrice di caratteri seguita da un terminatore di riga. </summary>
      <param name="buffer">Matrice di caratteri da cui scrivere i dati. </param>
      <param name="index">Indice iniziale nel buffer. </param>
      <param name="count">Numero di caratteri da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Double)">
      <summary>     Scrive nel flusso di testo la rappresentazione testuale di un valore Double seguita da un terminatore di riga. </summary>
      <param name="value">Valore Double da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Int32)">
      <summary>     Scrive nel flusso di testo la rappresentazione testuale di un Integer seguita da un terminatore di riga. </summary>
      <param name="value">Integer da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Int64)">
      <summary>     Scrive nel flusso di testo la rappresentazione testuale di un Integer a 8 byte seguita da un terminatore di riga. </summary>
      <param name="value">Integer a 8 byte da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Object)">
      <summary>     Scrive nel flusso di testo la rappresentazione testuale di un oggetto seguita da un terminatore di riga. </summary>
      <param name="value">Oggetto da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Single)">
      <summary>     Scrive nel flusso di testo la rappresentazione testuale di un valore Single seguita da un terminatore di riga. </summary>
      <param name="value">Valore Single da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String)">
      <summary>     Scrive nel flusso di testo la stringa specificata seguita da un terminatore di riga. </summary>
      <param name="s">Stringa da scrivere. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String,System.Object)">
      <summary>     Scrive una stringa formattata seguita da un terminatore di riga, utilizzando la semantica specificata. </summary>
      <param name="format">Stringa di formattazione. </param>
      <param name="arg0">Oggetto da scrivere nella stringa formattata. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
      <summary>     Scrive una stringa formattata seguita da un terminatore di riga, utilizzando la semantica specificata. </summary>
      <param name="format">Stringa di formattazione da utilizzare. </param>
      <param name="arg0">Primo oggetto da scrivere nella stringa formattata. </param>
      <param name="arg1">Secondo oggetto da scrivere nella stringa formattata. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String,System.Object[])">
      <summary>     Scrive una stringa formattata seguita da un terminatore di riga, utilizzando la semantica specificata. </summary>
      <param name="format">Stringa di formattazione da utilizzare. </param>
      <param name="arg">Matrice di argomenti per l'output. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.UInt32)">
      <summary>     Scrive nel flusso di testo la rappresentazione testuale di un valore UInt32 seguita da un terminatore di riga. </summary>
      <param name="value">Valore UInt32 per l'output. </param>
    </member>
    <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLineNoTabs(System.String)">
      <summary>     Scrive la stringa specificata in una riga priva di tabulazioni. </summary>
      <param name="s">Stringa da scrivere. </param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1">
      <summary> Consente di eseguire la configurazione di un tipo complesso in un modello.  Un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.Types.ComplexTypeConfiguration" /> può essere ottenuto utilizzando il metodo <see cref="M:System.Data.Entity.DbModelBuilder.ComplexType``1" /> su un oggetto oppure un tipo personalizzato derivato dall'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1" /> può essere registrato utilizzando la proprietà <see cref="P:System.Data.Entity.DbModelBuilder.Configurations" />. </summary>
      <typeparam name="TComplexType">Tipo complesso da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.#ctor">
      <summary> Inizializza una nuova istanza di <see cref="T:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1">
      <summary>Consente di eseguire la configurazione di un tipo di entità in un modello.  Un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" /> può essere ottenuto utilizzando il metodo Entity sull'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" /> oppure un tipo personalizzato derivato dall'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" /> può essere registrato utilizzando la proprietà Configurations sull'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />. </summary>
      <typeparam name="TEntityType">Rappresenta il tipo di entità.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.#ctor">
      <summary>Inizializza una nuova istanza di <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasEntitySetName(System.String)">
      <summary> Configura il nome del set di entità da utilizzare per questo tipo di entità. Il nome del set di entità può essere configurato solo per il tipo di base in ogni set. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="entitySetName">Nome del set di entità.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary> Configura le proprietà di chiave primaria per questo tipo di entità. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="keyExpression"> Espressione lambda che rappresenta la proprietà da utilizzare come chiave primaria.  Ad esempio, in C# t =&gt; t.Id     e in Visual Basic .Net Function(t) t.Id.  Se la chiave primaria è costituita da più proprietà, specificare un tipo anonimo che include le proprietà.  Ad esempio, in C# t =&gt; new { t.Id1, t.Id2 } e in Visual Basic .Net Function(t) New From { t.Id1, t.Id2 }.</param>
      <typeparam name="TKey">Tipo di chiave.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{``0}}})">
      <summary> Configura una relazione molti da questo tipo di entità. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione per la relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Tipo dell'entità nell'altra entità finale della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary> Configura una relazione facoltativa da questo tipo di entità. Le istanze del tipo di entità potranno essere salvate nel database senza la specifica di questa relazione. La chiave esterna nel database sarà nullable. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione per la relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Tipo dell'entità nell'altra entità finale della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary> Configura una relazione obbligatoria da questo tipo di entità. Le istanze del tipo di entità non potranno essere salvate nel database a meno che non sia specificata questa relazione. La chiave esterna nel database sarà non nullable. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione per la relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty. </param>
      <typeparam name="TTargetEntity">Tipo dell'entità nell'altra entità finale della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.Map``1(System.Action{System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration{``0}})">
      <summary> Consente la configurazione avanzata correlata alla modalità di esecuzione del mapping di un tipo di entità derivato allo schema del database. Le chiamate a questo metodo sono aggiuntive, quindi le chiamate successive non eseguiranno l'override della configurazione già eseguita dalle chiamate precedenti a questo metodo. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="derivedTypeMapConfigurationAction">Azione che esegue la configurazione su un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1" />.</param>
      <typeparam name="TDerived">Tipo di entità derivata da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.Map(System.Action{System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration{`0}})">
      <summary> Consente la configurazione avanzata correlata alla modalità di esecuzione del mapping di questo tipo di entità allo schema del database. Per impostazione predefinita, qualsiasi configurazione verrà applicata anche a qualsiasi tipo derivato da questo tipo di entità.  I tipi derivati possono essere configurati utilizzando l'overload specifico di questo metodo che configura un tipo derivato o tramite un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" /> per il tipo derivato.  Le proprietà di un'entità possono essere suddivise tra più tabelle tramite più chiamate a questo metodo.  Le chiamate sono aggiuntive, quindi le chiamate successive non eseguiranno l'override della configurazione già eseguita dalle chiamate precedenti a questo metodo. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="entityMappingConfigurationAction">Azione che esegue la configurazione su un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1" />.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.ToTable(System.String)">
      <summary>Configura il nome della tabella a cui viene eseguito il mapping di questo tipo di entità. </summary>
      <param name="tableName">Nome della tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1.ToTable(System.String,System.String)">
      <summary> Configura il nome della tabella a cui viene eseguito il mapping di questo tipo di entità. </summary>
      <param name="tableName">Nome della tabella.</param>
      <param name="schemaName">Schema del database della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.ModelValidationException">
      <summary> Eccezione generata dall'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" /> se viene generato un modello non valido durante la relativa creazione. </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ModelValidationException.#ctor">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.ModelValidationException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ModelValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.ModelValidationException" />.</summary>
      <param name="info">Informazioni di serializzazione.</param>
      <param name="context">Contesto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ModelValidationException.#ctor(System.String)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.ModelValidationException" />. </summary>
      <param name="message">Messaggio dell'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.ModelValidationException.#ctor(System.String,System.Exception)">
      <summary> Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.ModelValidationException" />. </summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.AssociationMappingConfiguration">
      <summary> Classe base per eseguire la configurazione di una relazione. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.AssociationMappingConfiguration.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.AssociationMappingConfiguration" />.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration">
      <summary> Utilizzato per configurare una proprietà <see cref="T:System.byte[]" /> di un tipo di entità o di un tipo complesso. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasColumnName(System.String)">
      <summary> Configura il nome della colonna di database utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary> Configura l'ordine della colonna di database utilizzata per archiviare la proprietà. Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasColumnType(System.String)">
      <summary> Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})">
      <summary>     Configura la modalità con cui i valori della proprietà vengono generati dal database. </summary>
      <returns>Stessa istanza di BinaryPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">     Pattern utilizzato per la generazione dei valori per la proprietà nel database.     L'impostazione "null" rimuoverà il facet basato su pattern generato dal database dalla proprietà.     Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando "None". </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.HasMaxLength(System.Nullable{System.Int32})">
      <summary> Configura la proprietà in modo che disponga della lunghezza massima specificata. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="value"> Lunghezza massima per la proprietà. L'impostazione "null" rimuoverà qualsiasi restrizione di lunghezza massima dalla proprietà. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsConcurrencyToken">
      <summary> Configura la proprietà da utilizzare come token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})">
      <summary> Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken"> Valore che indica se la proprietà è o meno un token di concorrenza. L'impostazione "null" rimuoverà il facet del token di concorrenza dalla proprietà. Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando "false". </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsFixedLength">
      <summary> Configura la proprietà in modo che sia a lunghezza fissa. Utilizzare HasMaxLength per impostare la lunghezza a cui è fissa la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsMaxLength">
      <summary> Configura la proprietà per consentire la lunghezza massima supportata dal provider del database. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsOptional">
      <summary> Configura la proprietà in modo che sia facoltativa. La colonna di database utilizzata per archiviare questa proprietà sarà nullable. Le proprietà <see cref="T:System.byte[]" /> sono facoltative per impostazione predefinita. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsRequired">
      <summary> Configura la proprietà in modo che sia obbligatoria. La colonna di database utilizzata per archiviare questa proprietà sarà non nullable. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsRowVersion">
      <summary> Configura la proprietà in modo che sia una versione di riga nel database. Il tipo effettivo di dati varierà a seconda del provider del database utilizzato. L'impostazione della proprietà in modo che sia una versione di riga la configurerà automaticamente affinché sia un token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.IsVariableLength">
      <summary> Configura la proprietà in modo che sia a lunghezza variabile. Le proprietà <see cref="T:System.byte[]" /> sono a lunghezza variabile per impostazione predefinita. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.BinaryPropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration">
      <summary> Configura una relazione che può supportare la funzionalità di eliminazione a catena. </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.WillCascadeOnDelete">
      <summary> Configura l'eliminazione a catena in modo che sia abilitata per la relazione. </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.CascadableNavigationPropertyConfiguration.WillCascadeOnDelete(System.Boolean)">
      <summary> Configura un valore che indica se l'eliminazione a catena è o meno abilitata per la relazione. </summary>
      <param name="value">true se l'eliminazione a catena è abilitata; in caso contrario, false.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar">
      <summary> Consente la registrazione di classi delle configurazioni derivate per entità e tipi complessi con un oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />. </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.Add``1(System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration{``0})">
      <summary> Aggiunge un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1" /> all'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />. Per ogni tipo in un modello può essere aggiunto un unico oggetto <see cref="T:System.Data.Entity.ModelConfiguration.ComplexTypeConfiguration`1" />. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="complexTypeConfiguration">Configurazione del tipo complesso da aggiungere.</param>
      <typeparam name="TComplexType">Tipo complesso configurato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.Add``1(System.Data.Entity.ModelConfiguration.EntityTypeConfiguration{``0})">
      <summary> Aggiunge un oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" /> all'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />. Per ogni tipo in un modello può essere aggiunto un unico oggetto <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" />. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="entityTypeConfiguration">Configurazione del tipo di entità da aggiungere.</param>
      <typeparam name="TEntityType">Tipo di entità configurato.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConfigurationRegistrar.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration">
      <summary> Consente la personalizzazione delle convenzioni utilizzate da un'istanza di <see cref="T:System.Data.Entity.DbModelBuilder" />. Attualmente la rimozione di una o più convenzioni predefinite è l'unica operazione supportata. Le convenzioni predefinite sono disponibili nello spazio dei nomi <see cref="N:System.Data.Entity.ModelConfiguration.Conventions" />. </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.Remove``1">
      <summary>Disabilita una convenzione per l'oggetto <see cref="T:System.Data.Entity.DbModelBuilder" />. Le convenzioni predefinite disponibili per la rimozione possono essere trovate nello spazio dei nomi <see cref="N:System.Data.Entity.ModelConfiguration.Conventions" />. </summary>
      <typeparam name="TConvention">Tipo della convenzione da disabilitare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ConventionsConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration">
      <summary> Utilizzato per configurare una proprietà <see cref="T:System.DateTime" /> di un tipo di entità o di un tipo complesso. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First. Per ulteriori informazioni, vedere <see cref="T:System.Data.Entity.DbModelBuilder" />. </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnName(System.String)">
      <summary> Configura il nome della colonna di database utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary> Configura l'ordine della colonna di database utilizzata per archiviare la proprietà. Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasColumnType(System.String)">
      <summary> Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})">
      <summary>     Configura la modalità con cui i valori della proprietà vengono generati dal database. </summary>
      <returns>Stessa istanza di DateTimePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">     Pattern utilizzato per la generazione dei valori per la proprietà nel database.     L'impostazione "null" rimuoverà il facet basato su pattern generato dal database dalla proprietà.     Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando "None". </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.HasPrecision(System.Byte)">
      <summary> Configura la precisione della proprietà. Se il provider del database non supporta la precisione per il tipo di dati della colonna, il valore viene ignorato. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="value">Precisione della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsConcurrencyToken">
      <summary> Configura la proprietà da utilizzare come token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})">
      <summary> Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken"> Valore che indica se la proprietà è o meno un token di concorrenza. L'impostazione "null" rimuoverà il facet del token di concorrenza dalla proprietà. Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando "false". </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsOptional">
      <summary> Configura la proprietà in modo che sia facoltativa. La colonna di database utilizzata per archiviare questa proprietà sarà nullable. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.IsRequired">
      <summary> Configura la proprietà in modo che sia obbligatoria. La colonna di database utilizzata per archiviare questa proprietà sarà non nullable. Le proprietà <see cref="T:System.DateTime" /> sono obbligatorie per impostazione predefinita. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DateTimePropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration">
      <summary> Utilizzato per configurare una proprietà <see cref="T:System.decimal" /> di un tipo di entità o di un tipo complesso.  Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasColumnName(System.String)">
      <summary> Configura il nome della colonna di database utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary> Configura l'ordine della colonna di database utilizzata per archiviare la proprietà. Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasColumnType(System.String)">
      <summary> Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})">
      <summary>     Configura la modalità con cui i valori della proprietà vengono generati dal database. </summary>
      <returns>Stessa istanza di DecimalPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">     Pattern utilizzato per la generazione dei valori per la proprietà nel database.     L'impostazione "null" rimuoverà il facet basato su pattern generato dal database dalla proprietà.     Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando "None". </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.HasPrecision(System.Byte,System.Byte)">
      <summary> Configura la precisione e la scala della proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="precision">Precisione della proprietà.</param>
      <param name="scale">Scala della proprietà.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.IsConcurrencyToken">
      <summary> Configura la proprietà da utilizzare come token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})">
      <summary> Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken"> Valore che indica se la proprietà è o meno un token di concorrenza. L'impostazione "null" rimuoverà il facet del token di concorrenza dalla proprietà. Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando "false". </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.IsOptional">
      <summary> Configura la proprietà in modo che sia facoltativa. La colonna di database utilizzata per archiviare questa proprietà sarà nullable. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.IsRequired">
      <summary> Configura la proprietà in modo che sia obbligatoria. La colonna di database utilizzata per archiviare questa proprietà sarà non nullable. Le proprietà <see cref="T:System.decimal" /> sono obbligatorie per impostazione predefinita. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DecimalPropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1">
      <summary> Configura una relazione che può supportare proprietà di chiave esterna esposte nel modello a oggetti. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
      <typeparam name="TDependentEntityType">Tipo di entità dipendente.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary> Configura la relazione per l'utilizzo di proprietà di chiave esterna esposte nel modello a oggetti. Se le proprietà di chiave esterna non sono esposte nel modello a oggetti, utilizzare il metodo Map.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="foreignKeyExpression">Espressione lambda che rappresenta la proprietà da utilizzare come chiave esterna. Se la chiave esterna è costituita da più proprietà, specificare un tipo anonimo che include le proprietà. Quando si utilizzano più proprietà di chiave esterna, le proprietà devono essere specificate nello stesso ordine in cui le proprietà di chiave primaria sono state configurate per il tipo di entità principale.</param>
      <typeparam name="TKey">Tipo di chiave.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.DependentNavigationPropertyConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1">
      <summary> Configura il mapping di tabelle e colonne per un tipo di entità o un subset di proprietà da un tipo di entità. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
      <typeparam name="TEntityType">Tipo di entità di cui eseguire il mapping.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.MapInheritedProperties">
      <summary> Esegue di nuovo il mapping di tutte le proprietà ereditate dai tipi di base.  Quando si configura un tipo derivato di cui eseguire il mapping a una tabella, tale operazione causerà l'inclusione di tutte le proprietà nella tabella anziché solo delle proprietà non ereditate. Questo metodo è noto come mapping di tabella per tipo concreto (TPC). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Properties``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary> Configura le proprietà che verranno incluse in questo frammento di mapping. Se questo metodo non viene chiamato, verranno configurate tutte le proprietà che non sono state ancora incluse in un frammento di mapping. </summary>
      <param name="propertiesExpression"> Espressione lambda in un tipo anonimo che contiene le proprietà di cui eseguire il mapping.</param>
      <typeparam name="TObject">Un tipo anonimo che include le proprietà di cui eseguire il mapping.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Requires``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary> Configura la condizione del discriminatore utilizzata per distinguere i tipi in una gerarchia di ereditarietà. </summary>
      <returns>Oggetto di configurazione per configurare ulteriormente la condizione del discriminatore.</returns>
      <param name="property"> Espressione lambda che rappresenta la proprietà utilizzata per la discriminazione tra i tipi. </param>
      <typeparam name="TProperty">Tipo della proprietà utilizzata per la discriminazione tra i tipi.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.Requires(System.String)">
      <summary> Configura la colonna discriminatore utilizzata per distinguere i tipi in una gerarchia di ereditarietà. </summary>
      <returns>Oggetto di configurazione per configurare ulteriormente la colonna discriminatore e i valori discriminanti.</returns>
      <param name="discriminator">Nome della colonna discriminatore.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.ToTable(System.String)">
      <summary> Configura il nome della tabella a cui deve essere eseguito il mapping. </summary>
      <param name="tableName">Nome della tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.EntityMappingConfiguration`1.ToTable(System.String,System.String)">
      <summary> Configura il nome e lo schema della tabella a cui deve essere eseguito il mapping. </summary>
      <param name="tableName">Nome della tabella.</param>
      <param name="schemaName">Schema della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration">
      <summary>Rappresenta una configurazione di mapping per un'associazione di chiavi esterne.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.Equals(System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration)">
      <summary>Determina se l'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration" /> specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="other">Oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration" /> da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto da confrontare con l'oggetto corrente.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.GetHashCode">
      <summary>Utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.MapKey(System.String[])">
      <summary> Configura il nome delle colonne per la chiave esterna. </summary>
      <returns>Stessa istanza di <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="keyColumnNames"> Nomi di colonne di chiavi esterne. Quando si utilizzano più proprietà di chiave esterna, le proprietà devono essere specificate nello stesso ordine in cui sono state configurate le proprietà di chiave primaria per il tipo di entità di destinazione. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.ToTable(System.String)">
      <summary>Configura il nome della tabella in cui risiedono le colonne di chiavi esterne.</summary>
      <returns>Stessa istanza di <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="tableName">Nome della tabella da configurare.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration.ToTable(System.String,System.String)">
      <summary>Configura il nome e lo schema della tabella in cui risiedono le colonne di chiavi esterne. </summary>
      <returns>Stessa istanza di <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
      <param name="schemaName">Schema della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration">
      <summary>Configura una relazione che può supportare solo proprietà di chiave esterna non esposte nel modello a oggetti. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration.Map(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyAssociationMappingConfiguration})">
      <summary>Configura la relazione per l'utilizzo di proprietà di chiave esterna non esposte nel modello a oggetti. Le colonne e la tabella possono essere personalizzate specificando un'azione di configurazione. Se viene specificata un'azione di configurazione vuota, i nomi di colonna verranno generati per convenzione. Se le proprietà di chiave esterna sono esposte nel modello a oggetti, utilizzare il metodo HasForeignKey. Non tutte le relazioni supportano l'esposizione di proprietà di chiave esterna nel modello a oggetti.</summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="configurationAction">Azione che configura le colonne di chiavi esterne e la tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ForeignKeyNavigationPropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration">
      <summary> Utilizzato per configurare una colonna con facet di lunghezza per un tipo di entità o un tipo complesso.  Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.HasMaxLength(System.Nullable{System.Int32})">
      <summary> Configura la colonna in modo che disponga della lunghezza massima specificata. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="value"> Lunghezza massima per la colonna. L'impostazione del valore su null rimuoverà qualsiasi restrizione di lunghezza massima dalla colonna e per la colonna di database verrà utilizzata una lunghezza predefinita. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.IsFixedLength">
      <summary>Configura la colonna in modo che sia a lunghezza fissa. </summary>
      <returns>true se la colonna è a lunghezza fissa; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.IsMaxLength">
      <summary> Configura la colonna per consentire la lunghezza massima supportata dal provider del database. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.IsVariableLength">
      <summary> Configura la colonna in modo che sia a lunghezza variabile. </summary>
      <returns>true se la colonna è a lunghezza variabile; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthColumnConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration">
      <summary> Utilizzato per configurare una proprietà con facet di lunghezza per un tipo di entità o un tipo complesso.  Questa funzionalità di configurazione è disponibile utilizzando l'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.HasMaxLength(System.Nullable{System.Int32})">
      <summary> Configura la proprietà in modo che disponga della lunghezza massima specificata. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="value"> Lunghezza massima per la proprietà. L'impostazione del valore su null rimuoverà qualsiasi restrizione di lunghezza massima dalla proprietà e per la colonna di database verrà utilizzata una lunghezza predefinita.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.IsFixedLength">
      <summary> Configura la proprietà in modo che sia a lunghezza fissa. Utilizzare HasMaxLength per impostare la lunghezza a cui è fissa la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.IsMaxLength">
      <summary> Configura la proprietà per consentire la lunghezza massima supportata dal provider del database. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.IsVariableLength">
      <summary> Configura la proprietà in modo che sia a lunghezza variabile. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.LengthPropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2">
      <summary> Configura una relazione molti da un tipo di entità. </summary>
      <typeparam name="TEntityType">Tipo di entità da cui ha origine la relazione.</typeparam>
      <typeparam name="TTargetEntityType">Tipo di entità che rappresenta la destinazione della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithMany">
      <summary> Configura la relazione in modo che sia di tipo molti:molti senza una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})">
      <summary> Configura la relazione in modo che sia di tipo molti:molti con una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithOptional">
      <summary> Configura la relazione in modo che sia di tipo molti:facoltativa senza una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithOptional(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary> Configura la relazione in modo che sia di tipo molti:facoltativa con una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithRequired">
      <summary> Configura la relazione in modo che sia di tipo molti:obbligatoria senza una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyNavigationPropertyConfiguration`2.WithRequired(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary> Configura la relazione in modo che sia di tipo molti:obbligatoria con una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty. </param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration">
      <summary> Configura il mapping di tabella e colonne di una relazione molti:molti. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.Equals(System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration)">
      <summary>Determina se l'oggetto <see cref="System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.IndependentAssociationMappingConfiguration" /> specificato è uguale all'oggetto corrente.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="other">Oggetto <see cref="System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.IndependentAssociationMappingConfiguration" />.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.MapLeftKey(System.String[])">
      <summary> Configura il nome delle colonne per la chiave esterna sinistra. La chiave esterna sinistra rappresenta la proprietà di navigazione specificata nella chiamata al metodo HasMany su <see cref="T:System.Data.Entity.ModelConfiguration.EntityTypeConfiguration`1" />. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="keyColumnNames"> Nomi di colonne di chiavi esterne. Quando si utilizzano più proprietà di chiave esterna, le proprietà devono essere specificate nello stesso ordine in cui sono state configurate le proprietà di chiave primaria per il tipo di entità di destinazione. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.MapRightKey(System.String[])">
      <summary> Configura il nome delle colonne per la chiave esterna destra. La chiave esterna destra rappresenta la proprietà di navigazione specificata nella chiamata al metodo WithMany. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="keyColumnNames"> Nomi di colonne di chiavi esterne. Quando si utilizzano più proprietà di chiave esterna, le proprietà devono essere specificate nello stesso ordine in cui sono state configurate le proprietà di chiave primaria per il tipo di entità di destinazione. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.ToTable(System.String)">
      <summary> Configura il nome della tabella di join per la relazione. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration.ToTable(System.String,System.String)">
      <summary> Configura il nome e lo schema della tabella di join per la relazione. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="tableName">Nome della tabella.</param>
      <param name="schemaName">Schema della tabella.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration">
      <summary> Configura una relazione molti:molti. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration.Map(System.Action{System.Data.Entity.ModelConfiguration.Configuration.ManyToManyAssociationMappingConfiguration})">
      <summary> Configura le colonne di chiavi esterne e la tabella utilizzate per archiviare la relazione. </summary>
      <param name="configurationAction">Azione che configura le colonne di chiavi esterne e la tabella.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ManyToManyNavigationPropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration">
      <summary> Configura una condizione utilizzata per discriminare tra i tipi in una gerarchia di ereditarietà basata sui valori assegnati a una proprietà. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration.HasValue">
      <summary> Configura la condizione per richiedere un valore nella proprietà.  Le righe che non dispongono di un valore assegnato alla colonna in cui viene archiviata questa proprietà si presuppone che siano del tipo di base di questo tipo di entità. </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.NotNullConditionConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2">
      <summary>Configura una relazione facoltativa da un tipo di entità. </summary>
      <typeparam name="TEntityType">Tipo di entità da cui ha origine la relazione.</typeparam>
      <typeparam name="TTargetEntityType">Tipo di entità che rappresenta la destinazione della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithMany">
      <summary> Configura la relazione in modo che sia di tipo facoltativa:molti senza una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})">
      <summary> Configura la relazione in modo che sia di tipo facoltativa:molti con una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalDependent">
      <summary> Configura la relazione in modo che sia di tipo facoltativa:facoltativa senza una proprietà di navigazione sull'altro lato della relazione. Il tipo di entità configurato sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.  Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo principale nella relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalDependent(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary> Configura la relazione in modo che sia di tipo facoltativa:facoltativa con una proprietà di navigazione sull'altro lato della relazione. Il tipo di entità configurato sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.  Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo principale nella relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal">
      <summary> Configura la relazione in modo che sia di tipo facoltativa:facoltativa senza una proprietà di navigazione sull'altro lato della relazione. Il tipo di entità configurato sarà il tipo principale nella relazione.  Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithOptionalPrincipal(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary> Configura la relazione in modo che sia di tipo facoltativa:facoltativa con una proprietà di navigazione sull'altro lato della relazione. Il tipo di entità configurato sarà il tipo principale nella relazione.  Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithRequired">
      <summary>Configura l'entità finale della relazione in modo che sia obbligatoria senza una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.OptionalNavigationPropertyConfiguration`2.WithRequired(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary>Configura l'entità finale della relazione in modo che sia obbligatoria con una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty.</param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration">
      <summary>Configura una colonna primitiva da un tipo di entità.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary> Configura l'ordine della colonna primitiva utilizzata per archiviare la proprietà. Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.HasColumnType(System.String)">
      <summary> Configura il tipo di dati della colonna primitiva utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.IsOptional">
      <summary>Configura la colonna primitiva in modo che sia facoltativa.</summary>
      <returns>true se la colonna è facoltativa; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.IsRequired">
      <summary>Configura la colonna primitiva in modo che sia obbligatoria.</summary>
      <returns>true se la colonna è obbligatoria; in caso contrario, false.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitiveColumnConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration">
      <summary> Utilizzato per configurare una proprietà primitiva di un tipo di entità o di un tipo complesso.  Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnName(System.String)">
      <summary> Configura il nome della colonna di database utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary> Configura l'ordine della colonna di database utilizzata per archiviare la proprietà. Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasColumnType(System.String)">
      <summary> Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})">
      <summary>     Configura la modalità con cui i valori della proprietà vengono generati dal database. </summary>
      <returns>Stessa istanza di PrimitivePropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">     Pattern utilizzato per la generazione dei valori per la proprietà nel database.     L'impostazione "null" rimuoverà il facet basato su pattern generato dal database dalla proprietà.     Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando "None". </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsConcurrencyToken">
      <summary> Configura la proprietà da utilizzare come token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})">
      <summary> Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken"> Valore che indica se la proprietà è o meno un token di concorrenza. L'impostazione null rimuoverà il facet del token di concorrenza dalla proprietà. Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando false. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsOptional">
      <summary> Configura la proprietà in modo che sia facoltativa. La colonna di database utilizzata per archiviare questa proprietà sarà nullable. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.IsRequired">
      <summary> Configura la proprietà in modo che sia obbligatoria. La colonna di database utilizzata per archiviare questa proprietà sarà non nullable. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.PrimitivePropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2">
      <summary> Configura una relazione obbligatoria da un tipo di entità. </summary>
      <typeparam name="TEntityType">Tipo di entità da cui ha origine la relazione.</typeparam>
      <typeparam name="TTargetEntityType">Tipo di entità che rappresenta la destinazione della relazione.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithMany">
      <summary> Configura la relazione in modo che sia di tipo obbligatoria:molti senza una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})">
      <summary> Configura la relazione in modo che sia di tipo obbligatoria:molti con una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithOptional">
      <summary> Configura la relazione in modo che sia di tipo obbligatoria:facoltativa senza una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithOptional(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary> Configura la relazione in modo che sia di tipo obbligatoria:facoltativa con una proprietà di navigazione sull'altro lato della relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithRequiredDependent">
      <summary> Configura la relazione in modo che sia di tipo obbligatoria:obbligatoria senza una proprietà di navigazione sull'altro lato della relazione. Il tipo di entità configurato sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.  Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo principale nella relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithRequiredDependent(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary> Configura la relazione in modo che sia di tipo obbligatoria:obbligatoria con una proprietà di navigazione sull'altro lato della relazione. Il tipo di entità configurato sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale.  Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo principale nella relazione. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithRequiredPrincipal">
      <summary> Configura la relazione in modo che sia di tipo obbligatoria:obbligatoria senza una proprietà di navigazione sull'altro lato della relazione. Il tipo di entità configurato sarà il tipo principale nella relazione.  Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.RequiredNavigationPropertyConfiguration`2.WithRequiredPrincipal(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
      <summary> Configura la relazione in modo che sia di tipo obbligatoria:obbligatoria con una proprietà di navigazione sull'altro lato della relazione. Il tipo di entità configurato sarà il tipo principale nella relazione.  Il tipo di entità che rappresenta la destinazione della relazione sarà il tipo dipendente e conterrà una chiave esterna per il tipo principale. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare ulteriormente la relazione.</returns>
      <param name="navigationPropertyExpression"> Espressione lambda che rappresenta la proprietà di navigazione sull'altra entità finale della relazione. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .Net Function(t) t.MyProperty.  </param>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration">
      <summary> Configura una colonna di database utilizzata per archiviare i valori stringa. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First. Per ulteriori informazioni, vedere <see cref="T:System.Data.Entity.DbModelBuilder" />. </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary> Configura l'ordine della colonna di database. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.HasColumnType(System.String)">
      <summary> Configura il tipo di dati della colonna di database. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.HasMaxLength(System.Nullable{System.Int32})">
      <summary>Configura la proprietà in modo che disponga della lunghezza massima specificata.</summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="value">Lunghezza massima per la proprietà. L'impostazione del valore su null comporterà l'utilizzo di una lunghezza predefinita per la colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsFixedLength">
      <summary> Configura la colonna in modo che sia a lunghezza fissa. Utilizzare HasMaxLength per impostare la lunghezza a cui è fissa la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsMaxLength">
      <summary> Configura la colonna per consentire la lunghezza massima supportata dal provider del database. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsOptional">
      <summary> Configura la colonna in modo che sia facoltativa. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsRequired">
      <summary> Configura la colonna in modo che sia obbligatoria. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsUnicode">
      <summary> Configura la colonna per supportare il contenuto della stringa Unicode. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsUnicode(System.Nullable{System.Boolean})">
      <summary> Configura un valore che indica se la colonna supporta o meno il contenuto della stringa Unicode. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="unicode"> Valore che indica se la colonna supporta o meno il contenuto della stringa Unicode. L'impostazione null rimuoverà il facet Unicode dalla colonna. Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando false. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.IsVariableLength">
      <summary> Configura la colonna in modo che sia a lunghezza variabile. Le colonne sono a lunghezza variabile per impostazione predefinita. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringColumnConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration">
      <summary>Utilizzato per configurare una proprietà <see cref="T:System.string" /> di un tipo di entità o di un tipo complesso. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First (vedere <see cref="T:System.Data.Entity.DbModelBuilder" />). </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasColumnName(System.String)">
      <summary>Configura il nome della colonna di database utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnName">Nome della colonna.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasColumnOrder(System.Nullable{System.Int32})">
      <summary> Configura l'ordine della colonna di database utilizzata per archiviare la proprietà. Questo metodo viene utilizzato inoltre per specificare l'ordinamento di chiavi quando un tipo di entità dispone di una chiave composta. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnOrder">Ordine di visualizzazione di questa colonna nella tabella di database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasColumnType(System.String)">
      <summary> Configura il tipo di dati della colonna di database utilizzata per archiviare la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="columnType">Nome del tipo di dati specifico del provider del database.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasDatabaseGeneratedOption(System.Nullable{System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption})">
      <summary>     Configura la modalità con cui i valori della proprietà vengono generati dal database. </summary>
      <returns>Stessa istanza di StringPropertyConfiguration in modo che possano essere concatenate più chiamate.</returns>
      <param name="databaseGeneratedOption">     Pattern utilizzato per la generazione dei valori per la proprietà nel database.     L'impostazione "null" rimuoverà il facet basato su pattern generato dal database dalla proprietà.     Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando "None". </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.HasMaxLength(System.Nullable{System.Int32})">
      <summary>Configura la proprietà in modo che disponga della lunghezza massima specificata. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="value">Lunghezza massima per la proprietà. L'impostazione di questa proprietà su null rimuoverà qualsiasi restrizione di lunghezza massima dalla proprietà e per la colonna di database verrà utilizzata una lunghezza predefinita. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsConcurrencyToken">
      <summary> Configura la proprietà da utilizzare come token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsConcurrencyToken(System.Nullable{System.Boolean})">
      <summary> Configura un valore che indica se la proprietà deve essere utilizzata o meno come token di concorrenza ottimistica. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="concurrencyToken"> Specifica se la proprietà è o meno un token di concorrenza. L'impostazione null rimuoverà il facet del token di concorrenza dalla proprietà. Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando false. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsFixedLength">
      <summary>Configura la proprietà in modo che sia a lunghezza fissa. Utilizzare HasMaxLength per impostare la lunghezza a cui è fissa la proprietà. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsMaxLength">
      <summary>Configura la proprietà per consentire la lunghezza massima supportata dal provider del database. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsOptional">
      <summary>Configura la proprietà in modo che sia facoltativa. La colonna di database utilizzata per archiviare questa proprietà sarà nullable. Le proprietà <see cref="T:System.string" /> sono facoltative per impostazione predefinita. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsRequired">
      <summary> Configura la proprietà in modo che sia obbligatoria. La colonna di database utilizzata per archiviare questa proprietà sarà non nullable. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsUnicode">
      <summary>Configura la proprietà per supportare il contenuto della stringa Unicode. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsUnicode(System.Nullable{System.Boolean})">
      <summary>Configura un valore che indica se la proprietà supporta o meno il contenuto della stringa Unicode. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
      <param name="unicode"> Valore che indica se la proprietà supporta o meno il contenuto della stringa Unicode. L'impostazione null rimuoverà il facet Unicode dalla proprietà. Il comportamento in fase di esecuzione causato da tale impostazione è analogo a quello ottenuto specificando false. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.IsVariableLength">
      <summary>Configura la proprietà in modo che sia a lunghezza variabile. Le proprietà <see cref="T:System.string" /> sono a lunghezza variabile per impostazione predefinita. </summary>
      <returns>Stessa istanza dell'oggetto <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration" /> in modo che possano essere concatenate più chiamate.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StringPropertyConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1">
      <summary>Consente di eseguire la configurazione di un tipo in un modello. </summary>
      <typeparam name="TStructuralType">Tipo da configurare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1" />.</summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary> Esclude una proprietà dal modello in modo che non venga eseguito il relativo mapping al database. </summary>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty. </param>
      <typeparam name="TProperty">Tipo della proprietà da ignorare.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
      <summary> Configura una proprietà <see cref="T:System.byte[]" /> definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Spatial.DbGeography}})">
      <summary>   Configura una proprietà <see cref="T:DbGeography" /> definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">   Espressione lambda che rappresenta la proprietà da configurare.   C#: t =&amp;gt; t.MyProperty      VB.Net: Function(t) t.MyProperty </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Data.Spatial.DbGeometry}})">
      <summary>   Configura una proprietà <see cref="T:DbGeometry" /> definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">   Espressione lambda che rappresenta la proprietà da configurare.   C#: t =&amp;gt; t.MyProperty      VB.Net: Function(t) t.MyProperty </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
      <summary> Configura una proprietà <see cref="T:System.DateTime" /> definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTimeOffset}})">
      <summary> Configura una proprietà <see cref="T:System.DateTimeOffset" /> definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})">
      <summary> Configura una proprietà <see cref="T:System.decimal" /> definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
      <summary> Configura una proprietà Nullable(<see cref="T:System.DateTime" />) definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTimeOffset}}})">
      <summary> Configura una proprietà Nullable(<see cref="T:System.DateTimeOffset" />) definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
      <summary> Configura una proprietà Nullable(<see cref="T:System.Decimal" />) definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty. </param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.TimeSpan}}})">
      <summary> Configura una proprietà Nullable(<see cref="T:System.TimeSpan" />) definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <summary> Configura una proprietà Nullable(<see cref="T:System.struct" />) definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty. </param>
      <typeparam name="T">Tipo della proprietà configurata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
      <summary> Configura una proprietà <see cref="T:System.string" /> definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression">Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.TimeSpan}})">
      <summary> Configura una proprietà <see cref="T:System.TimeSpan" /> definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary> Configura una proprietà <see cref="T:System.struct" /> definita in questo tipo. </summary>
      <returns>Oggetto di configurazione che può essere utilizzato per configurare la proprietà.</returns>
      <param name="propertyExpression"> Espressione lambda che rappresenta la proprietà da configurare. Ad esempio, in C# t =&gt; t.MyProperty e in Visual Basic .NET Function(t) t.MyProperty. </param>
      <typeparam name="T">Tipo della proprietà configurata.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.StructuralTypeConfiguration`1.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration">
      <summary> Configura una colonna discriminatore utilizzata per distinguere i tipi in una gerarchia di ereditarietà. Questa funzionalità di configurazione è esposta dall'API Office Fluent Code First. Per ulteriori informazioni, vedere <see cref="T:System.Data.Entity.DbModelBuilder" />. </summary>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.Equals(System.Object)">
      <summary>Determina se l'oggetto specificato è uguale all'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>true se gli oggetti sono uguali; in caso contrario, false.</returns>
      <param name="obj">Oggetto.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.GetHashCode">
      <summary>Viene utilizzato come funzione hash per un tipo specifico. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Codice hash per il tipo corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.GetType">
      <summary>Ottiene il tipo dell'istanza corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Tipo esatto di runtime dell'istanza corrente.</returns>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.HasValue``1(System.Nullable{``0})">
      <summary>Configura il valore del discriminatore utilizzato per identificare il tipo di entità configurato da altri tipi nella gerarchia di ereditarietà. </summary>
      <returns>Oggetto di configurazione per configurare la colonna utilizzata per archiviare i valori discriminanti.</returns>
      <param name="value">Valore da utilizzare per identificare il tipo di entità.</param>
      <typeparam name="T">Tipo del valore discriminante.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.HasValue(System.String)">
      <summary>Configura il valore del discriminatore utilizzato per identificare il tipo di entità configurato da altri tipi nella gerarchia di ereditarietà. </summary>
      <returns>Oggetto di configurazione per configurare la colonna utilizzata per archiviare i valori discriminanti.</returns>
      <param name="value">Valore da utilizzare per identificare il tipo di entità.</param>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.HasValue``1(``0)">
      <summary> Configura il valore del discriminatore utilizzato per identificare il tipo di entità configurato da altri tipi nella gerarchia di ereditarietà. </summary>
      <returns>Oggetto di configurazione per configurare la colonna utilizzata per archiviare i valori discriminanti.</returns>
      <param name="value">Valore da utilizzare per identificare il tipo di entità.</param>
      <typeparam name="T">Tipo del valore discriminante.</typeparam>
    </member>
    <member name="M:System.Data.Entity.ModelConfiguration.Configuration.ValueConditionConfiguration.ToString">
      <summary>Restituisce una stringa che rappresenta l'oggetto corrente. Questo metodo è nascosto in IntelliSense.</summary>
      <returns>Stringa che rappresenta l'oggetto corrente.</returns>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.AssociationInverseDiscoveryConvention">
      <summary>Convenzione per rilevare inversioni tra proprietà di navigazione quando tra i tipi correlati esiste una sola coppia di proprietà di navigazione.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.ColumnAttribute" /> trovate in proprietà nel modello.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnTypeCasingConvention">
      <summary> Convenzione per convertire tutti i tipi di dati che sono stati specificati in modo esplicito, utilizzando annotazioni dei dati o l'API di <see cref="T:System.Data.Entity.DbModelBuilder" />, in minuscolo. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.ComplexTypeAttribute" /> trovate in tipi nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ComplexTypeDiscoveryConvention">
      <summary>Convenzione per configurare un tipo come complesso qualora non disponga di alcuna chiave primaria, di alcun tipo di base con mapping e di alcuna proprietà di navigazione. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ConcurrencyCheckAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute" /> trovate in proprietà nel modello.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.DatabaseGeneratedAttributeConvention">
      <summary> Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.DatabaseGeneratedAttribute" /> trovate in proprietà nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.DecimalPropertyConvention">
      <summary>Convenzione per impostare la precisione su 18 e la scala su 2 per proprietà decimal. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.DeclaredPropertyOrderingConvention">
      <summary>Convenzione per spostare proprietà di chiave primaria da visualizzare per prima. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyAssociationMultiplicityConvention">
      <summary>Convenzione per distinguere tra relazione facoltativa e relazione obbligatoria in base al supporto di valori Null CLR della proprietà di chiave esterna. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyNavigationPropertyAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.ForeignKeyAttribute" /> trovate in proprietà di navigazione nel modello.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ForeignKeyPrimitivePropertyAttributeConvention">
      <summary>Convenzione per elaborare le istanze di <see cref="T:System.ComponentModel.DataAnnotations.ForeignKeyAttribute" /> trovate in proprietà di chiave esterna nel modello.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.IConvention">
      <summary>Identifica convenzioni che possono essere rimosse da un'istanza di <see cref="T:System.Data.Entity.DbModelBuilder" />. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.IdKeyDiscoveryConvention">
      <summary>Convenzione per rilevare proprietà di chiave primaria.  </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.InversePropertyAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.InversePropertyAttribute" /> trovate in proprietà nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.KeyAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.KeyAttribute" /> trovate in proprietà nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ManyToManyCascadeDeleteConvention">
      <summary>Convenzione per aggiungere un'eliminazione a catena alla tabella di join da entrambe le tabelle interessate da una relazione molti-a-molti.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.MappingInheritedPropertiesSupportConvention">
      <summary>Assicura che tramite il mapping delle proprietà ereditate non viene creato un mapping non valido o non supportato</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.MaxLengthAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute" /> trovate in proprietà nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.NavigationPropertyNameForeignKeyDiscoveryConvention">
      <summary>Convenzione per individuare proprietà di chiave esterna i cui nomi sono una combinazione del nome di proprietà di navigazione dipendente e dei nomi di proprietà di chiave primaria di tipo principale. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.NotMappedPropertyAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.NotMappedAttribute" /> trovate in proprietà nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.NotMappedTypeAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.NotMappedAttribute" /> trovate in tipi nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.OneToManyCascadeDeleteConvention">
      <summary>Convenzione per abilitare l'eliminazione a catena per tutte le relazioni obbligatorie. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.OneToOneConstraintIntroductionConvention">
      <summary>Convenzione per configurare le chiavi primarie del tipo di entità dipendente come chiavi esterne in una relazione uno-a-uno. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.PluralizingEntitySetNameConvention">
      <summary>Convenzione per impostare il nome del set di entità in modo che sia una versione pluralizzata del nome del tipo di entità. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.PluralizingTableNameConvention">
      <summary>Convenzione per impostare il nome della tabella in modo che sia una versione pluralizzata del nome del tipo di entità. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.PrimaryKeyNameForeignKeyDiscoveryConvention">
      <summary>Convenzione per individuare proprietà di chiave esterna i cui nomi corrispondono ai nomi di proprietà di chiave primaria del tipo principale. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.PropertyMaxLengthConvention">
      <summary>Convenzione per impostare le lunghezze massime predefinite per tipi di proprietà che supportano facet di lunghezza. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.RequiredNavigationPropertyAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> trovate in proprietà di navigazione nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.RequiredPrimitivePropertyAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> trovate in proprietà primitive nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.SqlCePropertyMaxLengthConvention">
      <summary>Imposta una lunghezza massima predefinita di 4000 per le proprietà il cui tipo supporta facet di lunghezza quando il provider è SqlCe.</summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.StoreGeneratedIdentityKeyConvention">
      <summary>Convenzione per configurare l'identità delle chiavi primarie Integer. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.StringLengthAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" /> trovate in proprietà nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.TableAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.TableAttribute" /> trovate in tipi nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.TimestampAttributeConvention">
      <summary>Convenzione per elaborare istanze di <see cref="T:System.ComponentModel.DataAnnotations.TimestampAttribute" /> trovate in proprietà nel modello. </summary>
    </member>
    <member name="T:System.Data.Entity.ModelConfiguration.Conventions.TypeNameForeignKeyDiscoveryConvention">
      <summary>Convenzione per individuare proprietà di chiave esterna i cui nomi sono una combinazione del nome del tipo principale e dei nomi di proprietà di chiave primaria di tipo principale. </summary>
    </member>
    <member name="T:System.Data.Entity.Validation.DbEntityValidationException">
      <summary>Eccezione generata dal metodo <see cref="M:System.Data.Entity.DbContext.SaveChanges" /> quando la convalida dell'entità non viene completata.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationException" />.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Validation.DbEntityValidationResult})">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationException" />.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="entityValidationResults">Risultati della convalida.</param>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Validation.DbEntityValidationResult},System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationException" />.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="entityValidationResults">Risultati della convalida.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationException" />.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="P:System.Data.Entity.Validation.DbEntityValidationException.EntityValidationErrors">
      <summary>Restituisce tutti gli errori di convalida.</summary>
      <returns>Errori di convalida, se presenti.</returns>
    </member>
    <member name="T:System.Data.Entity.Validation.DbEntityValidationResult">
      <summary>Rappresenta i risultati della convalida per una singola entità.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbEntityValidationResult.#ctor(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IEnumerable{System.Data.Entity.Validation.DbValidationError})">
      <summary>Crea un'istanza della classe <see cref="T:System.Data.Entity.Validation.DbEntityValidationResult" />. </summary>
      <param name="entry">Voce dell'entità a cui si applicano i risultati. Mai null.</param>
      <param name="validationErrors">Elenco di istanze dell'oggetto <see cref="T:System.Data.Entity.Validation.DbValidationError" />. Non è mai Null, ma può essere vuoto, pertanto l'entità è valida. </param>
    </member>
    <member name="P:System.Data.Entity.Validation.DbEntityValidationResult.Entry">
      <summary>Ottiene l'istanza di <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" /> a cui vengono applicati i risultati.</summary>
      <returns>Oggetto <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry" />.</returns>
    </member>
    <member name="P:System.Data.Entity.Validation.DbEntityValidationResult.IsValid">
      <summary>Ottiene un indicatore se l'entità è valida.</summary>
      <returns>true se l'entità è valida; in caso contrario, false.</returns>
    </member>
    <member name="P:System.Data.Entity.Validation.DbEntityValidationResult.ValidationErrors">
      <summary>Ottiene gli errori di convalida. Questa proprietà non è mai null. </summary>
      <returns>Errori di convalida.</returns>
    </member>
    <member name="T:System.Data.Entity.Validation.DbUnexpectedValidationException">
      <summary>Eccezione generata dal metodo <see cref="M:System.Data.Entity.DbContext.GetValidationErrors" /> quando un'eccezione viene generata dal codice di convalida.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbUnexpectedValidationException.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbUnexpectedValidationException" />.</summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbUnexpectedValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbUnexpectedValidationException" /> con le informazioni di serializzazione e il contesto specificati. </summary>
      <param name="info">Informazioni di serializzazione.</param>
      <param name="context">Contesto di flusso.</param>
    </member>
    <member name="M:System.Data.Entity.Validation.DbUnexpectedValidationException.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbUnexpectedValidationException" />.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
    </member>
    <member name="M:System.Data.Entity.Validation.DbUnexpectedValidationException.#ctor(System.String,System.Exception)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.Data.Entity.Validation.DbUnexpectedValidationException" />.</summary>
      <param name="message">Messaggio dell'eccezione.</param>
      <param name="innerException">Eccezione interna.</param>
    </member>
    <member name="T:System.Data.Entity.Validation.DbValidationError">
      <summary>Errore di convalida. Può essere un errore di convalida a livello di entità o a livello di proprietà. </summary>
    </member>
    <member name="M:System.Data.Entity.Validation.DbValidationError.#ctor(System.String,System.String)">
      <summary>Crea un'istanza di <see cref="T:System.Data.Entity.Validation.DbValidationError" />.</summary>
      <param name="propertyName">Nome della proprietà non valida. Può essere null.</param>
      <param name="errorMessage">Messaggio di errore di convalida. Può essere null.</param>
    </member>
    <member name="P:System.Data.Entity.Validation.DbValidationError.ErrorMessage">
      <summary>Ottiene il messaggio di errore di convalida.</summary>
      <returns>Messaggio di errore di convalida.</returns>
    </member>
    <member name="P:System.Data.Entity.Validation.DbValidationError.PropertyName">
      <summary>Ottiene il nome della proprietà. </summary>
      <returns>Nome della proprietà non valida.</returns>
    </member>
  </members>
</doc>